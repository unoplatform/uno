#nullable enable

using System;
using System.Collections.Generic;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Windows.Globalization.NumberFormatting;

namespace Uno.UI.Tests.Windows_Globalization
{
	[TestClass]
	public class Given_NumeralSystemTranslator
	{
		[TestMethod]
		[DataRow("")]
		[DataRow("abcd")]
		[DataRow("Arab ")]
		public void When_NumeralSystemIsInvalid_Then_Throw(string numeralSystem)
		{
			var sut = new NumeralSystemTranslator();

			try
			{
				sut.NumeralSystem = numeralSystem;
			}
			catch (Exception ex)
			{
				Assert.AreEqual("The parameter is incorrect.\r\n\r\nnumeralSystem", ex.Message);
			}

			Assert.ThrowsExactly<ArgumentException>(() => sut.NumeralSystem = numeralSystem);
		}

		[TestMethod]
#pragma warning disable MSTEST0014 // DataRow should be valid - Works in our case
		[DataRow(new string[0])]
		[DataRow(new string[] { "abcd" })]
		[DataRow(new string[] { "en-US", "abcd" })]
#pragma warning restore MSTEST0014 // DataRow should be valid
		public void When_LanguagesIsInvalid_Then_Throw(IEnumerable<string> languages)
		{
			try
			{
				new NumeralSystemTranslator(languages);
			}
			catch (Exception ex)
			{
				Assert.AreEqual("The parameter is incorrect.\r\n\r\nlanguages", ex.Message);
			}

			Assert.ThrowsExactly<ArgumentException>(() => new NumeralSystemTranslator(languages));
		}

		[TestMethod]
		#region DataRows
		[DataRow("aa", "Latn", "aa")]
		[DataRow("aa-DJ", "Latn", "aa-Latn-DJ")]
		[DataRow("aa-ER", "Latn", "aa-Latn-ER")]
		[DataRow("aa-ET", "Latn", "aa-Latn-ET")]
		[DataRow("af", "Latn", "af")]
		[DataRow("af-NA", "Latn", "af-NA")]
		[DataRow("af-ZA", "Latn", "af")]
		[DataRow("agq", "Latn", "agq")]
		[DataRow("agq-CM", "Latn", "agq-Latn-CM")]
		[DataRow("ak", "Latn", "ak")]
		[DataRow("ak-GH", "Latn", "ak-Latn-GH")]
		[DataRow("sq", "Latn", "sq")]
		[DataRow("sq-AL", "Latn", "sq")]
		[DataRow("sq-MK", "Latn", "sq-MK")]
		[DataRow("gsw", "Latn", "gsw")]
		[DataRow("gsw-FR", "Latn", "gsw-FR")]
		[DataRow("gsw-LI", "Latn", "gsw-LI")]
		[DataRow("gsw-CH", "Latn", "gsw")]
		[DataRow("am", "Latn", "am")]
		[DataRow("am-ET", "Latn", "am")]
		[DataRow("ar", "Arab", "ar")]
		[DataRow("ar-DZ", "Latn", "ar-DZ")]
		[DataRow("ar-BH", "Arab", "ar-BH")]
		[DataRow("ar-TD", "Arab", "ar-TD")]
		[DataRow("ar-KM", "Arab", "ar-KM")]
		[DataRow("ar-DJ", "Arab", "ar-DJ")]
		[DataRow("ar-EG", "Arab", "ar-EG")]
		[DataRow("ar-ER", "Arab", "ar-ER")]
		[DataRow("ar-IQ", "Arab", "ar-IQ")]
		[DataRow("ar-IL", "Arab", "ar-IL")]
		[DataRow("ar-JO", "Arab", "ar-JO")]
		[DataRow("ar-KW", "Arab", "ar-KW")]
		[DataRow("ar-LB", "Arab", "ar-LB")]
		[DataRow("ar-LY", "Latn", "ar-LY")]
		[DataRow("ar-MR", "Arab", "ar-MR")]
		[DataRow("ar-MA", "Latn", "ar-MA")]
		[DataRow("ar-OM", "Arab", "ar-OM")]
		[DataRow("ar-PS", "Arab", "ar-PS")]
		[DataRow("ar-QA", "Arab", "ar-QA")]
		[DataRow("ar-SA", "Arab", "ar-SA")]
		[DataRow("ar-SO", "Arab", "ar-SO")]
		[DataRow("ar-SS", "Arab", "ar-SS")]
		[DataRow("ar-SD", "Arab", "ar-SD")]
		[DataRow("ar-SY", "Arab", "ar-SY")]
		[DataRow("ar-TN", "Latn", "ar-TN")]
		[DataRow("ar-AE", "Arab", "ar-AE")]
		[DataRow("ar-001", "Arab", "ar-001")]
		[DataRow("ar-YE", "Arab", "ar-YE")]
		[DataRow("hy", "Latn", "hy")]
		[DataRow("hy-AM", "Latn", "hy")]
		[DataRow("as", "Latn", "as")]
		[DataRow("as-IN", "Latn", "as")]
		[DataRow("ast", "Latn", "ast")]
		[DataRow("ast-ES", "Latn", "ast-Latn-ES")]
		[DataRow("asa", "Latn", "asa")]
		[DataRow("asa-TZ", "Latn", "asa-Latn-TZ")]
		[DataRow("az-Cyrl", "Latn", "az-Cyrl")]
		[DataRow("az-Cyrl-AZ", "Latn", "az-Cyrl")]
		[DataRow("az", "Latn", "az")]
		[DataRow("az-Latn", "Latn", "az-Latn")]
		[DataRow("az-Latn-AZ", "Latn", "az-Latn")]
		[DataRow("ksf", "Latn", "ksf")]
		[DataRow("ksf-CM", "Latn", "ksf-Latn-CM")]
		[DataRow("bm", "Latn", "bm")]
		[DataRow("bm-Latn-ML", "Latn", "bm-Latn-ML")]
		[DataRow("bn", "Beng", "bn")]
		[DataRow("bn-BD", "Beng", "bn-BD")]
		[DataRow("bn-IN", "Latn", "bn-IN")]
		[DataRow("bas", "Latn", "bas")]
		[DataRow("bas-CM", "Latn", "bas-Latn-CM")]
		[DataRow("ba", "Latn", "ba")]
		[DataRow("ba-RU", "Latn", "ba-Cyrl")]
		[DataRow("eu", "Latn", "eu")]
		[DataRow("eu-ES", "Latn", "eu")]
		[DataRow("be", "Latn", "be")]
		[DataRow("be-BY", "Latn", "be")]
		[DataRow("bem", "Latn", "bem")]
		[DataRow("bem-ZM", "Latn", "bem-Latn-ZM")]
		[DataRow("bez", "Latn", "bez")]
		[DataRow("bez-TZ", "Latn", "bez-Latn-TZ")]
		[DataRow("byn", "Latn", "byn")]
		[DataRow("byn-ER", "Latn", "byn-Ethi-ER")]
		[DataRow("brx", "Latn", "brx")]
		[DataRow("brx-IN", "Latn", "brx-Deva-IN")]
		[DataRow("bs-Cyrl", "Latn", "bs-Cyrl")]
		[DataRow("bs-Cyrl-BA", "Latn", "bs-Cyrl")]
		[DataRow("bs-Latn", "Latn", "bs")]
		[DataRow("bs", "Latn", "bs")]
		[DataRow("bs-Latn-BA", "Latn", "bs")]
		[DataRow("br", "Latn", "br")]
		[DataRow("br-FR", "Latn", "br-Latn")]
		[DataRow("bg", "Latn", "bg")]
		[DataRow("bg-BG", "Latn", "bg")]
		[DataRow("my", "Mymr", "my")]
		[DataRow("my-MM", "Mymr", "my")]
		[DataRow("ca", "Latn", "ca")]
		[DataRow("ca-AD", "Latn", "ca-AD")]
		[DataRow("ca-FR", "Latn", "ca-FR")]
		[DataRow("ca-IT", "Latn", "ca-IT")]
		[DataRow("ca-ES", "Latn", "ca")]
#if !WINAPPSDK
		[DataRow("ceb", "ArabExt", "fa")]
		[DataRow("ceb-Latn", "ArabExt", "fa")]
		[DataRow("ceb-Latn-PH", "ArabExt", "fa")]
#endif
		[DataRow("tzm-Arab-MA", "Latn", "tzm-Arab-MA")]
		[DataRow("tzm-Latn-MA", "Latn", "tzm-Latn-MA")]
		[DataRow("ku", "Arab", "ku")]
		[DataRow("ku-Arab", "Arab", "ku-Arab")]
		[DataRow("ku-Arab-IQ", "Arab", "ku-Arab")]
#if !WINAPPSDK
		[DataRow("ccp", "ArabExt", "fa")]
		[DataRow("ccp-Cakm", "ArabExt", "fa")]
		[DataRow("ccp-Cakm-BD", "ArabExt", "fa")]
		[DataRow("ccp-Cakm-IN", "ArabExt", "fa")]
#endif
		[DataRow("ce-RU", "Latn", "ce-Cyrl-RU")]
		[DataRow("chr", "Latn", "chr")]
		[DataRow("chr-Cher", "Latn", "chr-Cher")]
		[DataRow("chr-Cher-US", "Latn", "chr-Cher")]
		[DataRow("cgg", "Latn", "cgg")]
		[DataRow("cgg-UG", "Latn", "cgg-Latn-UG")]
		[DataRow("zh-Hans", "Latn", "zh-Hans")]
		[DataRow("zh", "Latn", "zh")]
		[DataRow("zh-CN", "Latn", "zh-Hans-CN")]
		[DataRow("zh-SG", "Latn", "zh-Hans-SG")]
		[DataRow("zh-Hant", "Latn", "zh-Hant")]
		[DataRow("zh-HK", "Latn", "zh-Hant-HK")]
		[DataRow("zh-MO", "Latn", "zh-Hant-MO")]
		[DataRow("zh-TW", "Latn", "zh-Hant-TW")]
		[DataRow("cu-RU", "Latn", "cu-Cyrl-RU")]
#if !WINAPPSDK
		[DataRow("swc", "ArabExt", "fa")]
#endif
		[DataRow("swc-CD", "Latn", "swc-CD")]
		[DataRow("kw", "Latn", "kw")]
		[DataRow("kw-GB", "Latn", "kw-Latn-GB")]
		[DataRow("co", "Latn", "co")]
		[DataRow("co-FR", "Latn", "co-Latn")]
		[DataRow("hr", "Latn", "hr")]
		[DataRow("hr-HR", "Latn", "hr-HR")]
		[DataRow("hr-BA", "Latn", "hr-BA")]
		[DataRow("cs", "Latn", "cs")]
		[DataRow("cs-CZ", "Latn", "cs")]
		[DataRow("da", "Latn", "da")]
		[DataRow("da-DK", "Latn", "da")]
		[DataRow("da-GL", "Latn", "da-GL")]
		[DataRow("prs", "Arab", "prs-Arab")]
		[DataRow("prs-AF", "Arab", "prs-Arab")]
		[DataRow("dv", "Latn", "dv")]
		[DataRow("dv-MV", "Latn", "dv")]
		[DataRow("dua", "Latn", "dua")]
		[DataRow("dua-CM", "Latn", "dua-Latn-CM")]
		[DataRow("nl", "Latn", "nl")]
		[DataRow("nl-AW", "Latn", "nl-AW")]
		[DataRow("nl-BE", "Latn", "nl-BE")]
		[DataRow("nl-BQ", "Latn", "nl-BQ")]
		[DataRow("nl-CW", "Latn", "nl-CW")]
		[DataRow("nl-NL", "Latn", "nl-NL")]
		[DataRow("nl-SX", "Latn", "nl-SX")]
		[DataRow("nl-SR", "Latn", "nl-SR")]
		[DataRow("dz", "Tibt", "dz")]
		[DataRow("dz-BT", "Tibt", "dz")]
		[DataRow("ebu", "Latn", "ebu")]
		[DataRow("ebu-KE", "Latn", "ebu-Latn-KE")]
		[DataRow("en", "Latn", "en")]
		[DataRow("en-AS", "Latn", "en-AS")]
		[DataRow("en-AI", "Latn", "en-AI")]
		[DataRow("en-AG", "Latn", "en-AG")]
		[DataRow("en-AU", "Latn", "en-AU")]
		[DataRow("en-AT", "Latn", "en-AT")]
		[DataRow("en-BS", "Latn", "en-BS")]
		[DataRow("en-BB", "Latn", "en-BB")]
		[DataRow("en-BE", "Latn", "en-BE")]
		[DataRow("en-BZ", "Latn", "en-BZ")]
		[DataRow("en-BM", "Latn", "en-BM")]
		[DataRow("en-BW", "Latn", "en-BW")]
		[DataRow("en-IO", "Latn", "en-IO")]
		[DataRow("en-VG", "Latn", "en-VG")]
		[DataRow("en-BI", "Latn", "en-BI")]
		[DataRow("en-CM", "Latn", "en-CM")]
		[DataRow("en-CA", "Latn", "en-CA")]
		[DataRow("en-029", "Latn", "en-029")]
		[DataRow("en-KY", "Latn", "en-KY")]
		[DataRow("en-CX", "Latn", "en-CX")]
		[DataRow("en-CC", "Latn", "en-CC")]
		[DataRow("en-CK", "Latn", "en-CK")]
		[DataRow("en-CY", "Latn", "en-CY")]
		[DataRow("en-DK", "Latn", "en-DK")]
		[DataRow("en-DM", "Latn", "en-DM")]
		[DataRow("en-ER", "Latn", "en-ER")]
		[DataRow("en-150", "Latn", "en-150")]
		[DataRow("en-FK", "Latn", "en-FK")]
		[DataRow("en-FI", "Latn", "en-FI")]
		[DataRow("en-FJ", "Latn", "en-FJ")]
		[DataRow("en-GM", "Latn", "en-GM")]
		[DataRow("en-DE", "Latn", "en-DE")]
		[DataRow("en-GH", "Latn", "en-GH")]
		[DataRow("en-GI", "Latn", "en-GI")]
		[DataRow("en-GD", "Latn", "en-GD")]
		[DataRow("en-GU", "Latn", "en-GU")]
		[DataRow("en-GG", "Latn", "en-GG")]
		[DataRow("en-GY", "Latn", "en-GY")]
		[DataRow("en-HK", "Latn", "en-HK")]
		[DataRow("en-IN", "Latn", "en-IN")]
		[DataRow("en-IE", "Latn", "en-IE")]
		[DataRow("en-IM", "Latn", "en-IM")]
		[DataRow("en-IL", "Latn", "en-IL")]
		[DataRow("en-JM", "Latn", "en-JM")]
		[DataRow("en-JE", "Latn", "en-JE")]
		[DataRow("en-KE", "Latn", "en-KE")]
		[DataRow("en-KI", "Latn", "en-KI")]
		[DataRow("en-LS", "Latn", "en-LS")]
		[DataRow("en-LR", "Latn", "en-LR")]
		[DataRow("en-MO", "Latn", "en-MO")]
		[DataRow("en-MG", "Latn", "en-MG")]
		[DataRow("en-MW", "Latn", "en-MW")]
		[DataRow("en-MY", "Latn", "en-MY")]
		[DataRow("en-MT", "Latn", "en-MT")]
		[DataRow("en-MH", "Latn", "en-MH")]
		[DataRow("en-MU", "Latn", "en-MU")]
		[DataRow("en-FM", "Latn", "en-FM")]
		[DataRow("en-MS", "Latn", "en-MS")]
		[DataRow("en-NA", "Latn", "en-NA")]
		[DataRow("en-NR", "Latn", "en-NR")]
		[DataRow("en-NL", "Latn", "en-NL")]
		[DataRow("en-NZ", "Latn", "en-NZ")]
		[DataRow("en-NG", "Latn", "en-NG")]
		[DataRow("en-NU", "Latn", "en-NU")]
		[DataRow("en-NF", "Latn", "en-NF")]
		[DataRow("en-MP", "Latn", "en-MP")]
		[DataRow("en-PK", "Latn", "en-PK")]
		[DataRow("en-PW", "Latn", "en-PW")]
		[DataRow("en-PG", "Latn", "en-PG")]
		[DataRow("en-PN", "Latn", "en-PN")]
		[DataRow("en-PR", "Latn", "en-PR")]
		[DataRow("en-PH", "Latn", "en-PH")]
		[DataRow("en-RW", "Latn", "en-RW")]
		[DataRow("en-KN", "Latn", "en-KN")]
		[DataRow("en-LC", "Latn", "en-LC")]
		[DataRow("en-VC", "Latn", "en-VC")]
		[DataRow("en-WS", "Latn", "en-WS")]
		[DataRow("en-SC", "Latn", "en-SC")]
		[DataRow("en-SL", "Latn", "en-SL")]
		[DataRow("en-SG", "Latn", "en-SG")]
		[DataRow("en-SX", "Latn", "en-SX")]
		[DataRow("en-SI", "Latn", "en-SI")]
		[DataRow("en-SB", "Latn", "en-SB")]
		[DataRow("en-ZA", "Latn", "en-ZA")]
		[DataRow("en-SS", "Latn", "en-SS")]
		[DataRow("en-SH", "Latn", "en-SH")]
		[DataRow("en-SD", "Latn", "en-SD")]
		[DataRow("en-SZ", "Latn", "en-SZ")]
		[DataRow("en-SE", "Latn", "en-SE")]
		[DataRow("en-CH", "Latn", "en-CH")]
		[DataRow("en-TZ", "Latn", "en-TZ")]
		[DataRow("en-TK", "Latn", "en-TK")]
		[DataRow("en-TO", "Latn", "en-TO")]
		[DataRow("en-TT", "Latn", "en-TT")]
		[DataRow("en-TC", "Latn", "en-TC")]
		[DataRow("en-TV", "Latn", "en-TV")]
		[DataRow("en-UG", "Latn", "en-UG")]
#if !WINAPPSDK
		[DataRow("en-AE", "Latn", "en")]
#endif
		[DataRow("en-GB", "Latn", "en-GB")]
		[DataRow("en-US", "Latn", "en-US")]
		[DataRow("en-UM", "Latn", "en-UM")]
		[DataRow("en-VI", "Latn", "en-VI")]
		[DataRow("en-VU", "Latn", "en-VU")]
		[DataRow("en-001", "Latn", "en-001")]
		[DataRow("en-ZM", "Latn", "en-ZM")]
		[DataRow("en-ZW", "Latn", "en-ZW")]
		[DataRow("eo", "Latn", "eo")]
		[DataRow("eo-001", "Latn", "eo-001")]
		[DataRow("et", "Latn", "et")]
		[DataRow("et-EE", "Latn", "et")]
		[DataRow("ee", "Latn", "ee")]
		[DataRow("ee-GH", "Latn", "ee-Latn-GH")]
		[DataRow("ee-TG", "Latn", "ee-Latn-TG")]
		[DataRow("ewo", "Latn", "ewo")]
		[DataRow("ewo-CM", "Latn", "ewo-Latn-CM")]
		[DataRow("fo", "Latn", "fo")]
		[DataRow("fo-DK", "Latn", "fo-DK")]
		[DataRow("fo-FO", "Latn", "fo")]
		[DataRow("fil", "Latn", "fil-Latn")]
		[DataRow("fil-PH", "Latn", "fil-Latn")]
		[DataRow("fi", "Latn", "fi")]
		[DataRow("fi-FI", "Latn", "fi")]
		[DataRow("fr", "Latn", "fr")]
		[DataRow("fr-DZ", "Latn", "fr-DZ")]
		[DataRow("fr-BE", "Latn", "fr-BE")]
		[DataRow("fr-BJ", "Latn", "fr-BJ")]
		[DataRow("fr-BF", "Latn", "fr-BF")]
		[DataRow("fr-BI", "Latn", "fr-BI")]
		[DataRow("fr-CM", "Latn", "fr-CM")]
		[DataRow("fr-CA", "Latn", "fr-CA")]
		[DataRow("fr-029", "Latn", "fr-029")]
		[DataRow("fr-CF", "Latn", "fr-CF")]
		[DataRow("fr-TD", "Latn", "fr-TD")]
		[DataRow("fr-KM", "Latn", "fr-KM")]
		[DataRow("fr-CG", "Latn", "fr-CG")]
		[DataRow("fr-CD", "Latn", "fr-CD")]
		[DataRow("fr-CI", "Latn", "fr-CI")]
		[DataRow("fr-DJ", "Latn", "fr-DJ")]
		[DataRow("fr-GQ", "Latn", "fr-GQ")]
		[DataRow("fr-FR", "Latn", "fr-FR")]
		[DataRow("fr-GF", "Latn", "fr-GF")]
		[DataRow("fr-PF", "Latn", "fr-PF")]
		[DataRow("fr-GA", "Latn", "fr-GA")]
		[DataRow("fr-GP", "Latn", "fr-GP")]
		[DataRow("fr-GN", "Latn", "fr-GN")]
		[DataRow("fr-HT", "Latn", "fr-HT")]
		[DataRow("fr-LU", "Latn", "fr-LU")]
		[DataRow("fr-MG", "Latn", "fr-MG")]
		[DataRow("fr-ML", "Latn", "fr-ML")]
		[DataRow("fr-MQ", "Latn", "fr-MQ")]
		[DataRow("fr-MR", "Latn", "fr-MR")]
		[DataRow("fr-MU", "Latn", "fr-MU")]
		[DataRow("fr-YT", "Latn", "fr-YT")]
		[DataRow("fr-MA", "Latn", "fr-MA")]
		[DataRow("fr-NC", "Latn", "fr-NC")]
		[DataRow("fr-NE", "Latn", "fr-NE")]
		[DataRow("fr-MC", "Latn", "fr-MC")]
		[DataRow("fr-RE", "Latn", "fr-RE")]
		[DataRow("fr-RW", "Latn", "fr-RW")]
		[DataRow("fr-BL", "Latn", "fr-BL")]
		[DataRow("fr-MF", "Latn", "fr-MF")]
		[DataRow("fr-PM", "Latn", "fr-PM")]
		[DataRow("fr-SN", "Latn", "fr-SN")]
		[DataRow("fr-SC", "Latn", "fr-SC")]
		[DataRow("fr-CH", "Latn", "fr-CH")]
		[DataRow("fr-SY", "Latn", "fr-SY")]
		[DataRow("fr-TG", "Latn", "fr-TG")]
		[DataRow("fr-TN", "Latn", "fr-TN")]
		[DataRow("fr-VU", "Latn", "fr-VU")]
		[DataRow("fr-WF", "Latn", "fr-WF")]
		[DataRow("fy", "Latn", "fy")]
		[DataRow("fy-NL", "Latn", "fy")]
		[DataRow("fur", "Latn", "fur")]
		[DataRow("fur-IT", "Latn", "fur-Latn-IT")]
		[DataRow("ff", "Latn", "ff")]
		[DataRow("ff-Latn", "Latn", "ff-Latn")]
		[DataRow("ff-Latn-BF", "Latn", "ff-Latn-BF")]
		[DataRow("ff-CM", "Latn", "ff-CM")]
		[DataRow("ff-Latn-CM", "Latn", "ff-Latn-CM")]
		[DataRow("ff-Latn-GM", "Latn", "ff-Latn-GM")]
		[DataRow("ff-Latn-GH", "Latn", "ff-Latn-GH")]
		[DataRow("ff-GN", "Latn", "ff-GN")]
		[DataRow("ff-Latn-GN", "Latn", "ff-Latn-GN")]
		[DataRow("ff-Latn-GW", "Latn", "ff-Latn-GW")]
		[DataRow("ff-Latn-LR", "Latn", "ff-Latn-LR")]
		[DataRow("ff-MR", "Latn", "ff-MR")]
		[DataRow("ff-Latn-MR", "Latn", "ff-Latn-MR")]
		[DataRow("ff-Latn-NE", "Latn", "ff-Latn-NE")]
		[DataRow("ff-NG", "Latn", "ff-NG")]
		[DataRow("ff-Latn-NG", "Latn", "ff-Latn-NG")]
		[DataRow("ff-Latn-SN", "Latn", "ff-Latn-SN")]
		[DataRow("ff-Latn-SL", "Latn", "ff-Latn-SL")]
		[DataRow("gl", "Latn", "gl")]
		[DataRow("gl-ES", "Latn", "gl")]
		[DataRow("lg", "Latn", "lg")]
		[DataRow("lg-UG", "Latn", "lg-Latn-UG")]
		[DataRow("ka", "Latn", "ka")]
		[DataRow("ka-GE", "Latn", "ka")]
		[DataRow("de", "Latn", "de")]
		[DataRow("de-AT", "Latn", "de-AT")]
		[DataRow("de-BE", "Latn", "de-BE")]
		[DataRow("de-DE", "Latn", "de-DE")]
		[DataRow("de-IT", "Latn", "de-IT")]
		[DataRow("de-LI", "Latn", "de-LI")]
		[DataRow("de-LU", "Latn", "de-LU")]
		[DataRow("de-CH", "Latn", "de-CH")]
		[DataRow("el", "Latn", "el")]
		[DataRow("el-CY", "Latn", "el-CY")]
		[DataRow("el-GR", "Latn", "el")]
		[DataRow("kl", "Latn", "kl")]
		[DataRow("kl-GL", "Latn", "kl")]
		[DataRow("gn", "Latn", "gn")]
		[DataRow("gn-PY", "Latn", "gn")]
		[DataRow("gu", "Latn", "gu")]
		[DataRow("gu-IN", "Latn", "gu")]
		[DataRow("guz", "Latn", "guz")]
		[DataRow("guz-KE", "Latn", "guz-Latn-KE")]
		[DataRow("ha", "Latn", "ha")]
		[DataRow("ha-Latn", "Latn", "ha-Latn")]
		[DataRow("ha-Latn-GH", "Latn", "ha-Latn-GH")]
		[DataRow("ha-Latn-NE", "Latn", "ha-Latn-NE")]
		[DataRow("ha-Latn-NG", "Latn", "ha-Latn")]
		[DataRow("haw", "Latn", "haw-Latn")]
		[DataRow("haw-US", "Latn", "haw-Latn")]
		[DataRow("he", "Latn", "he")]
		[DataRow("he-IL", "Latn", "he")]
		[DataRow("hi", "Latn", "hi")]
		[DataRow("hi-IN", "Latn", "hi")]
		[DataRow("hu", "Latn", "hu")]
		[DataRow("hu-HU", "Latn", "hu")]
		[DataRow("is", "Latn", "is")]
		[DataRow("is-IS", "Latn", "is")]
		[DataRow("ig", "Latn", "ig")]
		[DataRow("ig-NG", "Latn", "ig-Latn")]
		[DataRow("id", "Latn", "id")]
		[DataRow("id-ID", "Latn", "id")]
		[DataRow("ia", "Latn", "ia")]
#if !WINAPPSDK
		[DataRow("ia-FR", "ArabExt", "fa")]
#endif
		[DataRow("ia-001", "Latn", "ia-001")]
		[DataRow("iu", "Latn", "iu")]
		[DataRow("iu-Latn", "Latn", "iu-Latn")]
		[DataRow("iu-Latn-CA", "Latn", "iu-Latn")]
		[DataRow("iu-Cans", "Latn", "iu-Cans")]
		[DataRow("iu-Cans-CA", "Latn", "iu-Cans")]
		[DataRow("ga", "Latn", "ga")]
		[DataRow("ga-IE", "Latn", "ga")]
		[DataRow("it", "Latn", "it")]
		[DataRow("it-IT", "Latn", "it-IT")]
		[DataRow("it-SM", "Latn", "it-SM")]
		[DataRow("it-CH", "Latn", "it-CH")]
		[DataRow("it-VA", "Latn", "it-VA")]
		[DataRow("ja", "Latn", "ja")]
		[DataRow("ja-JP", "Latn", "ja")]
		[DataRow("jv", "Latn", "jv")]
		[DataRow("jv-Latn", "Latn", "jv-Latn")]
		[DataRow("jv-Latn-ID", "Latn", "jv-Latn-ID")]
		[DataRow("dyo", "Latn", "dyo")]
		[DataRow("dyo-SN", "Latn", "dyo-Latn-SN")]
		[DataRow("kea", "Latn", "kea")]
		[DataRow("kea-CV", "Latn", "kea-Latn-CV")]
		[DataRow("kab", "Latn", "kab")]
		[DataRow("kab-DZ", "Latn", "kab-Latn-DZ")]
		[DataRow("kkj", "Latn", "kkj")]
		[DataRow("kkj-CM", "Latn", "kkj-Latn-CM")]
		[DataRow("kln", "Latn", "kln")]
		[DataRow("kln-KE", "Latn", "kln-Latn-KE")]
		[DataRow("kam", "Latn", "kam")]
		[DataRow("kam-KE", "Latn", "kam-Latn-KE")]
		[DataRow("kn", "Latn", "kn")]
		[DataRow("kn-IN", "Latn", "kn")]
		[DataRow("kr-Latn-NG", "Latn", "kr-Latn-NG")]
		[DataRow("ks", "ArabExt", "ks")]
		[DataRow("ks-Arab", "ArabExt", "ks-Arab")]
		[DataRow("ks-Arab-IN", "ArabExt", "ks-Arab-IN")]
		[DataRow("ks-Deva-IN", "Latn", "ks-Deva-IN")]
		[DataRow("kk", "Latn", "kk")]
		[DataRow("kk-KZ", "Latn", "kk")]
		[DataRow("km", "Khmr", "km")]
		[DataRow("km-KH", "Khmr", "km")]
		[DataRow("quc", "Latn", "quc")]
		[DataRow("quc-Latn-GT", "Latn", "quc-Latn")]
		[DataRow("ki", "Latn", "ki")]
		[DataRow("ki-KE", "Latn", "ki-Latn-KE")]
		[DataRow("rw", "Latn", "rw")]
		[DataRow("rw-RW", "Latn", "rw")]
		[DataRow("sw", "Latn", "sw")]
		[DataRow("sw-KE", "Latn", "sw")]
		[DataRow("sw-TZ", "Latn", "sw-TZ")]
		[DataRow("sw-UG", "Latn", "sw-UG")]
		[DataRow("kok", "Latn", "kok")]
		[DataRow("kok-IN", "Latn", "kok")]
		[DataRow("ko", "Latn", "ko")]
		[DataRow("ko-KR", "Latn", "ko")]
		[DataRow("ko-KP", "Latn", "ko-KP")]
		[DataRow("khq", "Latn", "khq")]
		[DataRow("khq-ML", "Latn", "khq-Latn-ML")]
		[DataRow("ses", "Latn", "ses")]
		[DataRow("ses-ML", "Latn", "ses-Latn-ML")]
		[DataRow("nmg", "Latn", "nmg")]
		[DataRow("nmg-CM", "Latn", "nmg-Latn-CM")]
		[DataRow("ky", "Latn", "ky")]
		[DataRow("ky-KG", "Latn", "ky-Cyrl")]
		[DataRow("ku-Arab-IR", "Arab", "ku-Arab-IR")]
		[DataRow("lkt", "Latn", "lkt")]
		[DataRow("lkt-US", "Latn", "lkt-Latn-US")]
		[DataRow("lag", "Latn", "lag")]
		[DataRow("lag-TZ", "Latn", "lag-Latn-TZ")]
		[DataRow("lo", "Latn", "lo")]
		[DataRow("lo-LA", "Latn", "lo")]
		[DataRow("la-VA", "Latn", "la")]
		[DataRow("lv", "Latn", "lv")]
		[DataRow("lv-LV", "Latn", "lv")]
		[DataRow("ln", "Latn", "ln")]
		[DataRow("ln-AO", "Latn", "ln-AO")]
		[DataRow("ln-CF", "Latn", "ln-CF")]
		[DataRow("ln-CG", "Latn", "ln-CG")]
		[DataRow("ln-CD", "Latn", "ln-CD")]
		[DataRow("lt", "Latn", "lt")]
		[DataRow("lt-LT", "Latn", "lt")]
		[DataRow("nds", "Latn", "nds")]
		[DataRow("nds-DE", "Latn", "nds-DE")]
		[DataRow("nds-NL", "Latn", "nds-NL")]
		[DataRow("dsb", "Latn", "dsb")]
		[DataRow("dsb-DE", "Latn", "dsb")]
		[DataRow("lu", "Latn", "lu")]
		[DataRow("lu-CD", "Latn", "lu-Latn-CD")]
		[DataRow("luo", "Latn", "luo")]
		[DataRow("luo-KE", "Latn", "luo-Latn-KE")]
		[DataRow("lb", "Latn", "lb")]
		[DataRow("lb-LU", "Latn", "lb")]
		[DataRow("luy", "Latn", "luy")]
		[DataRow("luy-KE", "Latn", "luy-Latn-KE")]
		[DataRow("mk", "Latn", "mk")]
		[DataRow("mk-MK", "Latn", "mk")]
		[DataRow("jmc", "Latn", "jmc")]
		[DataRow("jmc-TZ", "Latn", "jmc-Latn-TZ")]
		[DataRow("mgh", "Latn", "mgh")]
		[DataRow("mgh-MZ", "Latn", "mgh-Latn-MZ")]
		[DataRow("kde", "Latn", "kde")]
		[DataRow("kde-TZ", "Latn", "kde-Latn-TZ")]
		[DataRow("mg", "Latn", "mg")]
		[DataRow("mg-MG", "Latn", "mg-MG")]
		[DataRow("ms", "Latn", "ms")]
		[DataRow("ms-BN", "Latn", "ms-BN")]
		[DataRow("ms-MY", "Latn", "ms-MY")]
		[DataRow("ml", "Latn", "ml")]
		[DataRow("ml-IN", "Latn", "ml")]
		[DataRow("mt", "Latn", "mt")]
		[DataRow("mt-MT", "Latn", "mt")]
		[DataRow("gv", "Latn", "gv")]
		[DataRow("gv-IM", "Latn", "gv-IM")]
		[DataRow("mi", "Latn", "mi-Latn")]
		[DataRow("mi-NZ", "Latn", "mi-Latn")]
		[DataRow("arn", "Latn", "arn")]
		[DataRow("arn-CL", "Latn", "arn-Latn")]
		[DataRow("mr", "Latn", "mr")]
		[DataRow("mr-IN", "Latn", "mr")]
		[DataRow("mas", "Latn", "mas")]
		[DataRow("mas-KE", "Latn", "mas-Latn-KE")]
		[DataRow("mas-TZ", "Latn", "mas-Latn-TZ")]
		[DataRow("mzn-IR", "ArabExt", "mzn-Arab-IR")]
		[DataRow("mer", "Latn", "mer")]
		[DataRow("mer-KE", "Latn", "mer-Latn-KE")]
		[DataRow("mgo", "Latn", "mgo")]
		[DataRow("mgo-CM", "Latn", "mgo-Latn-CM")]
		[DataRow("moh", "Latn", "moh")]
		[DataRow("moh-CA", "Latn", "moh-Latn")]
		[DataRow("mn", "Latn", "mn")]
		[DataRow("mn-Cyrl", "Latn", "mn-Cyrl")]
		[DataRow("mn-MN", "Latn", "mn-Cyrl")]
		[DataRow("mn-Mong", "Latn", "mn-Mong")]
		[DataRow("mn-Mong-CN", "Latn", "mn-Mong")]
		[DataRow("mn-Mong-MN", "Latn", "mn-Mong-MN")]
		[DataRow("mfe", "Latn", "mfe")]
		[DataRow("mfe-MU", "Latn", "mfe-Latn-MU")]
		[DataRow("mua", "Latn", "mua")]
		[DataRow("mua-CM", "Latn", "mua-Latn-CM")]
		[DataRow("nqo", "Nkoo", "nqo")]
		[DataRow("nqo-GN", "Nkoo", "nqo-GN")]
		[DataRow("naq", "Latn", "naq")]
		[DataRow("naq-NA", "Latn", "naq-Latn-NA")]
		[DataRow("ne", "Latn", "ne")]
		[DataRow("ne-IN", "Deva", "ne-IN")]
		[DataRow("ne-NP", "Latn", "ne-NP")]
		[DataRow("nnh", "Latn", "nnh")]
		[DataRow("nnh-CM", "Latn", "nnh-Latn-CM")]
		[DataRow("jgo", "Latn", "jgo")]
		[DataRow("jgo-CM", "Latn", "jgo-Latn-CM")]
		[DataRow("lrc-IQ", "ArabExt", "lrc-Arab-IQ")]
		[DataRow("lrc-IR", "ArabExt", "lrc-Arab-IR")]
		[DataRow("nd", "Latn", "nd")]
		[DataRow("nd-ZW", "Latn", "nd-ZW")]
		[DataRow("no", "Latn", "no")]
		[DataRow("nb", "Latn", "nb")]
		[DataRow("nb-NO", "Latn", "nb")]
		[DataRow("nn", "Latn", "nn")]
		[DataRow("nn-NO", "Latn", "nn")]
		[DataRow("nb-SJ", "Latn", "nb-SJ")]
		[DataRow("nus", "Latn", "nus")]
		[DataRow("nus-SD", "Latn", "nus-SD")]
		[DataRow("nus-SS", "Latn", "nus-Latn-SS")]
		[DataRow("nyn", "Latn", "nyn")]
		[DataRow("nyn-UG", "Latn", "nyn-Latn-UG")]
		[DataRow("oc", "Latn", "oc")]
		[DataRow("oc-FR", "Latn", "oc-Latn")]
		[DataRow("or", "Latn", "or")]
		[DataRow("or-IN", "Latn", "or")]
		[DataRow("om", "Latn", "om")]
		[DataRow("om-ET", "Latn", "om")]
		[DataRow("om-KE", "Latn", "om-KE")]
		[DataRow("os", "Latn", "os")]
		[DataRow("os-GE", "Latn", "os-Cyrl-GE")]
		[DataRow("os-RU", "Latn", "os-Cyrl-RU")]
		[DataRow("ps", "ArabExt", "ps")]
		[DataRow("ps-AF", "ArabExt", "ps")]
#if !WINAPPSDK
		[DataRow("ps-PK", "ArabExt", "ps")]
#endif
		[DataRow("fa", "ArabExt", "fa")]
		[DataRow("fa-AF", "Arab", "fa-AF")]
		[DataRow("fa-IR", "ArabExt", "fa")]
		[DataRow("pl", "Latn", "pl")]
		[DataRow("pl-PL", "Latn", "pl")]
		[DataRow("pt", "Latn", "pt")]
		[DataRow("pt-AO", "Latn", "pt-AO")]
		[DataRow("pt-BR", "Latn", "pt-BR")]
		[DataRow("pt-CV", "Latn", "pt-CV")]
		[DataRow("pt-GQ", "Latn", "pt-GQ")]
		[DataRow("pt-GW", "Latn", "pt-GW")]
		[DataRow("pt-LU", "Latn", "pt-LU")]
		[DataRow("pt-MO", "Latn", "pt-MO")]
		[DataRow("pt-MZ", "Latn", "pt-MZ")]
		[DataRow("pt-PT", "Latn", "pt-PT")]
		[DataRow("pt-ST", "Latn", "pt-ST")]
		[DataRow("pt-CH", "Latn", "pt-CH")]
		[DataRow("pt-TL", "Latn", "pt-TL")]
		[DataRow("prg-001", "Latn", "prg-Latn-001")]
		[DataRow("qps-ploca", "Latn", "qps-ploca")]
		[DataRow("qps-ploc", "Latn", "qps-ploc")]
		[DataRow("qps-plocm", "Arab", "qps-plocm")]
		[DataRow("pa", "Latn", "pa")]
		[DataRow("pa-Arab", "ArabExt", "pa-Arab")]
		[DataRow("pa-IN", "Latn", "pa")]
		[DataRow("pa-Arab-PK", "ArabExt", "pa-Arab")]
		[DataRow("quz", "Latn", "quz-Latn")]
		[DataRow("quz-BO", "Latn", "quz-Latn-BO")]
		[DataRow("quz-EC", "Latn", "quz-Latn-EC")]
		[DataRow("quz-PE", "Latn", "quz-Latn-PE")]
		[DataRow("ksh", "Latn", "ksh")]
		[DataRow("ksh-DE", "Latn", "ksh-Latn-DE")]
		[DataRow("ro", "Latn", "ro")]
		[DataRow("ro-MD", "Latn", "ro-MD")]
		[DataRow("ro-RO", "Latn", "ro-RO")]
		[DataRow("rm", "Latn", "rm")]
		[DataRow("rm-CH", "Latn", "rm")]
		[DataRow("rof", "Latn", "rof")]
		[DataRow("rof-TZ", "Latn", "rof-Latn-TZ")]
		[DataRow("rn", "Latn", "rn")]
		[DataRow("rn-BI", "Latn", "rn-BI")]
		[DataRow("ru", "Latn", "ru")]
		[DataRow("ru-BY", "Latn", "ru-BY")]
		[DataRow("ru-KZ", "Latn", "ru-KZ")]
		[DataRow("ru-KG", "Latn", "ru-KG")]
		[DataRow("ru-MD", "Latn", "ru-MD")]
		[DataRow("ru-RU", "Latn", "ru")]
		[DataRow("ru-UA", "Latn", "ru-UA")]
		[DataRow("rwk", "Latn", "rwk")]
		[DataRow("rwk-TZ", "Latn", "rwk-Latn-TZ")]
		[DataRow("ssy", "Latn", "ssy")]
		[DataRow("ssy-ER", "Latn", "ssy-Latn-ER")]
		[DataRow("sah", "Latn", "sah")]
		[DataRow("sah-RU", "Latn", "sah-Cyrl")]
		[DataRow("saq", "Latn", "saq")]
		[DataRow("saq-KE", "Latn", "saq-Latn-KE")]
		[DataRow("smn", "Latn", "smn")]
		[DataRow("smn-FI", "Latn", "smn-Latn")]
		[DataRow("smj", "Latn", "smj")]
		[DataRow("smj-NO", "Latn", "smj-Latn-NO")]
		[DataRow("smj-SE", "Latn", "smj-Latn-SE")]
		[DataRow("se", "Latn", "se")]
		[DataRow("se-FI", "Latn", "se-Latn-FI")]
		[DataRow("se-NO", "Latn", "se-Latn-NO")]
		[DataRow("se-SE", "Latn", "se-Latn-SE")]
		[DataRow("sms", "Latn", "sms")]
		[DataRow("sms-FI", "Latn", "sms-Latn")]
		[DataRow("sma", "Latn", "sma")]
		[DataRow("sma-NO", "Latn", "sma-Latn-NO")]
		[DataRow("sma-SE", "Latn", "sma-Latn-SE")]
		[DataRow("sg", "Latn", "sg")]
		[DataRow("sg-CF", "Latn", "sg-CF")]
		[DataRow("sbp", "Latn", "sbp")]
		[DataRow("sbp-TZ", "Latn", "sbp-Latn-TZ")]
		[DataRow("sa", "Latn", "sa")]
		[DataRow("sa-IN", "Latn", "sa-Deva")]
		[DataRow("gd", "Latn", "gd")]
		[DataRow("gd-GB", "Latn", "gd-Latn")]
		[DataRow("seh", "Latn", "seh")]
		[DataRow("seh-MZ", "Latn", "seh-Latn-MZ")]
		[DataRow("sr-Cyrl", "Latn", "sr-Cyrl")]
		[DataRow("sr-Cyrl-BA", "Latn", "sr-Cyrl-BA")]
		[DataRow("sr-Cyrl-ME", "Latn", "sr-Cyrl-ME")]
		[DataRow("sr-Cyrl-RS", "Latn", "sr-Cyrl-RS")]
		[DataRow("sr-Cyrl-CS", "Latn", "sr-Cyrl-CS")]
		[DataRow("sr-Latn", "Latn", "sr-Latn")]
		[DataRow("sr", "Latn", "sr")]
		[DataRow("sr-Latn-BA", "Latn", "sr-Latn-BA")]
		[DataRow("sr-Latn-ME", "Latn", "sr-Latn-ME")]
		[DataRow("sr-Latn-RS", "Latn", "sr-Latn-RS")]
		[DataRow("sr-Latn-CS", "Latn", "sr-Latn-CS")]
		[DataRow("nso", "Latn", "nso")]
		[DataRow("nso-ZA", "Latn", "nso")]
		[DataRow("tn", "Latn", "tn")]
		[DataRow("tn-BW", "Latn", "tn-BW")]
		[DataRow("tn-ZA", "Latn", "tn-ZA")]
		[DataRow("ksb", "Latn", "ksb")]
		[DataRow("ksb-TZ", "Latn", "ksb-Latn-TZ")]
		[DataRow("sn", "Latn", "sn")]
		[DataRow("sn-Latn", "Latn", "sn-Latn")]
		[DataRow("sn-Latn-ZW", "Latn", "sn-Latn-ZW")]
		[DataRow("sd", "ArabExt", "sd")]
		[DataRow("sd-Arab", "ArabExt", "sd-Arab")]
		[DataRow("sd-Arab-PK", "ArabExt", "sd-Arab")]
		[DataRow("si", "Latn", "si")]
		[DataRow("si-LK", "Latn", "si")]
		[DataRow("sk", "Latn", "sk")]
		[DataRow("sk-SK", "Latn", "sk")]
		[DataRow("sl", "Latn", "sl")]
		[DataRow("sl-SI", "Latn", "sl")]
		[DataRow("xog", "Latn", "xog")]
		[DataRow("xog-UG", "Latn", "xog-Latn-UG")]
		[DataRow("so", "Latn", "so")]
		[DataRow("so-DJ", "Latn", "so-DJ")]
		[DataRow("so-ET", "Latn", "so-ET")]
		[DataRow("so-KE", "Latn", "so-KE")]
		[DataRow("so-SO", "Latn", "so")]
		[DataRow("st", "Latn", "st")]
		[DataRow("st-ZA", "Latn", "st")]
		[DataRow("nr", "Latn", "nr")]
		[DataRow("nr-ZA", "Latn", "nr-ZA")]
		[DataRow("st-LS", "Latn", "st-LS")]
		[DataRow("es", "Latn", "es")]
		[DataRow("es-AR", "Latn", "es-AR")]
		[DataRow("es-BZ", "Latn", "es-BZ")]
		[DataRow("es-VE", "Latn", "es-VE")]
		[DataRow("es-BO", "Latn", "es-BO")]
		[DataRow("es-BR", "Latn", "es-BR")]
		[DataRow("es-CL", "Latn", "es-CL")]
		[DataRow("es-CO", "Latn", "es-CO")]
		[DataRow("es-CR", "Latn", "es-CR")]
		[DataRow("es-CU", "Latn", "es-CU")]
		[DataRow("es-DO", "Latn", "es-DO")]
		[DataRow("es-EC", "Latn", "es-EC")]
		[DataRow("es-SV", "Latn", "es-SV")]
		[DataRow("es-GQ", "Latn", "es-GQ")]
		[DataRow("es-GT", "Latn", "es-GT")]
		[DataRow("es-HN", "Latn", "es-HN")]
		[DataRow("es-419", "Latn", "es-419")]
		[DataRow("es-MX", "Latn", "es-MX")]
		[DataRow("es-NI", "Latn", "es-NI")]
		[DataRow("es-PA", "Latn", "es-PA")]
		[DataRow("es-PY", "Latn", "es-PY")]
		[DataRow("es-PE", "Latn", "es-PE")]
		[DataRow("es-PH", "Latn", "es-PH")]
		[DataRow("es-PR", "Latn", "es-PR")]
		[DataRow("es-ES", "Latn", "es-ES")]
		[DataRow("es-US", "Latn", "es-US")]
		[DataRow("es-UY", "Latn", "es-UY")]
		[DataRow("zgh", "Latn", "zgh")]
		[DataRow("zgh-Tfng-MA", "Latn", "zgh-Tfng-MA")]
		[DataRow("zgh-Tfng", "Latn", "zgh-Tfng")]
		[DataRow("ss", "Latn", "ss")]
		[DataRow("ss-ZA", "Latn", "ss-ZA")]
		[DataRow("ss-SZ", "Latn", "ss-SZ")]
		[DataRow("sv", "Latn", "sv")]
		[DataRow("sv-AX", "Latn", "sv-AX")]
		[DataRow("sv-FI", "Latn", "sv-FI")]
		[DataRow("sv-SE", "Latn", "sv-SE")]
		[DataRow("syr", "Latn", "syr")]
		[DataRow("syr-SY", "Latn", "syr-Syrc")]
		[DataRow("shi", "Latn", "shi")]
		[DataRow("shi-Tfng", "Latn", "shi-Tfng")]
		[DataRow("shi-Tfng-MA", "Latn", "shi-Tfng-MA")]
		[DataRow("shi-Latn", "Latn", "shi-Latn")]
		[DataRow("shi-Latn-MA", "Latn", "shi-Latn-MA")]
		[DataRow("dav", "Latn", "dav")]
		[DataRow("dav-KE", "Latn", "dav-Latn-KE")]
		[DataRow("tg", "Latn", "tg")]
		[DataRow("tg-Cyrl", "Latn", "tg-Cyrl")]
		[DataRow("tg-Cyrl-TJ", "Latn", "tg-Cyrl")]
		[DataRow("tzm", "Latn", "tzm")]
		[DataRow("tzm-Latn", "Latn", "tzm-Latn")]
		[DataRow("tzm-Latn-DZ", "Latn", "tzm-Latn")]
		[DataRow("ta", "Latn", "ta")]
		[DataRow("ta-IN", "Latn", "ta-IN")]
		[DataRow("ta-MY", "Latn", "ta-MY")]
		[DataRow("ta-SG", "Latn", "ta-SG")]
		[DataRow("ta-LK", "Latn", "ta-LK")]
		[DataRow("twq", "Latn", "twq")]
		[DataRow("twq-NE", "Latn", "twq-Latn-NE")]
		[DataRow("tt", "Latn", "tt")]
		[DataRow("tt-RU", "Latn", "tt-Cyrl")]
		[DataRow("te", "Latn", "te")]
		[DataRow("te-IN", "Latn", "te")]
		[DataRow("teo", "Latn", "teo")]
		[DataRow("teo-KE", "Latn", "teo-Latn-KE")]
		[DataRow("teo-UG", "Latn", "teo-Latn-UG")]
		[DataRow("th", "Latn", "th")]
		[DataRow("th-TH", "Latn", "th")]
		[DataRow("bo", "Latn", "bo")]
		[DataRow("bo-IN", "Latn", "bo-IN")]
		[DataRow("bo-CN", "Latn", "bo-Tibt")]
		[DataRow("tig", "Latn", "tig")]
		[DataRow("tig-ER", "Latn", "tig-Ethi-ER")]
		[DataRow("ti", "Latn", "ti")]
		[DataRow("ti-ER", "Latn", "ti-ER")]
		[DataRow("ti-ET", "Latn", "ti-ET")]
		[DataRow("to", "Latn", "to")]
		[DataRow("to-TO", "Latn", "to-TO")]
		[DataRow("ts", "Latn", "ts")]
		[DataRow("ts-ZA", "Latn", "ts")]
		[DataRow("tr", "Latn", "tr")]
		[DataRow("tr-CY", "Latn", "tr-CY")]
		[DataRow("tr-TR", "Latn", "tr")]
		[DataRow("tk", "Latn", "tk")]
		[DataRow("tk-TM", "Latn", "tk-Latn")]
		[DataRow("uk", "Latn", "uk")]
		[DataRow("uk-UA", "Latn", "uk")]
		[DataRow("hsb", "Latn", "hsb")]
		[DataRow("hsb-DE", "Latn", "hsb")]
		[DataRow("ur", "Latn", "ur")]
		[DataRow("ur-IN", "ArabExt", "ur-IN")]
		[DataRow("ur-PK", "Latn", "ur-PK")]
		[DataRow("ug", "Latn", "ug")]
		[DataRow("ug-CN", "Latn", "ug-Arab")]
		[DataRow("uz-Arab", "ArabExt", "uz-Arab")]
		[DataRow("uz-Arab-AF", "ArabExt", "uz-Arab-AF")]
		[DataRow("uz-Cyrl", "Latn", "uz-Cyrl")]
		[DataRow("uz-Cyrl-UZ", "Latn", "uz-Cyrl")]
		[DataRow("uz", "Latn", "uz")]
		[DataRow("uz-Latn", "Latn", "uz-Latn")]
		[DataRow("uz-Latn-UZ", "Latn", "uz-Latn")]
		[DataRow("vai", "Latn", "vai")]
		[DataRow("vai-Vaii", "Latn", "vai-Vaii")]
		[DataRow("vai-Vaii-LR", "Latn", "vai-Vaii-LR")]
		[DataRow("vai-Latn-LR", "Latn", "vai-Latn-LR")]
		[DataRow("vai-Latn", "Latn", "vai-Latn")]
		[DataRow("ca-ES-valencia", "Latn", "ca-ES-valencia")]
		[DataRow("ve", "Latn", "ve")]
		[DataRow("ve-ZA", "Latn", "ve-ZA")]
		[DataRow("vi", "Latn", "vi")]
		[DataRow("vi-VN", "Latn", "vi")]
		[DataRow("vo", "Latn", "vo")]
		[DataRow("vo-001", "Latn", "vo-Latn-001")]
		[DataRow("vun", "Latn", "vun")]
		[DataRow("vun-TZ", "Latn", "vun-Latn-TZ")]
		[DataRow("wae", "Latn", "wae")]
		[DataRow("wae-CH", "Latn", "wae-Latn-CH")]
		[DataRow("cy", "Latn", "cy")]
		[DataRow("cy-GB", "Latn", "cy")]
		[DataRow("wal", "Latn", "wal")]
		[DataRow("wal-ET", "Latn", "wal-Ethi-ET")]
		[DataRow("wo", "Latn", "wo-Latn")]
		[DataRow("wo-SN", "Latn", "wo-Latn")]
		[DataRow("xh", "Latn", "xh")]
		[DataRow("xh-ZA", "Latn", "xh")]
		[DataRow("yav", "Latn", "yav")]
		[DataRow("yav-CM", "Latn", "yav-Latn-CM")]
		[DataRow("ii", "Latn", "ii")]
		[DataRow("ii-CN", "Latn", "ii-Yiii")]
		[DataRow("yi-001", "Latn", "yi")]
		[DataRow("yo", "Latn", "yo")]
		[DataRow("yo-BJ", "Latn", "yo-BJ")]
		[DataRow("yo-NG", "Latn", "yo-Latn")]
		[DataRow("dje", "Latn", "dje")]
		[DataRow("dje-NE", "Latn", "dje-Latn-NE")]
		[DataRow("zu", "Latn", "zu")]
		[DataRow("zu-ZA", "Latn", "zu")]
		#endregion
		public void When_UsingLanguage_Then_InitializeCorrectly(string languageTag, string numeralSystem, string resolveLanguage)
		{
			var sut = new NumeralSystemTranslator(new string[] { languageTag });
			Assert.AreEqual(numeralSystem, sut.NumeralSystem);
			Assert.AreEqual(resolveLanguage, sut.ResolvedLanguage);
		}

		[TestMethod]
		[DataRow(".1", "\u066b١")]
		[DataRow("1.", "١.")]
		[DataRow(",1", "\u066c١")]
		[DataRow("1,", "١,")]
		[DataRow("1%", "١\u066a")]
		[DataRow("%1", "\u066a١")]
		[DataRow("% 1", "% ١")]
		[DataRow("1 %", "١ %")]
		[DataRow("1\u2030", "١\u0609")]
		[DataRow("\u20301", "\u0609١")]
		[DataRow("\u2030 1", "\u2030 ١")]
		[DataRow("1 \u2030", "١ \u2030")]
		[DataRow("1,234,567,890.12", "١٬٢٣٤٬٥٦٧٬٨٩٠٫١٢")]
		[DataRow("1,234,567,890.12%", "١٬٢٣٤٬٥٦٧٬٨٩٠٫١٢٪")]
		[DataRow("1,234% ,567,890.12", "١٬٢٣٤\u066a ٬٥٦٧٬٨٩٠٫١٢")]
		public void When_NumeralSystemIsArab(string value, string expected)
		{
			var sut = new NumeralSystemTranslator();
			sut.NumeralSystem = "Arab";
			var translated = sut.TranslateNumerals(value);
			Assert.AreEqual(expected, translated);
		}

		[TestMethod]
		[DataRow(".1", "\u066b۱")]
		[DataRow("1.", "۱.")]
		[DataRow(",1", "\u066c۱")]
		[DataRow("1,", "۱,")]
		[DataRow("1%", "۱\u066a")]
		[DataRow("%1", "\u066a۱")]
		[DataRow("% 1", "% ۱")]
		[DataRow("1 %", "۱ %")]
		[DataRow("1\u2030", "۱\u0609")]
		[DataRow("\u20301", "\u0609۱")]
		[DataRow("\u2030 1", "\u2030 ۱")]
		[DataRow("1 \u2030", "۱ \u2030")]
		[DataRow("1,234,567,890.12", "۱٬۲۳۴٬۵۶۷٬۸۹۰٫۱۲")]
		[DataRow("1,234,567,890.12%", "۱٬۲۳۴٬۵۶۷٬۸۹۰٫۱۲٪")]
		[DataRow("1,234% ,567,890.12", "۱٬۲۳۴\u066a ٬۵۶۷٬۸۹۰٫۱۲")]
		public void When_NumeralSystemIsArabExt(string value, string expected)
		{
			When_NumeralSystemIsSpecific(value, expected, "ArabExt");
		}

		[TestMethod]
		[DataRow("0", "᭐")]
		[DataRow("1", "᭑")]
		[DataRow("2", "᭒")]
		[DataRow("3", "᭓")]
		[DataRow("4", "᭔")]
		[DataRow("5", "᭕")]
		[DataRow("6", "᭖")]
		[DataRow("7", "᭗")]
		[DataRow("8", "᭘")]
		[DataRow("9", "᭙")]
		[DataRow("0%", "᭐%")]
		[DataRow("123,4", "᭑᭒᭓,᭔")]
		[DataRow("123.4", "᭑᭒᭓.᭔")]
		public void When_NumeralSystemIsBali(string value, string expected)
		{
			When_NumeralSystemIsSpecific(value, expected, "Bali");
		}

		[TestMethod]
		[DataRow("0", "০")]
		[DataRow("1", "১")]
		[DataRow("2", "২")]
		[DataRow("3", "৩")]
		[DataRow("4", "৪")]
		[DataRow("5", "৫")]
		[DataRow("6", "৬")]
		[DataRow("7", "৭")]
		[DataRow("8", "৮")]
		[DataRow("9", "৯")]
		[DataRow("0%", "০%")]
		[DataRow("123,4", "১২৩,৪")]
		[DataRow("123.4", "১২৩.৪")]
		public void When_NumeralSystemIsBeng(string value, string expected)
		{
			When_NumeralSystemIsSpecific(value, expected, "Beng");
		}

		[TestMethod]
		[DataRow("0", "꩐")]
		[DataRow("1", "꩑")]
		[DataRow("2", "꩒")]
		[DataRow("3", "꩓")]
		[DataRow("4", "꩔")]
		[DataRow("5", "꩕")]
		[DataRow("6", "꩖")]
		[DataRow("7", "꩗")]
		[DataRow("8", "꩘")]
		[DataRow("9", "꩙")]
		[DataRow("0%", "꩐%")]
		[DataRow("123,4", "꩑꩒꩓,꩔")]
		[DataRow("123.4", "꩑꩒꩓.꩔")]
		public void When_NumeralSystemIsCham(string value, string expected)
		{
			When_NumeralSystemIsSpecific(value, expected, "Cham");
		}

		[TestMethod]
		[DataRow("0", "०")]
		[DataRow("1", "१")]
		[DataRow("2", "२")]
		[DataRow("3", "३")]
		[DataRow("4", "४")]
		[DataRow("5", "५")]
		[DataRow("6", "६")]
		[DataRow("7", "७")]
		[DataRow("8", "८")]
		[DataRow("9", "९")]
		[DataRow("0%", "०%")]
		[DataRow("123,4", "१२३,४")]
		[DataRow("123.4", "१२३.४")]
		public void When_NumeralSystemIsDeva(string value, string expected)
		{
			When_NumeralSystemIsSpecific(value, expected, "Deva");
		}

		[TestMethod]
		[DataRow("0", "０")]
		[DataRow("1", "１")]
		[DataRow("2", "２")]
		[DataRow("3", "３")]
		[DataRow("4", "４")]
		[DataRow("5", "５")]
		[DataRow("6", "６")]
		[DataRow("7", "７")]
		[DataRow("8", "８")]
		[DataRow("9", "９")]
		[DataRow("0%", "０%")]
		[DataRow("123,4", "１２３,４")]
		[DataRow("123.4", "１２３.４")]
		public void When_NumeralSystemIsFullWide(string value, string expected)
		{
			When_NumeralSystemIsSpecific(value, expected, "FullWide");
		}

		[TestMethod]
		[DataRow("0", "૦")]
		[DataRow("1", "૧")]
		[DataRow("2", "૨")]
		[DataRow("3", "૩")]
		[DataRow("4", "૪")]
		[DataRow("5", "૫")]
		[DataRow("6", "૬")]
		[DataRow("7", "૭")]
		[DataRow("8", "૮")]
		[DataRow("9", "૯")]
		[DataRow("0%", "૦%")]
		[DataRow("123,4", "૧૨૩,૪")]
		[DataRow("123.4", "૧૨૩.૪")]
		public void When_NumeralSystemIsGujr(string value, string expected)
		{
			When_NumeralSystemIsSpecific(value, expected, "Gujr");
		}

		[TestMethod]
		[DataRow("0", "੦")]
		[DataRow("1", "੧")]
		[DataRow("2", "੨")]
		[DataRow("3", "੩")]
		[DataRow("4", "੪")]
		[DataRow("5", "੫")]
		[DataRow("6", "੬")]
		[DataRow("7", "੭")]
		[DataRow("8", "੮")]
		[DataRow("9", "੯")]
		[DataRow("0%", "੦%")]
		[DataRow("123,4", "੧੨੩,੪")]
		[DataRow("123.4", "੧੨੩.੪")]
		public void When_NumeralSystemIsGuru(string value, string expected)
		{
			When_NumeralSystemIsSpecific(value, expected, "Guru");
		}

		[TestMethod]
		[DataRow("0", "꧐")]
		[DataRow("1", "꧑")]
		[DataRow("2", "꧒")]
		[DataRow("3", "꧓")]
		[DataRow("4", "꧔")]
		[DataRow("5", "꧕")]
		[DataRow("6", "꧖")]
		[DataRow("7", "꧗")]
		[DataRow("8", "꧘")]
		[DataRow("9", "꧙")]
		[DataRow("0%", "꧐%")]
		[DataRow("123,4", "꧑꧒꧓,꧔")]
		[DataRow("123.4", "꧑꧒꧓.꧔")]
		public void When_NumeralSystemIsJava(string value, string expected)
		{
			When_NumeralSystemIsSpecific(value, expected, "Java");
		}

		[TestMethod]
		[DataRow("0", "꤀")]
		[DataRow("1", "꤁")]
		[DataRow("2", "꤂")]
		[DataRow("3", "꤃")]
		[DataRow("4", "꤄")]
		[DataRow("5", "꤅")]
		[DataRow("6", "꤆")]
		[DataRow("7", "꤇")]
		[DataRow("8", "꤈")]
		[DataRow("9", "꤉")]
		[DataRow("0%", "꤀%")]
		[DataRow("123,4", "꤁꤂꤃,꤄")]
		[DataRow("123.4", "꤁꤂꤃.꤄")]
		public void When_NumeralSystemIsKali(string value, string expected)
		{
			When_NumeralSystemIsSpecific(value, expected, "Kali");
		}

		[TestMethod]
		[DataRow("0", "០")]
		[DataRow("1", "១")]
		[DataRow("2", "២")]
		[DataRow("3", "៣")]
		[DataRow("4", "៤")]
		[DataRow("5", "៥")]
		[DataRow("6", "៦")]
		[DataRow("7", "៧")]
		[DataRow("8", "៨")]
		[DataRow("9", "៩")]
		[DataRow("0%", "០%")]
		[DataRow("123,4", "១២៣,៤")]
		[DataRow("123.4", "១២៣.៤")]
		public void When_NumeralSystemIsKhmr(string value, string expected)
		{
			When_NumeralSystemIsSpecific(value, expected, "Khmr");
		}

		[TestMethod]
		[DataRow("0", "೦")]
		[DataRow("1", "೧")]
		[DataRow("2", "೨")]
		[DataRow("3", "೩")]
		[DataRow("4", "೪")]
		[DataRow("5", "೫")]
		[DataRow("6", "೬")]
		[DataRow("7", "೭")]
		[DataRow("8", "೮")]
		[DataRow("9", "೯")]
		[DataRow("0%", "೦%")]
		[DataRow("123,4", "೧೨೩,೪")]
		[DataRow("123.4", "೧೨೩.೪")]
		public void When_NumeralSystemIsKnda(string value, string expected)
		{
			When_NumeralSystemIsSpecific(value, expected, "Knda");
		}

		[TestMethod]
		[DataRow("0", "᪀")]
		[DataRow("1", "᪁")]
		[DataRow("2", "᪂")]
		[DataRow("3", "᪃")]
		[DataRow("4", "᪄")]
		[DataRow("5", "᪅")]
		[DataRow("6", "᪆")]
		[DataRow("7", "᪇")]
		[DataRow("8", "᪈")]
		[DataRow("9", "᪉")]
		[DataRow("0%", "᪀%")]
		[DataRow("123,4", "᪁᪂᪃,᪄")]
		[DataRow("123.4", "᪁᪂᪃.᪄")]
		public void When_NumeralSystemIsLana(string value, string expected)
		{
			When_NumeralSystemIsSpecific(value, expected, "Lana");
		}

		[TestMethod]
		[DataRow("0", "᪐")]
		[DataRow("1", "᪑")]
		[DataRow("2", "᪒")]
		[DataRow("3", "᪓")]
		[DataRow("4", "᪔")]
		[DataRow("5", "᪕")]
		[DataRow("6", "᪖")]
		[DataRow("7", "᪗")]
		[DataRow("8", "᪘")]
		[DataRow("9", "᪙")]
		[DataRow("0%", "᪐%")]
		[DataRow("123,4", "᪑᪒᪓,᪔")]
		[DataRow("123.4", "᪑᪒᪓.᪔")]
		public void When_NumeralSystemIsLanaTham(string value, string expected)
		{
			When_NumeralSystemIsSpecific(value, expected, "LanaTham");
		}

		[TestMethod]
		[DataRow("0", "໐")]
		[DataRow("1", "໑")]
		[DataRow("2", "໒")]
		[DataRow("3", "໓")]
		[DataRow("4", "໔")]
		[DataRow("5", "໕")]
		[DataRow("6", "໖")]
		[DataRow("7", "໗")]
		[DataRow("8", "໘")]
		[DataRow("9", "໙")]
		[DataRow("0%", "໐%")]
		[DataRow("123,4", "໑໒໓,໔")]
		[DataRow("123.4", "໑໒໓.໔")]
		public void When_NumeralSystemIsLaoo(string value, string expected)
		{
			When_NumeralSystemIsSpecific(value, expected, "Laoo");
		}

		[TestMethod]
		[DataRow("0", "0")]
		[DataRow("1", "1")]
		[DataRow("2", "2")]
		[DataRow("3", "3")]
		[DataRow("4", "4")]
		[DataRow("5", "5")]
		[DataRow("6", "6")]
		[DataRow("7", "7")]
		[DataRow("8", "8")]
		[DataRow("9", "9")]
		[DataRow("0%", "0%")]
		[DataRow("123,4", "123,4")]
		[DataRow("123.4", "123.4")]
		public void When_NumeralSystemIsLatn(string value, string expected)
		{
			When_NumeralSystemIsSpecific(value, expected, "Latn");
		}

		[TestMethod]
		[DataRow("0", "᱀")]
		[DataRow("1", "᱁")]
		[DataRow("2", "᱂")]
		[DataRow("3", "᱃")]
		[DataRow("4", "᱄")]
		[DataRow("5", "᱅")]
		[DataRow("6", "᱆")]
		[DataRow("7", "᱇")]
		[DataRow("8", "᱈")]
		[DataRow("9", "᱉")]
		[DataRow("0%", "᱀%")]
		[DataRow("123,4", "᱁᱂᱃,᱄")]
		[DataRow("123.4", "᱁᱂᱃.᱄")]
		public void When_NumeralSystemIsLepc(string value, string expected)
		{
			When_NumeralSystemIsSpecific(value, expected, "Lepc");
		}

		[TestMethod]
		[DataRow("0", "᥆")]
		[DataRow("1", "᥇")]
		[DataRow("2", "᥈")]
		[DataRow("3", "᥉")]
		[DataRow("4", "᥊")]
		[DataRow("5", "᥋")]
		[DataRow("6", "᥌")]
		[DataRow("7", "᥍")]
		[DataRow("8", "᥎")]
		[DataRow("9", "᥏")]
		[DataRow("0%", "᥆%")]
		[DataRow("123,4", "᥇᥈᥉,᥊")]
		[DataRow("123.4", "᥇᥈᥉.᥊")]
		public void When_NumeralSystemIsLimb(string value, string expected)
		{
			When_NumeralSystemIsSpecific(value, expected, "Limb");
		}

		[TestMethod]
		[DataRow("0", "൦")]
		[DataRow("1", "൧")]
		[DataRow("2", "൨")]
		[DataRow("3", "൩")]
		[DataRow("4", "൪")]
		[DataRow("5", "൫")]
		[DataRow("6", "൬")]
		[DataRow("7", "൭")]
		[DataRow("8", "൮")]
		[DataRow("9", "൯")]
		[DataRow("0%", "൦%")]
		[DataRow("123,4", "൧൨൩,൪")]
		[DataRow("123.4", "൧൨൩.൪")]
		public void When_NumeralSystemIsMlym(string value, string expected)
		{
			When_NumeralSystemIsSpecific(value, expected, "Mlym");
		}

		[TestMethod]
		[DataRow("0", "᠐")]
		[DataRow("1", "᠑")]
		[DataRow("2", "᠒")]
		[DataRow("3", "᠓")]
		[DataRow("4", "᠔")]
		[DataRow("5", "᠕")]
		[DataRow("6", "᠖")]
		[DataRow("7", "᠗")]
		[DataRow("8", "᠘")]
		[DataRow("9", "᠙")]
		[DataRow("0%", "᠐%")]
		[DataRow("123,4", "᠑᠒᠓,᠔")]
		[DataRow("123.4", "᠑᠒᠓.᠔")]
		public void When_NumeralSystemIsMong(string value, string expected)
		{
			When_NumeralSystemIsSpecific(value, expected, "Mong");
		}

		[TestMethod]
		[DataRow("0", "꯰")]
		[DataRow("1", "꯱")]
		[DataRow("2", "꯲")]
		[DataRow("3", "꯳")]
		[DataRow("4", "꯴")]
		[DataRow("5", "꯵")]
		[DataRow("6", "꯶")]
		[DataRow("7", "꯷")]
		[DataRow("8", "꯸")]
		[DataRow("9", "꯹")]
		[DataRow("0%", "꯰%")]
		[DataRow("123,4", "꯱꯲꯳,꯴")]
		[DataRow("123.4", "꯱꯲꯳.꯴")]
		public void When_NumeralSystemIsMtei(string value, string expected)
		{
			When_NumeralSystemIsSpecific(value, expected, "Mtei");
		}

		[TestMethod]
		[DataRow("0", "၀")]
		[DataRow("1", "၁")]
		[DataRow("2", "၂")]
		[DataRow("3", "၃")]
		[DataRow("4", "၄")]
		[DataRow("5", "၅")]
		[DataRow("6", "၆")]
		[DataRow("7", "၇")]
		[DataRow("8", "၈")]
		[DataRow("9", "၉")]
		[DataRow("0%", "၀%")]
		[DataRow("123,4", "၁၂၃,၄")]
		[DataRow("123.4", "၁၂၃.၄")]
		public void When_NumeralSystemIsMymr(string value, string expected)
		{
			When_NumeralSystemIsSpecific(value, expected, "Mymr");
		}

		[TestMethod]
		[DataRow("0", "႐")]
		[DataRow("1", "႑")]
		[DataRow("2", "႒")]
		[DataRow("3", "႓")]
		[DataRow("4", "႔")]
		[DataRow("5", "႕")]
		[DataRow("6", "႖")]
		[DataRow("7", "႗")]
		[DataRow("8", "႘")]
		[DataRow("9", "႙")]
		[DataRow("0%", "႐%")]
		[DataRow("123,4", "႑႒႓,႔")]
		[DataRow("123.4", "႑႒႓.႔")]
		public void When_NumeralSystemIsMymrShan(string value, string expected)
		{
			When_NumeralSystemIsSpecific(value, expected, "MymrShan");
		}

		[TestMethod]
		[DataRow("0", "߀")]
		[DataRow("1", "߁")]
		[DataRow("2", "߂")]
		[DataRow("3", "߃")]
		[DataRow("4", "߄")]
		[DataRow("5", "߅")]
		[DataRow("6", "߆")]
		[DataRow("7", "߇")]
		[DataRow("8", "߈")]
		[DataRow("9", "߉")]
		[DataRow("0%", "߀%")]
		[DataRow("123,4", "߁߂߃,߄")]
		[DataRow("123.4", "߁߂߃.߄")]
		public void When_NumeralSystemIsNkoo(string value, string expected)
		{
			When_NumeralSystemIsSpecific(value, expected, "Nkoo");
		}

		[TestMethod]
		[DataRow("0", "᱐")]
		[DataRow("1", "᱑")]
		[DataRow("2", "᱒")]
		[DataRow("3", "᱓")]
		[DataRow("4", "᱔")]
		[DataRow("5", "᱕")]
		[DataRow("6", "᱖")]
		[DataRow("7", "᱗")]
		[DataRow("8", "᱘")]
		[DataRow("9", "᱙")]
		[DataRow("0%", "᱐%")]
		[DataRow("123,4", "᱑᱒᱓,᱔")]
		[DataRow("123.4", "᱑᱒᱓.᱔")]
		public void When_NumeralSystemIsOlck(string value, string expected)
		{
			When_NumeralSystemIsSpecific(value, expected, "Olck");
		}

		[TestMethod]
		[DataRow("0", "୦")]
		[DataRow("1", "୧")]
		[DataRow("2", "୨")]
		[DataRow("3", "୩")]
		[DataRow("4", "୪")]
		[DataRow("5", "୫")]
		[DataRow("6", "୬")]
		[DataRow("7", "୭")]
		[DataRow("8", "୮")]
		[DataRow("9", "୯")]
		[DataRow("0%", "୦%")]
		[DataRow("123,4", "୧୨୩,୪")]
		[DataRow("123.4", "୧୨୩.୪")]
		public void When_NumeralSystemIsOrya(string value, string expected)
		{
			When_NumeralSystemIsSpecific(value, expected, "Orya");
		}

		[TestMethod]
		[DataRow("0", "꣐")]
		[DataRow("1", "꣑")]
		[DataRow("2", "꣒")]
		[DataRow("3", "꣓")]
		[DataRow("4", "꣔")]
		[DataRow("5", "꣕")]
		[DataRow("6", "꣖")]
		[DataRow("7", "꣗")]
		[DataRow("8", "꣘")]
		[DataRow("9", "꣙")]
		[DataRow("0%", "꣐%")]
		[DataRow("123,4", "꣑꣒꣓,꣔")]
		[DataRow("123.4", "꣑꣒꣓.꣔")]
		public void When_NumeralSystemIsSaur(string value, string expected)
		{
			When_NumeralSystemIsSpecific(value, expected, "Saur");
		}

		[TestMethod]
		[DataRow("0", "᮰")]
		[DataRow("1", "᮱")]
		[DataRow("2", "᮲")]
		[DataRow("3", "᮳")]
		[DataRow("4", "᮴")]
		[DataRow("5", "᮵")]
		[DataRow("6", "᮶")]
		[DataRow("7", "᮷")]
		[DataRow("8", "᮸")]
		[DataRow("9", "᮹")]
		[DataRow("0%", "᮰%")]
		[DataRow("123,4", "᮱᮲᮳,᮴")]
		[DataRow("123.4", "᮱᮲᮳.᮴")]
		public void When_NumeralSystemIsSund(string value, string expected)
		{
			When_NumeralSystemIsSpecific(value, expected, "Sund");
		}

		[TestMethod]
		[DataRow("0", "᧐")]
		[DataRow("1", "᧑")]
		[DataRow("2", "᧒")]
		[DataRow("3", "᧓")]
		[DataRow("4", "᧔")]
		[DataRow("5", "᧕")]
		[DataRow("6", "᧖")]
		[DataRow("7", "᧗")]
		[DataRow("8", "᧘")]
		[DataRow("9", "᧙")]
		[DataRow("0%", "᧐%")]
		[DataRow("123,4", "᧑᧒᧓,᧔")]
		[DataRow("123.4", "᧑᧒᧓.᧔")]
		public void When_NumeralSystemIsTalu(string value, string expected)
		{
			When_NumeralSystemIsSpecific(value, expected, "Talu");
		}

		[TestMethod]
		[DataRow("0", "௦")]
		[DataRow("1", "௧")]
		[DataRow("2", "௨")]
		[DataRow("3", "௩")]
		[DataRow("4", "௪")]
		[DataRow("5", "௫")]
		[DataRow("6", "௬")]
		[DataRow("7", "௭")]
		[DataRow("8", "௮")]
		[DataRow("9", "௯")]
		[DataRow("0%", "௦%")]
		[DataRow("123,4", "௧௨௩,௪")]
		[DataRow("123.4", "௧௨௩.௪")]
		public void When_NumeralSystemIsTamlDec(string value, string expected)
		{
			When_NumeralSystemIsSpecific(value, expected, "TamlDec");
		}

		[TestMethod]
		[DataRow("0", "౦")]
		[DataRow("1", "౧")]
		[DataRow("2", "౨")]
		[DataRow("3", "౩")]
		[DataRow("4", "౪")]
		[DataRow("5", "౫")]
		[DataRow("6", "౬")]
		[DataRow("7", "౭")]
		[DataRow("8", "౮")]
		[DataRow("9", "౯")]
		[DataRow("0%", "౦%")]
		[DataRow("123,4", "౧౨౩,౪")]
		[DataRow("123.4", "౧౨౩.౪")]
		public void When_NumeralSystemIsTelu(string value, string expected)
		{
			When_NumeralSystemIsSpecific(value, expected, "Telu");
		}

		[TestMethod]
		[DataRow("0", "๐")]
		[DataRow("1", "๑")]
		[DataRow("2", "๒")]
		[DataRow("3", "๓")]
		[DataRow("4", "๔")]
		[DataRow("5", "๕")]
		[DataRow("6", "๖")]
		[DataRow("7", "๗")]
		[DataRow("8", "๘")]
		[DataRow("9", "๙")]
		[DataRow("0%", "๐%")]
		[DataRow("123,4", "๑๒๓,๔")]
		[DataRow("123.4", "๑๒๓.๔")]
		public void When_NumeralSystemIsThai(string value, string expected)
		{
			When_NumeralSystemIsSpecific(value, expected, "Thai");
		}

		[TestMethod]
		[DataRow("0", "༠")]
		[DataRow("1", "༡")]
		[DataRow("2", "༢")]
		[DataRow("3", "༣")]
		[DataRow("4", "༤")]
		[DataRow("5", "༥")]
		[DataRow("6", "༦")]
		[DataRow("7", "༧")]
		[DataRow("8", "༨")]
		[DataRow("9", "༩")]
		[DataRow("0%", "༠%")]
		[DataRow("123,4", "༡༢༣,༤")]
		[DataRow("123.4", "༡༢༣.༤")]
		public void When_NumeralSystemIsTibt(string value, string expected)
		{
			When_NumeralSystemIsSpecific(value, expected, "Tibt");
		}

		[TestMethod]
		[DataRow("0", "꘠")]
		[DataRow("1", "꘡")]
		[DataRow("2", "꘢")]
		[DataRow("3", "꘣")]
		[DataRow("4", "꘤")]
		[DataRow("5", "꘥")]
		[DataRow("6", "꘦")]
		[DataRow("7", "꘧")]
		[DataRow("8", "꘨")]
		[DataRow("9", "꘩")]
		[DataRow("0%", "꘠%")]
		[DataRow("123,4", "꘡꘢꘣,꘤")]
		[DataRow("123.4", "꘡꘢꘣.꘤")]
		public void When_NumeralSystemIsVaii(string value, string expected)
		{
			When_NumeralSystemIsSpecific(value, expected, "Vaii");
		}

		private void When_NumeralSystemIsSpecific(string value, string expected, string numeralSystem)
		{
			var sut = new NumeralSystemTranslator();
			sut.NumeralSystem = numeralSystem;
			var translated = sut.TranslateNumerals(value);
			Assert.AreEqual(expected, translated);
		}


		[TestMethod]
		[DataRow("ARAB", "Arab")]
		[DataRow("ARABEXT", "ArabExt")]
		[DataRow("BALI", "Bali")]
		[DataRow("BENG", "Beng")]
		[DataRow("CHAM", "Cham")]
		[DataRow("DEVA", "Deva")]
		[DataRow("FULLWIDE", "FullWide")]
		[DataRow("GUJR", "Gujr")]
		[DataRow("GURU", "Guru")]
		[DataRow("JAVA", "Java")]
		[DataRow("KALI", "Kali")]
		[DataRow("KHMR", "Khmr")]
		[DataRow("KNDA", "Knda")]
		[DataRow("LANA", "Lana")]
		[DataRow("LANATHAM", "LanaTham")]
		[DataRow("LAOO", "Laoo")]
		[DataRow("LATN", "Latn")]
		[DataRow("LEPC", "Lepc")]
		[DataRow("LIMB", "Limb")]
		[DataRow("MLYM", "Mlym")]
		[DataRow("MONG", "Mong")]
		[DataRow("MTEI", "Mtei")]
		[DataRow("MYMR", "Mymr")]
		[DataRow("MYMRSHAN", "MymrShan")]
		[DataRow("NKOO", "Nkoo")]
		[DataRow("OLCK", "Olck")]
		[DataRow("ORYA", "Orya")]
		[DataRow("SAUR", "Saur")]
		[DataRow("SUND", "Sund")]
		[DataRow("TALU", "Talu")]
		[DataRow("TAMLDEC", "TamlDec")]
		[DataRow("TELU", "Telu")]
		[DataRow("THAI", "Thai")]
		[DataRow("TIBT", "Tibt")]
		[DataRow("VAII", "Vaii")]

		public void When_NumeralSystemCaseIsNotStandard(string numeralSystem, string expected)
		{
			var sut = new NumeralSystemTranslator();
			sut.NumeralSystem = numeralSystem;

			Assert.AreEqual(expected, sut.NumeralSystem);
		}
	}
}
