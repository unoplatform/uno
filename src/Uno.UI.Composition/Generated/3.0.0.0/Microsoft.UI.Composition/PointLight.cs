// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Microsoft.UI.Composition
{
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
	[global::Uno.NotImplemented]
#endif
	public partial class PointLight : global::Microsoft.UI.Composition.CompositionLight
	{
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		internal PointLight()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public float QuadraticAttenuation
		{
			get
			{
				throw new global::System.NotImplementedException("The member float PointLight.QuadraticAttenuation is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=float%20PointLight.QuadraticAttenuation");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Composition.PointLight", "float PointLight.QuadraticAttenuation");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public global::System.Numerics.Vector3 Offset
		{
			get
			{
				throw new global::System.NotImplementedException("The member Vector3 PointLight.Offset is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=Vector3%20PointLight.Offset");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Composition.PointLight", "Vector3 PointLight.Offset");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public float LinearAttenuation
		{
			get
			{
				throw new global::System.NotImplementedException("The member float PointLight.LinearAttenuation is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=float%20PointLight.LinearAttenuation");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Composition.PointLight", "float PointLight.LinearAttenuation");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public global::Microsoft.UI.Composition.Visual CoordinateSpace
		{
			get
			{
				throw new global::System.NotImplementedException("The member Visual PointLight.CoordinateSpace is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=Visual%20PointLight.CoordinateSpace");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Composition.PointLight", "Visual PointLight.CoordinateSpace");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public float ConstantAttenuation
		{
			get
			{
				throw new global::System.NotImplementedException("The member float PointLight.ConstantAttenuation is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=float%20PointLight.ConstantAttenuation");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Composition.PointLight", "float PointLight.ConstantAttenuation");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public global::Windows.UI.Color Color
		{
			get
			{
				throw new global::System.NotImplementedException("The member Color PointLight.Color is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=Color%20PointLight.Color");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Composition.PointLight", "Color PointLight.Color");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public float Intensity
		{
			get
			{
				throw new global::System.NotImplementedException("The member float PointLight.Intensity is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=float%20PointLight.Intensity");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Composition.PointLight", "float PointLight.Intensity");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public float MinAttenuationCutoff
		{
			get
			{
				throw new global::System.NotImplementedException("The member float PointLight.MinAttenuationCutoff is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=float%20PointLight.MinAttenuationCutoff");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Composition.PointLight", "float PointLight.MinAttenuationCutoff");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public float MaxAttenuationCutoff
		{
			get
			{
				throw new global::System.NotImplementedException("The member float PointLight.MaxAttenuationCutoff is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=float%20PointLight.MaxAttenuationCutoff");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Composition.PointLight", "float PointLight.MaxAttenuationCutoff");
			}
		}
#endif
		// Forced skipping of method Microsoft.UI.Composition.PointLight.QuadraticAttenuation.set
		// Forced skipping of method Microsoft.UI.Composition.PointLight.LinearAttenuation.get
		// Forced skipping of method Microsoft.UI.Composition.PointLight.LinearAttenuation.set
		// Forced skipping of method Microsoft.UI.Composition.PointLight.Offset.get
		// Forced skipping of method Microsoft.UI.Composition.PointLight.Offset.set
		// Forced skipping of method Microsoft.UI.Composition.PointLight.QuadraticAttenuation.get
		// Forced skipping of method Microsoft.UI.Composition.PointLight.Color.get
		// Forced skipping of method Microsoft.UI.Composition.PointLight.CoordinateSpace.set
		// Forced skipping of method Microsoft.UI.Composition.PointLight.Intensity.set
		// Forced skipping of method Microsoft.UI.Composition.PointLight.MinAttenuationCutoff.get
		// Forced skipping of method Microsoft.UI.Composition.PointLight.MinAttenuationCutoff.set
		// Forced skipping of method Microsoft.UI.Composition.PointLight.MaxAttenuationCutoff.get
		// Forced skipping of method Microsoft.UI.Composition.PointLight.MaxAttenuationCutoff.set
		// Forced skipping of method Microsoft.UI.Composition.PointLight.Intensity.get
		// Forced skipping of method Microsoft.UI.Composition.PointLight.Color.set
		// Forced skipping of method Microsoft.UI.Composition.PointLight.ConstantAttenuation.get
		// Forced skipping of method Microsoft.UI.Composition.PointLight.ConstantAttenuation.set
		// Forced skipping of method Microsoft.UI.Composition.PointLight.CoordinateSpace.get
	}
}
