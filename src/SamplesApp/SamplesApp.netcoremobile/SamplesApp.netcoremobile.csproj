<Project Sdk="Microsoft.NET.Sdk">
	<PropertyGroup>
		<TargetFrameworks>$(NetMobilePreviousAndCurrent)</TargetFrameworks>
		<OutputType>Exe</OutputType>
	</PropertyGroup>

	<Import Project="../../targetframework-override.props" />

	<PropertyGroup>
		<SingleProject>true</SingleProject>

		<AssemblyName>SamplesApp</AssemblyName>
		<DefineConstants>$(DefineConstants);XAMARIN;HAS_UNO</DefineConstants>
		<IsUnoHead>true</IsUnoHead>

		<ApplicationId>uno.platform.samplesdev</ApplicationId>

		<RuntimeIdentifier Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'ios'">iossimulator-x64</RuntimeIdentifier>
		<RuntimeIdentifier Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'tvos'">tvos-x64</RuntimeIdentifier>
		<RuntimeIdentifier Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'maccatalyst'">maccatalyst-x64</RuntimeIdentifier>

		<!-- Override RuntimeIdentifir specifically for smaller builds -->
		<RuntimeIdentifier Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)'))!=''">$(UnoSampleAppRuntimeIdentifiers)</RuntimeIdentifier>

		<InvariantGlobalization Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'tvos'">true</InvariantGlobalization>
		<InvariantGlobalization Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'maccatalyst'">true</InvariantGlobalization>

		<!-- Debugger workaround https://github.com/dotnet/maui-samples/blob/8aa6b8780b12e97b157514c3bdc54bb4a13001cd/HelloMacCatalyst/HelloMacCatalyst.csproj#L7 -->
		<!-- <MtouchExtraArgs Condition="'$(TargetPlatformIdentifier)' == 'maccatalyst'">$(MtouchExtraArgs) -setenv:MONO_THREADS_SUSPEND=preemptive</MtouchExtraArgs> -->

		<!--
		Required for Catalyst nuget restore to revalidate
		once transitive dependencies have been updated.
		-->
		<NoWarn>$(NoWarn);NU1703;SYSLIB1045</NoWarn>

		<!--
		aab is the default packaging format in net6 API 31.
		We need an APK for deployment on simulators.
		-->
		<AndroidPackageFormat>apk</AndroidPackageFormat>

		<AndroidEnableMultiDex>true</AndroidEnableMultiDex>

		<!-- We need all the intermediate assemblies -->
		<DisablePrivateProjectReference>true</DisablePrivateProjectReference>
	</PropertyGroup>

	<ItemGroup>
		<!-- Shows applied capabilities in a new VS project node -->
		<ProjectCapability Include="DiagnoseCapabilities" />
	</ItemGroup>

	<Target Name="AdjustCalabash" BeforeTargets="BeforeBuild">
		<!-- Needs to be run as a target, as RuntimeIdentifier is set after the csproj is parsed -->
		<PropertyGroup Condition="!$(RuntimeIdentifier.Contains('arm64'))">
			<DefineConstants>$(DefineConstants);HAS_TESTCLOUD_AGENT</DefineConstants>
		</PropertyGroup>
	</Target>
	
	<Choose>

		<When Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)'))=='ios'">
			<ItemGroup>
				<PackageReference Include="Uno.Extensions.Logging.OSLog" Version="1.7.0" />
				<PackageReference Include="SkiaSharp.NativeAssets.iOS" />
				<PackageReference Include="harfbuzzsharp.nativeassets.ios" />
				<PackageReference Include="Xamarin.TestCloud.Agent" Condition="'$(BuildForTestFlight)'!='true' and !$(RuntimeIdentifier.Contains('arm64'))" />
			</ItemGroup>

			<PropertyGroup>
				<SupportedOSPlatformVersion>12.2</SupportedOSPlatformVersion>
				
				<!-- iOS 17 compatibility -->
				<MtouchExtraArgs>$(MtouchExtraArgs) --weak-framework=NewsstandKit</MtouchExtraArgs>
			</PropertyGroup>

			<PropertyGroup Condition="'$(BuildForTestFlight)'=='true'">
				<UseInterpreter>true</UseInterpreter>
				<MtouchInterpreter>all</MtouchInterpreter>

				<CodesignKey>iPhone Distribution</CodesignKey>
				<RuntimeIdentifier>ios-arm64</RuntimeIdentifier>
				<DefineConstants>$(DefineConstants);TESTFLIGHT</DefineConstants>
			</PropertyGroup>
			
			<PropertyGroup>
				<UNOHAS_ARM64>$(RuntimeIdentifier.Contains('arm64'))</UNOHAS_ARM64>
			</PropertyGroup>
		
			<ItemGroup>
				<BundleResource Include="..\LinkedFiles\WebContent\css\site.css" Link="iOS\Resources\WebContent\css\site.css" />
				<BundleResource Include="..\LinkedFiles\WebContent\index.html" Link="iOS\Resources\WebContent\index.html" />
				<BundleResource Include="..\LinkedFiles\WebContent\js\site.js" Link="iOS\Resources\WebContent\js\site.js" />			
			</ItemGroup>
		</When>

		<When Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)'))=='tvos'">
			<ItemGroup>
				<PackageReference Include="Uno.Extensions.Logging.OSLog" Version="1.7.0" />
				<PackageReference Include="SkiaSharp.NativeAssets.tvOS" />
				<PackageReference Include="harfbuzzsharp.nativeassets.tvos" />
			</ItemGroup>

			<PropertyGroup>
				<SupportedOSPlatformVersion>14.2</SupportedOSPlatformVersion>
				
				<!-- iOS 17 compatibility -->
				<MtouchExtraArgs>$(MtouchExtraArgs) --weak-framework=NewsstandKit</MtouchExtraArgs>
			</PropertyGroup>

			<PropertyGroup Condition="'$(BuildForTestFlight)'=='true'">
				<UseInterpreter>true</UseInterpreter>
				<MtouchInterpreter>all</MtouchInterpreter>

				<CodesignKey>iPhone Distribution</CodesignKey>
				<RuntimeIdentifier>tvos-arm64</RuntimeIdentifier>
				<DefineConstants>$(DefineConstants);TESTFLIGHT</DefineConstants>
			</PropertyGroup>
			
			<PropertyGroup>
				<UNOHAS_ARM64>$(RuntimeIdentifier.Contains('arm64'))</UNOHAS_ARM64>
			</PropertyGroup>
		</When>

		<When Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)'))=='maccatalyst'">
			<PropertyGroup>
				<SupportedOSPlatformVersion>14.2</SupportedOSPlatformVersion>
				
				<!-- Configure the GC -->
				<MtouchExtraArgs>$(MtouchExtraArgs) --setenv=MONO_GC_PARAMS=soft-heap-limit=512m,nursery-size=64m,evacuation-threshold=66,major=marksweep,concurrent-sweep</MtouchExtraArgs>

				<!-- Required for unknown crash as of .NET 6 Mobile Preview 13 -->
				<MtouchExtraArgs>$(MtouchExtraArgs) --registrar:static</MtouchExtraArgs>

				<!-- https://github.com/xamarin/xamarin-macios/issues/14812 -->
				<MtouchExtraArgs>$(MtouchExtraArgs) --marshal-objectivec-exceptions:disable</MtouchExtraArgs>

				<!-- Only the invariant culture is support in globalization-invariant mode. See https://aka.ms/GlobalizationInvariantMode -->
				<InvariantGlobalization>false</InvariantGlobalization>
			</PropertyGroup>
			
			<ItemGroup>
				<PackageReference Include="Uno.Extensions.Logging.OSLog" Version="1.7.0" />
				<PackageReference Include="SkiaSharp.NativeAssets.MacCatalyst" />
			</ItemGroup>
			
			<PropertyGroup Condition="'$(BuildForTestFlight)'=='true'">
				<MtouchUseLlvm>true</MtouchUseLlvm>
				<CodeSigningKey>Apple Distribution: Uno Platform Inc. (PD74CHS9Z5)</CodeSigningKey>
				<PackageSigningKey>3rd Party Mac Developer Installer</PackageSigningKey>
				<ApplicationTitle>Uno Dev Samples</ApplicationTitle>
				<CreatePackage>true</CreatePackage>
				<EnablePackageSigning>true</EnablePackageSigning>
				<EnableCodeSigning>true</EnableCodeSigning>
				<CodeSignEntitlements>MacCatalyst\Entitlements.plist</CodeSignEntitlements>

				<CodesignProvision>Uno Dev Samples</CodesignProvision>

				<!-- https://github.com/xamarin/xamarin-macios/issues/14686 -->
				<_LibMonoLinkMode>Static</_LibMonoLinkMode>
				<_LibXamarinLinkMode>Static</_LibXamarinLinkMode>
			</PropertyGroup>
			
			<ItemGroup>
				<BundleResource Include="..\LinkedFiles\WebContent\css\site.css" Link="MacCatalyst\Resources\WebContent\css\site.css" />
				<BundleResource Include="..\LinkedFiles\WebContent\index.html" Link="MacCatalyst\Resources\WebContent\index.html" />
				<BundleResource Include="..\LinkedFiles\WebContent\js\site.js" Link="MacCatalyst\Resources\WebContent\js\site.js" />			
			</ItemGroup>
		</When>

		<When Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)'))=='android'">
			<PropertyGroup>
				<SupportedOSPlatformVersion>10.0</SupportedOSPlatformVersion>
				<AndroidUseAssemblyStore>false</AndroidUseAssemblyStore>
			</PropertyGroup>

			<PropertyGroup Condition="'$(Configuration)'=='Release'">
				<RuntimeIdentifiers>android-x64;android-arm64</RuntimeIdentifiers>
			</PropertyGroup>
			
			<ItemGroup>
				<PackageReference Include="Xamarin.Google.Android.Material" Version="1.4.0.4" />
				<PackageReference Include="Uno.UniversalImageLoader" Version="1.9.37" />
				<PackageReference Include="SkiaSharp.NativeAssets.Android" />
				<PackageReference Include="Xamarin.AndroidX.Core.SplashScreen" />
			</ItemGroup>
			
			<ItemGroup>
				<ProjectReference Include="..\..\Uno.UI.BindingHelper.Android\Uno.UI.BindingHelper.Android.netcoremobile.csproj" />
				<ProjectReference Include="..\..\AddIns\Uno.UI.GooglePlay\Uno.UI.GooglePlay.netcoremobile.csproj" />
			</ItemGroup>
			
			<ItemGroup>
				<AndroidAsset Include="Assets\sound.mp3" />
				<AndroidAsset Include="Assets\Lottie\4770-lady-and-dove.json" />
				<AndroidAsset Include="Assets\Lottie\4930-checkbox-animation.json" />
				<AndroidAsset Include="Assets\Lottie\lottie-logo.json" />
				<AndroidAsset Include="Assets\Lottie\uno.json" />
				<AndroidAsset Include="Assets\Lottie\LightBulb.json" />				
				<AndroidAsset Include="..\LinkedFiles\WebContent\js\site.js" Link="Android\Assets\WebContent\js\site.js" />
				<AndroidAsset Include="..\LinkedFiles\WebContent\css\site.css" Link="Android\Assets\WebContent\css\site.css" />
				<AndroidAsset Include="..\LinkedFiles\WebContent\index.html" Link="Android\Assets\WebContent\index.html" />
				<AndroidEnvironment Include="Android\environment.conf" />
			</ItemGroup>
		</When>
	</Choose>

	<PropertyGroup>
		<IsUiAutomationMappingEnabled>true</IsUiAutomationMappingEnabled>
	</PropertyGroup>

	<PropertyGroup Condition="'$(Configuration)'=='Debug'">
		<DefineConstants>$(DefineConstants);DEBUG;TRACE</DefineConstants>
	</PropertyGroup>

	<ItemGroup>
		<PackageReference Include="Microsoft.Graph" Condition="'$(Configuration)'!='Debug' or $([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)'))!='ios'"> <!-- Workaround for https://github.com/microsoftgraph/msgraph-sdk-dotnet/issues/2617 -->
			<Version>5.56.0</Version>
		</PackageReference>
		<PackageReference Include="Microsoft.Identity.Client">
			<Version>4.61.3</Version>
		</PackageReference>

		<PackageReference Include="MSTest.TestFramework" />
		<PackageReference Include="MSTest.Analyzers" />
		<PackageReference Include="Microsoft.Extensions.Logging.Console" Version="1.1.1" />
		<PackageReference Include="Uno.Core.Extensions.Logging.Singleton" />
		<PackageReference Include="Uno.Fonts.Fluent" />
		<PackageReference Include="Uno.Resizetizer" />
		<PackageReference Include="System.Text.Encodings.Web" Version="8.0.0" />
	</ItemGroup>

	<ItemGroup>
		<UnoSplashScreen Include="Assets\Splash\splash_screen.svg" BaseSize="128,128" Color="#ffffff" />
		<UnoIcon Include="Assets\Icons\icon.svg" ForegroundFile="Assets\Icons\icon_foreground.svg" ForegroundScale="0.65" Color="#ffffff" />
	</ItemGroup>

	<ItemGroup>
		<ProjectReference Include="..\..\Uno.Foundation\Uno.Foundation.netcoremobile.csproj" />
		<ProjectReference Include="..\..\Uno.UI\Uno.UI.netcoremobile.csproj" />
		<ProjectReference Include="..\..\Uno.UWP\Uno.netcoremobile.csproj" />
		<ProjectReference Include="..\..\Uno.UI.Toolkit\Uno.UI.Toolkit.netcoremobile.csproj" />
		<ProjectReference Include="..\..\AddIns\Uno.UI.Svg\Uno.UI.Svg.netcoremobile.csproj" />
		<ProjectReference Include="..\..\AddIns\Uno.UI.Lottie\Uno.UI.Lottie.netcoremobile.csproj" />
		<ProjectReference Include="..\..\Uno.UI.RuntimeTests\Uno.UI.RuntimeTests.netcoremobile.csproj" />
		<ProjectReference Include="..\..\Uno.UI.FluentTheme\Uno.UI.FluentTheme.netcoremobile.csproj" />
		<ProjectReference Include="..\..\AddIns\Uno.UI.MSAL\Uno.UI.MSAL.netcoremobile.csproj" />
		<ProjectReference Include="..\..\Uno.UI.Adapter.Microsoft.Extensions.Logging\Uno.UI.Adapter.Microsoft.Extensions.Logging.csproj" />
		<ProjectReference Include="..\..\AddIns\Uno.UI.Foldable\Uno.UI.Foldable.netcoremobile.csproj" />

		<!--
		<ProjectReference Include="..\..\Uno.UI.Maps\Uno.UI.Maps.netcoremobile.csproj"/>
		<ProjectReference Include="..\..\Uno.UI.RemoteControl\Uno.UI.RemoteControl.netcoremobile.csproj"/>
		-->
	</ItemGroup>

	<ItemGroup>
		<Folder Include="Properties\" />
	</ItemGroup>

	<Import Project="..\..\SourceGenerators\sourcegenerators.local.props" />

	<Import Project="..\SamplesApp.Shared\SamplesApp.Shared.projitems" Label="Shared" />
	<Import Project="..\SamplesApp.UnitTests.Shared\SamplesApp.UnitTests.Shared.projitems" Label="Shared" />
	<Import Project="..\UITests.Shared\UITests.Shared.projitems" Label="Shared" />
	<Import Project="..\SamplesApp.UnitTests.Shared\SamplesApp.UnitTests.targets" />

	<Import Project="..\..\..\build\nuget\uno.winui.single-project.targets" />

	<Target Name="GenerateVersion" BeforeTargets="BeforeBuild;_CompileAppManifest;_GetAndroidPackageName" Condition="'$(NBGV_AssemblyInformationalVersion)'!=''">

		<Exec Command="git rev-list --count HEAD" ConsoleToMSBuild="true">
			<Output TaskParameter="ConsoleOutput" PropertyName="_VersionCode" />
		</Exec>

		<PropertyGroup>
			<_VersionCode Condition="$(VersionCodeOffset) != ''">$([MSBuild]::Add($(_VersionCode), $(VersionCodeOffset)))</_VersionCode>

			<ApplicationDisplayVersion>$([System.DateTime]::Now.ToString(`yyMMddHHmm`)).$(_VersionCode)</ApplicationDisplayVersion>
			<ApplicationVersion>$(_VersionCode)</ApplicationVersion>
			<InformationalVersion>$(NBGV_AssemblyInformationalVersion)</InformationalVersion>
		</PropertyGroup>

	</Target>

	<PropertyGroup>
		<!-- Versions -->
		<ApplicationDisplayVersion>1.0</ApplicationDisplayVersion>
		<ApplicationVersion>1</ApplicationVersion>

	</PropertyGroup>

</Project>
