<!-- Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT License. See LICENSE in the project root for license information. -->
<!-- MUX Reference controls\dev\CommandBarFlyout\TestUI\ExtraCommandBarFlyoutPage.xaml, commit b91b3ce6f25c587a9e18c4e122f348f51331f18b -->
<local:TestPage
    x:Class="MUXControlsTestApp.ExtraCommandBarFlyoutPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:MUXControlsTestApp"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    xmlns:muxcp="using:Microsoft.UI.Xaml.Controls.Primitives"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

	<Page.Resources>
		<muxc:TextCommandBarFlyout x:Name="TextCommandBarContextFlyout" />
		<muxc:TextCommandBarFlyout x:Name="TextCommandBarSelectionFlyout" />
	</Page.Resources>

	<StackPanel Margin="12">
		<TextBlock Text="Demo controls" Style="{ThemeResource StandardGroupHeader}"/>
		<StackPanel Orientation="Horizontal">
			<TextBox x:Name="TextBox1" AutomationProperties.AutomationId="TextBox" ContextFlyout="{x:Bind TextCommandBarContextFlyout}"
                     MinWidth="200" />
			<RichTextBlock x:Name="RichTextBlock1" AutomationProperties.AutomationId="RichTextBlock" Margin="10" OverflowContentTarget="{x:Bind RichTextBlockOverflow1}" ContextFlyout="{x:Bind TextCommandBarContextFlyout}" Width="100" Height="50" HorizontalAlignment="Center">
				<RichTextBlock.Blocks>
					<Paragraph>
						<Run>This is a very, very long string that cannot possibly fit within the RichTextBlock's bounds, so it overflows.</Run>
					</Paragraph>
				</RichTextBlock.Blocks>
			</RichTextBlock>
			<RichTextBlockOverflow x:Name="RichTextBlockOverflow1" AutomationProperties.AutomationId="RichTextBlockOverflow" Margin="10" HorizontalAlignment="Center" />
			<Button Content="Click for a CommandBarFlyout with many items">
				<Button.Flyout>
					<muxc:CommandBarFlyout>
						<AppBarButton Label="Item 1" Icon="Favorite" />
						<AppBarButton Label="Item 2" Icon="Favorite" />
						<AppBarButton Label="Item 3" Icon="Favorite" />
						<AppBarButton Label="Item 4" Icon="Favorite" />
						<AppBarButton Label="Item 5" Icon="Favorite" />
						<AppBarButton Label="Item 6" Icon="Favorite" />
						<AppBarButton Label="Item 7" Icon="Favorite" />
						<AppBarButton Label="Item 8" Icon="Favorite" />
						<AppBarButton Label="Item 9" Icon="Favorite" />
						<AppBarButton Label="Item 10" Icon="Favorite" />
						<AppBarButton Label="Item 11" Icon="Favorite" />
						<AppBarButton Label="Item 12" Icon="Favorite" />
						<AppBarButton Label="Item 13" Icon="Favorite" />
						<AppBarButton Label="Item 14" Icon="Favorite" />
						<AppBarButton Label="Item 15" Icon="Favorite" />
						<AppBarButton Label="Item 16" Icon="Favorite" />
						<AppBarButton Label="Item 17" Icon="Favorite" />
						<AppBarButton Label="Item 18" Icon="Favorite" />
						<AppBarButton Label="Item 19" Icon="Favorite" />
						<AppBarButton Label="Item 20" Icon="Favorite" />
					</muxc:CommandBarFlyout>
				</Button.Flyout>
			</Button>
		</StackPanel>
		<TextBlock Text="Actions" Style="{ThemeResource StandardGroupHeader}" Margin="0,24,0,8"/>
		<Button AutomationProperties.AutomationId="ClearClipboardContentsButton" Content="Clear clipboard" Click="OnClearClipboardContentsClicked" />
		<TextBox x:Name="tb" Loaded="tbloaded" Unloaded="tbunloaded" AutomationProperties.Name="TextBoxWithAdditionalItems"/>

		<TextBlock Text="Status" Style="{ThemeResource StandardGroupHeader}" Margin="0,24,0,8"/>
		<StackPanel Orientation="Horizontal">
			<Button AutomationProperties.AutomationId="CountPopupsButton" Content="Count popups" Click="OnCountPopupsClicked" Margin="0,0,8,0"/>
			<TextBox x:Name="PopupCountTextBox" AutomationProperties.AutomationId="PopupCountTextBox" IsReadOnly="True" />
			<TextBox x:Name="CustomButtonsOpenCount" AutomationProperties.AutomationId="CustomButtonsOpenCount" IsReadOnly="True" />
		</StackPanel>
	</StackPanel>
</local:TestPage>
