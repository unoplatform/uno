<?xml version="1.0" encoding="utf-8" ?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

	<!-- Legacy tasks to allow for smoother upgrade from Uno.UI.Tasks -->
	<Target Name="XamlGeneration" />
	<Target Name="BindableMetadataGenerator" />

	<PropertyGroup>

		<ShouldRunGenerator>true</ShouldRunGenerator>
		<ShouldRunGenerator Condition="'$(_UnoIsWinAppSDKDefined)'=='true' or $(TargetFramework.StartsWith('uap10.0'))">false</ShouldRunGenerator>

		<_IsAndroid Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'android'">true</_IsAndroid>
		<_IsAndroid Condition="'$(_IsAndroid)' == ''">false</_IsAndroid>

		<_IsIOS Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'ios' OR $([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'maccatalyst'">true</_IsIOS>
		<_IsIOS Condition="'$(_IsIOS)' == ''">false</_IsIOS>

		<_IsTvOS Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'tvos'">true</_IsTvOS>
		<_IsTvOS Condition="'$(_IsTvOS)' == ''">false</_IsTvOS>

		<_IsNetStdRef Condition="'$(_IsUnitTests)'!='true' AND ('$(TargetFramework)'=='net10.0' OR '$(TargetFramework)'=='net9.0')">true</_IsNetStdRef>
		<_IsNetStdRef Condition="'$(UnoRuntimeIdentifier)'=='Skia' OR '$(UnoUIRuntimeIdentifier)'=='Skia' OR '$(UnoRuntimeIdentifier)'=='WebAssembly'">true</_IsNetStdRef>
		<_IsNetStdRef Condition="'$(_IsNetStdRef)' == ''">false</_IsNetStdRef>

		<XamarinProjectType Condition="$(_IsIOS)">ios</XamarinProjectType>
		<XamarinProjectType Condition="$(_IsTvOS)">tvos</XamarinProjectType>
		<XamarinProjectType Condition="$(_IsAndroid)">android</XamarinProjectType>

		<!-- Not checking for UnoWinRTRuntimeIdentifier as we want wasm to be applicable to DOM Wasm only (aka Wasm native) -->
		<XamarinProjectType Condition="'$(UnoRuntimeIdentifier)'=='WebAssembly'">wasm</XamarinProjectType>

		<!-- Skia is intentionally last as we want it to win when running Android Skia -->
		<XamarinProjectType Condition="'$(UnoRuntimeIdentifier)'=='Skia' OR '$(UnoUIRuntimeIdentifier)'=='Skia'">skia</XamarinProjectType>
		<XamarinProjectType Condition="'$(_IsUnitTests)'=='true'">IS_UNIT_TESTS</XamarinProjectType>

		<_IsAndroidSkia Condition="$(_IsAndroid) AND '$(XamarinProjectType)'=='skia'">true</_IsAndroidSkia>
		<_IsAndroidSkia Condition="'$(_IsAndroidSkia)' == ''">false</_IsAndroidSkia>

		<_IsIOSSkia Condition="$(_IsIOS) AND '$(XamarinProjectType)'=='skia'">true</_IsIOSSkia>
		<_IsIOSSkia Condition="'$(_IsIOSSkia)' == ''">false</_IsIOSSkia>

		<_IsTvOSSkia Condition="$(_IsTvOS) AND '$(XamarinProjectType)'=='skia'">true</_IsTvOSSkia>
		<_IsTvOSSkia Condition="'$(_IsTvOSSkia)' == ''">false</_IsTvOSSkia>

		<_IsWasmSkia Condition="'$(UnoWinRTRuntimeIdentifier)'=='WebAssembly' AND '$(XamarinProjectType)'=='skia'">true</_IsWasmSkia>
		<_IsWasmSkia Condition="'$(_IsWasmSkia)' == ''">false</_IsWasmSkia>
	</PropertyGroup>

	<ItemGroup Condition="'$(ShouldRunGenerator)'=='true'">
		<CompilerVisibleProperty Include="XamlSourceGeneratorTracingFolder" />
		<CompilerVisibleProperty Include="TargetFramework" />
		<CompilerVisibleProperty Include="ProjectTypeGuidsProperty" />
		<CompilerVisibleProperty Include="MSBuildProjectFullPath" />
		<CompilerVisibleProperty Include="RootNamespace" />
		<CompilerVisibleProperty Include="DefineConstantsProperty" />
		<CompilerVisibleProperty Include="Configuration" />
		<CompilerVisibleProperty Include="IntermediateOutputPath" />
		<CompilerVisibleProperty Include="AndroidApplication" />
		<CompilerVisibleProperty Include="OutputType" />
		<CompilerVisibleProperty Include="MSBuildProjectName" />
		<CompilerVisibleProperty Include="BuildingProject" />
		<CompilerVisibleProperty Include="DesignTimeBuild" />
		<CompilerVisibleProperty Include="UnoUISourceGeneratorDebuggerBreak" />
		<CompilerVisibleProperty Include="BuildingInsideVisualStudio" />
		<CompilerVisibleProperty Include="UnoPlatformIDE" />
		<CompilerVisibleProperty Include="IsHotReloadHost" />
		<CompilerVisibleProperty Include="UnoGenerateXamlSourcesProvider" />
		<CompilerVisibleProperty Include="UnoForceHotReloadCodeGen" />
		<CompilerVisibleProperty Include="UnoForceIncludeProjectConfiguration" />
		<CompilerVisibleProperty Include="UnoForceIncludeServerProcessorsConfiguration" />
		<CompilerVisibleProperty Include="IsUnoHead" />
		<CompilerVisibleProperty Include="UnoDisableHotRestartHelperGeneration" />
		<CompilerVisibleProperty Include="RuntimeIdentifier" />
		<CompilerVisibleProperty Include="UnoRuntimeIdentifier" />
		<CompilerVisibleProperty Include="UnoWinRTRuntimeIdentifier" />
		<CompilerVisibleProperty Include="UnoUIRuntimeIdentifier" />
		<CompilerVisibleProperty Include="UnoHotReloadMode" />

		<CompilerVisibleProperty Include="SolutionFileName" />
		<CompilerVisibleProperty Include="LangName" />
		<CompilerVisibleProperty Include="LangID" />
		<CompilerVisibleProperty Include="SolutionDir" />
		<CompilerVisibleProperty Include="SolutionExt" />
		<CompilerVisibleProperty Include="UseHostCompilerIfAvailable" />
		<CompilerVisibleProperty Include="DefineExplicitDefaults" />
		<CompilerVisibleProperty Include="Platform" />
		<CompilerVisibleProperty Include="SolutionPath" />
		<CompilerVisibleProperty Include="SolutionName" />
		<CompilerVisibleProperty Include="VSIDEResolvedNonMSBuildProjectOutputs" />
		<CompilerVisibleProperty Include="DevEnvDir" />
		<CompilerVisibleProperty Include="MSBuildVersion" />

		<CompilerVisibleProperty Include="UseWPF" />
		<CompilerVisibleProperty Include="IsUnoHead" />
		<CompilerVisibleProperty Include="UnoRemoteControlPort" />
		<CompilerVisibleProperty Include="UnoRemoteControlHost" />
		<CompilerVisibleProperty Include="UnoRemoteControlProcessorsPath" />
		<CompilerVisibleProperty Include="UnoRemoteControlConfigCookie" />
		<CompilerVisibleProperty Include="UnoHotReloadDiagnosticsLogPath" />
		<CompilerVisibleProperty Include="AppendRuntimeIdentifierToOutputPath" />
		<CompilerVisibleProperty Include="OutputPath" />
		<CompilerVisibleProperty Include="UnoDisableBindableTypeProvidersGeneration" />
		<CompilerVisibleProperty Include="ShouldWriteErrorOnInvalidXaml" />
		<CompilerVisibleProperty Include="IsUiAutomationMappingEnabled" />
		<CompilerVisibleProperty Include="ShouldAnnotateGeneratedXaml" />
		<CompilerVisibleProperty Include="DefaultLanguage" />
		<CompilerVisibleProperty Include="UnoPlatformTelemetryOptOut" />
		<CompilerVisibleProperty Include="UnoPlatformDefaultSymbolsFontFamily" />
		<CompilerVisibleProperty Include="ExcludeXamlNamespacesProperty" />
		<CompilerVisibleProperty Include="IncludeXamlNamespacesProperty" />
		<CompilerVisibleProperty Include="XamlGeneratorAnalyzerSuppressionsProperty" />
		<CompilerVisibleProperty Include="UnoEnableXamlFuzzyMatching" />
		<CompilerVisibleProperty Include="UnoXamlResourcesTrimming"/>
		<CompilerVisibleProperty Include="BaseIntermediateOutputPath"/>
		<CompilerVisibleProperty Include="AssemblyName"/>

		<CompilerVisibleProperty Include="UnoDefaultFont" />

		<CompilerVisibleItemMetadata Include="AdditionalFiles" MetadataName="SourceItemGroup" />
		<CompilerVisibleItemMetadata Include="AdditionalFiles" MetadataName="Link" />
		<CompilerVisibleItemMetadata Include="AdditionalFiles" MetadataName="TargetPath" />
		<CompilerVisibleItemMetadata Include="AdditionalFiles" MetadataName="FullPath" />
		<CompilerVisibleItemMetadata Include="AdditionalFiles" MetadataName="Identity" />
		<CompilerVisibleItemMetadata Include="AdditionalFiles" MetadataName="XamlRuntime" />
	</ItemGroup>

	<Target Name="OverrideUnoSolutionTarget"
			BeforeTargets="CoreCompile"
			Condition="exists('$(MSBuildThisFileDirectory)..\Uno.UI.SourceGenerators.csproj') and '$(ShouldRunGenerator)'=='true'">

		<ItemGroup>
			<_UnoAnalyzerExclusion Include="$(MSBuildThisFileDirectory)..\bin\$(Configuration)\netstandard2.0\Microsoft.CodeAnalysis.*.dll" />
			<_UnoAnalyzerExclusion Include="$(MSBuildThisFileDirectory)..\bin\$(Configuration)\netstandard2.0\System.*.dll" />

			<Analyzer Include="$(MSBuildThisFileDirectory)..\bin\$(Configuration)\netstandard2.0\*.dll"
					Exclude="@(_UnoAnalyzerExclusion)" />
			<!-- generator is automatically included in nuget package, no need to add it here -->
		</ItemGroup>
	</Target>

	<ItemGroup>
		<IncludeXamlNamespaces Condition="'$(XamarinProjectType)'=='android'" Include="android" />
		<ExcludeXamlNamespaces Condition="'$(XamarinProjectType)'=='android'" Include="not_android" />
		<IncludeXamlNamespaces Condition="'$(XamarinProjectType)'!='android'" Include="not_android" />
		<ExcludeXamlNamespaces Condition="'$(XamarinProjectType)'!='android'" Include="android" />

		<IncludeXamlNamespaces Condition="'$(XamarinProjectType)'=='ios'" Include="ios" />
		<ExcludeXamlNamespaces Condition="'$(XamarinProjectType)'=='ios'" Include="not_ios" />
		<IncludeXamlNamespaces Condition="'$(XamarinProjectType)'!='ios'" Include="not_ios" />
		<ExcludeXamlNamespaces Condition="'$(XamarinProjectType)'!='ios'" Include="ios" />

		<IncludeXamlNamespaces Condition="'$(XamarinProjectType)'=='macos'" Include="macos" />
		<ExcludeXamlNamespaces Condition="'$(XamarinProjectType)'=='macos'" Include="not_macos" />
		<IncludeXamlNamespaces Condition="'$(XamarinProjectType)'!='macos'" Include="not_macos" />
		<ExcludeXamlNamespaces Condition="'$(XamarinProjectType)'!='macos'" Include="macos" />

		<IncludeXamlNamespaces Condition="'$(XamarinProjectType)'=='wasm'" Include="wasm" />
		<ExcludeXamlNamespaces Condition="'$(XamarinProjectType)'=='wasm'" Include="not_wasm" />
		<IncludeXamlNamespaces Condition="'$(XamarinProjectType)'!='wasm'" Include="not_wasm" />
		<ExcludeXamlNamespaces Condition="'$(XamarinProjectType)'!='wasm'" Include="wasm" />

		<IncludeXamlNamespaces Condition="'$(XamarinProjectType)'=='skia'" Include="skia" />
		<ExcludeXamlNamespaces Condition="'$(XamarinProjectType)'=='skia'" Include="not_skia" />
		<IncludeXamlNamespaces Condition="'$(XamarinProjectType)'!='skia'" Include="not_skia" />
		<ExcludeXamlNamespaces Condition="'$(XamarinProjectType)'!='skia'" Include="skia" />

		<IncludeXamlNamespaces Condition="$(_IsNetStdRef)" Include="netstdref" />
		<ExcludeXamlNamespaces Condition="$(_IsNetStdRef)" Include="not_netstdref" />
		<IncludeXamlNamespaces Condition="!$(_IsNetStdRef)" Include="not_netstdref" />
		<ExcludeXamlNamespaces Condition="!$(_IsNetStdRef)" Include="netstdref" />

		<IncludeXamlNamespaces Condition="$(_IsAndroidSkia)" Include="androidskia" />
		<ExcludeXamlNamespaces Condition="$(_IsAndroidSkia)" Include="not_androidskia" />
		<IncludeXamlNamespaces Condition="!$(_IsAndroidSkia)" Include="not_androidskia" />
		<ExcludeXamlNamespaces Condition="!$(_IsAndroidSkia)" Include="androidskia" />

		<IncludeXamlNamespaces Condition="$(_IsIOSSkia)" Include="iosskia" />
		<ExcludeXamlNamespaces Condition="$(_IsIOSSkia)" Include="not_iosskia" />
		<IncludeXamlNamespaces Condition="!$(_IsIOSSkia)" Include="not_iosskia" />
		<ExcludeXamlNamespaces Condition="!$(_IsIOSSkia)" Include="iosskia" />

		<IncludeXamlNamespaces Condition="$(_IsTvOSSkia)" Include="tvosskia" />
		<ExcludeXamlNamespaces Condition="$(_IsTvOSSkia)" Include="not_tvosskia" />
		<IncludeXamlNamespaces Condition="!$(_IsTvOSSkia)" Include="not_tvosskia" />
		<ExcludeXamlNamespaces Condition="!$(_IsTvOSSkia)" Include="tvosskia" />

		<IncludeXamlNamespaces Condition="$(_IsWasmSkia)" Include="wasmskia" />
		<ExcludeXamlNamespaces Condition="$(_IsWasmSkia)" Include="not_wasmskia" />
		<IncludeXamlNamespaces Condition="!$(_IsWasmSkia)" Include="not_wasmskia" />
		<ExcludeXamlNamespaces Condition="!$(_IsWasmSkia)" Include="wasmskia" />

		<IncludeXamlNamespaces Condition="'$(XamarinProjectType)'=='IS_UNIT_TESTS'" Include="unittests" />
		<ExcludeXamlNamespaces Condition="'$(XamarinProjectType)'!='IS_UNIT_TESTS'" Include="unittests" />

		<ExcludeXamlNamespaces Include="win" />
		<ExcludeXamlNamespaces Include="not_mux" Condition="'$(UNO_UWP_BUILD)'!='true'" />

		<!--
			Those namespaces are to be *included* from the code generation,
			regardless of their presence in the Ignorable section of a Xaml file.
			-->
		<IncludeXamlNamespaces Include="xamarin" />
		<IncludeXamlNamespaces Include="not_win" />
		<IncludeXamlNamespaces Include="legacy" />

		<!--
		A list of analyzer suppressions to include in every generated class.
		This is required for roslyn analyzers that do not support the GeneratedCodeAttribute.
		-->

		<XamlGeneratorAnalyzerSuppressions Include="csharp-618 // Ignore obsolete members warnings" />
		<XamlGeneratorAnalyzerSuppressions Include="csharp-105 // Ignore duplicate namespaces" />
		<XamlGeneratorAnalyzerSuppressions Include="csharp-1591 // Ignore missing XML comment warnings" />
		<XamlGeneratorAnalyzerSuppressions Include="csharp-CS8669 // Ignore annotation for nullable reference types" />
		<XamlGeneratorAnalyzerSuppressions Include="csharp-CS9113 // Parameter is unread" />
	</ItemGroup>

	<!--Default UI automation member mappings-->
	<ItemGroup Condition="@(CustomUiAutomationMemberMapping)==''">
		<CustomUiAutomationMemberMapping Include="nVentive.Umbrella.Views.Controls.AsyncValuePresenter">
			<Mappings>
				DataSource
			</Mappings>
		</CustomUiAutomationMemberMapping>
		<CustomUiAutomationMemberMapping Include="Microsoft.UI.Xaml.Controls.IItemsControl">
			<Mappings>
				ItemsSource
			</Mappings>
		</CustomUiAutomationMemberMapping>
		<CustomUiAutomationMemberMapping Include="Uno.UI.Controls.BindableListView">
			<Mappings>
				ItemsSource
			</Mappings>
		</CustomUiAutomationMemberMapping>
		<CustomUiAutomationMemberMapping Include="Uno.UI.Controls.BindableGridView">
			<Mappings>
				ItemsSource
			</Mappings>
		</CustomUiAutomationMemberMapping>
		<CustomUiAutomationMemberMapping Include="Microsoft.UI.Xaml.Controls.ItemsControl">
			<Mappings>
				ItemsSource
			</Mappings>
		</CustomUiAutomationMemberMapping>
		<CustomUiAutomationMemberMapping Include="Microsoft.UI.Xaml.Controls.PasswordBox">
			<Mappings>
				Password
			</Mappings>
		</CustomUiAutomationMemberMapping>
		<CustomUiAutomationMemberMapping Include="Microsoft.UI.Xaml.Controls.TextBox">
			<Mappings>
				Text
				Uno.UI.Behaviors.TextBoxBehavior.Text
				nVentive.Umbrella.Views.Behaviors.TextBoxBehavior.Text
				nVentive.Umbrella.Views.Behaviors.PasswordBoxBehavior.Text
			</Mappings>
		</CustomUiAutomationMemberMapping>
		<CustomUiAutomationMemberMapping Include="Microsoft.UI.Xaml.Controls.Button">
			<Mappings>
				Command
			</Mappings>
		</CustomUiAutomationMemberMapping>
		<CustomUiAutomationMemberMapping Include="Microsoft.UI.Xaml.Controls.ToggleButton">
			<Mappings>
				IsChecked
			</Mappings>
		</CustomUiAutomationMemberMapping>
		<CustomUiAutomationMemberMapping Include="Microsoft.UI.Xaml.Controls.HyperlinkButton">
			<Mappings>
				Command
			</Mappings>
		</CustomUiAutomationMemberMapping>
		<CustomUiAutomationMemberMapping Include="Microsoft.UI.Xaml.Controls.TextBlock">
			<Mappings>
				Text
			</Mappings>
		</CustomUiAutomationMemberMapping>
		<CustomUiAutomationMemberMapping Include="Microsoft.UI.Xaml.Controls.Image">
			<Mappings>
				Source
			</Mappings>
		</CustomUiAutomationMemberMapping>
		<CustomUiAutomationMemberMapping Include="Microsoft.UI.Xaml.Controls.DatePicker">
			<Mappings>
				Date
			</Mappings>
		</CustomUiAutomationMemberMapping>
		<CustomUiAutomationMemberMapping Include="Microsoft.UI.Xaml.Controls.ComboBox">
			<Mappings>
				ItemsSource
			</Mappings>
		</CustomUiAutomationMemberMapping>
	</ItemGroup>

	<Target Name="_FillSourceGeneratorItemGroups">

		<ItemGroup>
			<CustomUiAutomationMemberMappingAdjusted Include="@(CustomUiAutomationMemberMapping)" Mappings="$([System.String]::new('%(Mappings)').Replace('&#x0A;',','))" />
		</ItemGroup>

		<CreateProperty Value="@(ExcludeXamlNamespaces, ',')">
			<Output
					TaskParameter="Value"
					PropertyName="ExcludeXamlNamespacesProperty" />
		</CreateProperty>

		<CreateProperty Value="@(IncludeXamlNamespaces, ',')">
			<Output
					TaskParameter="Value"
					PropertyName="IncludeXamlNamespacesProperty" />
		</CreateProperty>

		<CreateProperty Value="@(XamlGeneratorAnalyzerSuppressions, ',')">
			<Output
					TaskParameter="Value"
					PropertyName="XamlGeneratorAnalyzerSuppressionsProperty" />
		</CreateProperty>

		<CreateProperty Value="$(ProjectTypeGuids.Replace(';',','))">
			<Output
					TaskParameter="Value"
					PropertyName="ProjectTypeGuidsProperty" />
		</CreateProperty>

		<CreateProperty Value="$(DefineConstants.Replace(';',','))">
			<Output
					TaskParameter="Value"
					PropertyName="DefineConstantsProperty" />
		</CreateProperty>

	</Target>

	<Target Name="_InjectAdditionalFiles" BeforeTargets="GenerateMSBuildEditorConfigFileShouldRun;GenerateMSBuildEditorConfigFileCore" DependsOnTargets="_FillSourceGeneratorItemGroups">
		<ItemGroup>
			<AdditionalFiles Include="@(Page)" SourceItemGroup="Page" />
			<AdditionalFiles Include="@(ApplicationDefinition)" SourceItemGroup="ApplicationDefinition" />
			<AdditionalFiles Include="@(PRIResource)" SourceItemGroup="PRIResource" />
			<AdditionalFiles Include="@(UnoPage)" SourceItemGroup="Page" />
			<AdditionalFiles Include="@(UnoApplicationDefinition)" SourceItemGroup="ApplicationDefinition" />
			<AdditionalFiles Include="@(ProjectReference)" SourceItemGroup="ProjectReference" />

			<_AdditionalFilesCleanup Include="@(AdditionalFiles)" />
			<AdditionalFiles Remove="@(_AdditionalFilesCleanup)" />
			<AdditionalFiles Condition="'@(_AdditionalFilesCleanup)'!=''" Include="@(_AdditionalFilesCleanup->'$([System.IO.Path]::GetFullPath('%(_AdditionalFilesCleanup.Identity)'))')" />
		</ItemGroup>
	</Target>

	<Target Name="UnoLogGeneratorsType" BeforeTargets="CoreCompile" Condition="'$(ShouldRunGenerator)'=='true'">
		<WriteLinesToFile File="$(IntermediateOutputPath)\build-time-generator.touch" />
	</Target>

	<Target Name="_RemoveRoslynUnoSourceGeneration" BeforeTargets="CoreCompile;XamlPreCompile" Condition="'$(ShouldRunGenerator)'!='true'">
		<!-- If this is a Windows build, remove the analyzer item for the generators. -->
		<ItemGroup>
			<_AnalyzerToRemove Include="@(Analyzer)" Condition="'%(FileName)'=='Uno.UI.SourceGenerators'" />
			<Analyzer Remove="@(_AnalyzerToRemove)"/>
		</ItemGroup>
	</Target>

	<Target Name="_UnoUIValidateLongPathSupport"
			BeforeTargets="CoreCompile"
			Condition="'$(MSBuildRuntimeType)'!='Core' and $([MSBuild]::IsOsPlatform(Windows)) and ( ('$(EmitCompilerGeneratedFiles)'=='true') or '$(MSBuildThisFileDirectory.Length)' &gt; 64)">
		<!---
	Validation for LongPath support (source https://github.com/dotnet/roslyn/blob/c8eecdb9563127988b3cb564a493eae9ef254a88/eng/build.ps1#L607)
	https://docs.microsoft.com/en-us/archive/blogs/jeremykuhne/net-4-6-2-and-long-paths-on-windows-10#enabling-win32-long-path-support
	-->

		<Warning
		  Condition="'$(registry:HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\FileSystem@LongPathsEnabled)'!='1' and '$(UnoUIDisableLongPathWarning)'==''"
		  Text="Windows LongPath support is not enabled, you may experience build errors. You can avoid these by enabling LongPath with &quot;reg ADD HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1&quot;, or disable this warning by setting UnoUIDisableLongPathWarning to true."/>
	</Target>

	<Target Name="_UnoUIValidateInvalidRoslynPath"
			BeforeTargets="CoreCompile">
		<!---
	Validation '#' escaped path https://github.com/unoplatform/uno/issues/5953
	-->

		<Warning
		  Condition="$(MSBuildProjectFullPath.Contains('#')) and '$(UnoUIDisable5953Warning)'==''"
		  Text="The path to your project contains the '#' character, which causes known build issues. Try moving your project to a different location. (See https://github.com/unoplatform/uno/issues/5953 for more details)."/>
	</Target>

	<Target Name="Roslyn51768Workaround"
			BeforeTargets="BeforeBuild"
					Condition="'$(DisableRoslyn51768Workaround)'==''">
		<!-- Workaround for https://github.com/dotnet/roslyn/issues/51768 -->
		<CreateProperty Value="$(IntermediateOutputPath)$(MSBuildProjectName).d$(DesignTimeBuild)-b$(BuildingProject).GeneratedMSBuildEditorConfig.editorconfig">
			<Output
				TaskParameter="Value"
				PropertyName="GeneratedMSBuildEditorConfigFile" />
		</CreateProperty>
	</Target>

	<Target Name="_GenerateReloadCookie" BeforeTargets="BeforeCompile" Condition="'$(DefaultLanguageSourceExtension)'=='.cs'">
		<!-- Generate an empty C# file that OmniSharp can pick up when Uno has marked XAML files as modified -->
		<WriteLinesToFile File="$(IntermediateOutputPath)\uno.reload.cookie.g.cs" />
		<ItemGroup>
			<Compile Include="$(IntermediateOutputPath)\uno.reload.cookie.g.cs" />
		</ItemGroup>
	</Target>

</Project>
