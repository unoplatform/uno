<Project Sdk="Uno.Sdk.Private">
  <PropertyGroup>
    <TargetFrameworks>net9.0-browserwasm;net9.0-ios;net9.0-android</TargetFrameworks>

    <OutputType>Exe</OutputType>
    <UnoSingleProject>true</UnoSingleProject>

    <!-- Display name -->
    <ApplicationTitle>uno56droidioswasmskia</ApplicationTitle>
    <!-- App Identifier -->
    <ApplicationId>com.companyname.uno56droidioswasmskia</ApplicationId>
    <!-- Versions -->
    <ApplicationDisplayVersion>1.0</ApplicationDisplayVersion>
    <ApplicationVersion>1</ApplicationVersion>
    <!--
      If you encounter this error message:

        error NETSDK1148: A referenced assembly was compiled using a newer version of Microsoft.Windows.SDK.NET.dll.
        Please update to a newer .NET SDK in order to reference this assembly.

      This means that the two packages below must be aligned with the "build" version number of
      the "Microsoft.Windows.SDK.BuildTools" package above, and the "revision" version number
      must be the highest found in https://www.nuget.org/packages/Microsoft.Windows.SDK.NET.Ref.
    -->
    <!-- <WindowsSdkPackageVersion>10.0.22621.28</WindowsSdkPackageVersion> -->

    <!--
      UnoFeatures let's you quickly add and manage implicit package references based on the features you want to use.
      https://aka.platform.uno/singleproject-features
    -->
    <UnoFeatures>
      SkiaRenderer;
    </UnoFeatures>
  </PropertyGroup>

  <ItemGroup>
    <!-- This file should not cause a duplicate content inclusion on Wasm -->
    <Content Include="TestStaticContent.json" />
  </ItemGroup>

  <Target Name="_UnoValidateSelfAssets" 
          BeforeTargets="AfterBuild" 
          Condition="'$(TargetFramework)'=='net9.0-windows10.0.19041'">

    <!-- Validates that assets are properly propagated to the output folder, regardless of their "copy to output" value -->
    <Error Text="Missing asset $(OutputPath)\Assets\SharedAssets.md"
          Condition="!exists('$(OutputPath)\Assets\SharedAssets.md')" />
  </Target>

  <!-- fail the build if a BundleResource.LogicalName contains a rooted path -->
  <Target Name="ValidateBundleResourceLogicalName" AfterTargets="AfterBuild">
    <Error 
      Condition="'%(BundleResource.LogicalName)' != '' And $([System.IO.Path]::IsPathRooted('%(BundleResource.LogicalName)'))" 
      Text="BundleResource.LogicalName must not contain a rooted path" />
  </Target>
  
  <ItemGroup>
    <ProjectReference Include="..\UnoLibrary1\UnoLibrary1.csproj" />
  </ItemGroup>

</Project>
