<!-- Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT License. See LICENSE in the project root for license information. -->
<!-- MUX reference InfoBar_v1.xaml, commit 1f7779d -->
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:contract7Present="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract,7)"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Microsoft.UI.Xaml.Controls"
    xmlns:primitives="using:Microsoft.UI.Xaml.Controls.Primitives">

	<Style TargetType="local:InfoBar">
		<Setter Property="IsTabStop" Value="False"/>
		<Setter Property="CloseButtonStyle" Value="{StaticResource InfoBarCloseButtonStyle}" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="local:InfoBar">
					<Border x:Name="ContentRoot" 
                        VerticalAlignment="Top"
                        Background="{ThemeResource InfoBarInformationalSeverityBackgroundBrush}"
                        BorderBrush="{ThemeResource InfoBarBorderBrush}"
                        BorderThickness="{ThemeResource InfoBarBorderThickness}">

						<VisualStateManager.VisualStateGroups>

							<VisualStateGroup x:Name="SeverityLevels">
								<VisualState x:Name="Informational"/>

								<VisualState x:Name="Error">
									<VisualState.Setters>
										<Setter Target="ContentRoot.Background" Value="{ThemeResource InfoBarErrorSeverityBackgroundBrush}"/>
										<Setter Target="StandardIcon.Glyph" Value="{StaticResource InfoBarErrorIconGlyph}"/>
										<Setter Target="StandardIcon.Foreground" Value="{ThemeResource InfoBarErrorSeverityIconForeground}"/>
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="Warning">
									<VisualState.Setters>
										<Setter Target="ContentRoot.Background" Value="{ThemeResource InfoBarWarningSeverityBackgroundBrush}"/>
										<Setter Target="StandardIcon.Glyph" Value="{StaticResource InfoBarWarningIconGlyph}"/>
										<Setter Target="StandardIcon.Foreground" Value="{ThemeResource InfoBarWarningSeverityIconForeground}"/>
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="Success">
									<VisualState.Setters>
										<Setter Target="ContentRoot.Background" Value="{ThemeResource InfoBarSuccessSeverityBackgroundBrush}"/>
										<Setter Target="StandardIcon.Glyph" Value="{StaticResource InfoBarSuccessIconGlyph}"/>
										<Setter Target="StandardIcon.Foreground" Value="{ThemeResource InfoBarSuccessSeverityIconForeground}"/>
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="IconStates">
								<VisualState x:Name="StandardIconVisible">
									<VisualState.Setters>
										<Setter Target="StandardIcon.Visibility" Value="Visible"/>
										<Setter Target="UserIconBorder.Visibility" Value="Collapsed"/>
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="UserIconVisible">
									<VisualState.Setters>
										<Setter Target="UserIconBorder.Visibility" Value="Visible"/>
										<Setter Target="StandardIcon.Visibility" Value="Collapsed"/>
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="NoIconVisible"/>
							</VisualStateGroup>

							<VisualStateGroup>
								<VisualState x:Name="CloseButtonVisible"/>
								<VisualState x:Name="CloseButtonCollapsed">
									<VisualState.Setters>
										<Setter Target="CloseButton.Visibility" Value="Collapsed"/>
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="InfoBarVisibility">
								<VisualState x:Name="InfoBarVisible"/>
								<VisualState x:Name="InfoBarCollapsed">
									<VisualState.Setters>
										<Setter Target="ContentRoot.Visibility" Value="Collapsed"/>
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup>
								<VisualState x:Name="ForegroundNotSet"/>
								<VisualState x:Name="ForegroundSet">
									<VisualState.Setters>
										<Setter Target="Title.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Foreground}"/>
										<Setter Target="Message.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Foreground}"/>
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>

						</VisualStateManager.VisualStateGroups>

						<!-- Background is used here so that it overrides the severity status color if set. -->
						<Grid
                            HorizontalAlignment="Stretch"
                            MinHeight="{ThemeResource InfoBarMinHeight}"
                            Background="{TemplateBinding Background}"
                            Padding="{StaticResource InfoBarContentRootPadding}">

							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"/>
								<!-- Icon -->
								<ColumnDefinition Width="*"/>
								<!-- Title, message, and action -->
								<ColumnDefinition Width="Auto"/>
								<!-- Close button -->
							</Grid.ColumnDefinitions>

							<Grid.RowDefinitions>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="Auto"/>
							</Grid.RowDefinitions>

							<FontIcon x:Name="StandardIcon"
                                Grid.Column="0"
                                Visibility="Collapsed"
                                VerticalAlignment="Top"
                                Margin="{StaticResource InfoBarIconMargin}"
                                FontSize="{StaticResource InfoBarIconFontSize}"
                                Glyph="{StaticResource InfoBarInformationalIconGlyph}"
                                Foreground="{ThemeResource InfoBarInformationalSeverityIconForeground}"
                                FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                AutomationProperties.AccessibilityView="Content" />

							<Border x:Name="UserIconBorder"
                                Grid.Column="0"
                                Visibility="Collapsed"
                                VerticalAlignment="Top"
                                Margin="{StaticResource InfoBarIconMargin}"
                                Child="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.IconElement}" />

							<primitives:InfoBarPanel
                                Grid.Column="1"
                                Margin="{StaticResource InfoBarPanelMargin}"
                                HorizontalOrientationPadding="{StaticResource InfoBarPanelHorizontalOrientationPadding}"
                                VerticalOrientationPadding="{StaticResource InfoBarPanelVerticalOrientationPadding}">

								<TextBlock x:Name="Title"
                                    Text="{TemplateBinding Title}"
                                    Foreground="{ThemeResource InfoBarTitleForeground}"
                                    primitives:InfoBarPanel.HorizontalOrientationMargin="{StaticResource InfoBarTitleHorizontalOrientationMargin}"
                                    primitives:InfoBarPanel.VerticalOrientationMargin="{StaticResource InfoBarTitleVerticalOrientationMargin}"
                                    TextWrapping="WrapWholeWords"
                                    AutomationProperties.LandmarkType="Navigation"
                                    FontWeight="{StaticResource InfoBarTitleFontWeight}"
                                    FontSize="{StaticResource InfoBarTitleFontSize}"/>

								<TextBlock x:Name="Message" 
                                    Text="{TemplateBinding Message}"
                                    Foreground="{ThemeResource InfoBarMessageForeground}"
                                    primitives:InfoBarPanel.HorizontalOrientationMargin="{StaticResource InfoBarMessageHorizontalOrientationMargin}"
                                    primitives:InfoBarPanel.VerticalOrientationMargin="{StaticResource InfoBarMessageVerticalOrientationMargin}"
                                    TextWrapping="WrapWholeWords"
                                    FontWeight="{StaticResource InfoBarMessageFontWeight}"
                                    FontSize="{StaticResource InfoBarMessageFontSize}"/>

								<ContentPresenter
                                    primitives:InfoBarPanel.HorizontalOrientationMargin="{StaticResource InfoBarActionHorizontalOrientationMargin}"
                                    primitives:InfoBarPanel.VerticalOrientationMargin="{StaticResource InfoBarActionVerticalOrientationMargin}"
                                    VerticalAlignment="Top"
                                    Content="{TemplateBinding ActionButton}">

									<ContentPresenter.Resources>
										<Style TargetType="Button">
											<Style.Setters>
												<Setter Property="MinWidth" Value="{StaticResource InfoBarActionButtonMinWidth}"/>
												<Setter Property="Padding" Value="{StaticResource InfoBarActionButtonPadding}"/>
												<Setter Property="MinHeight" Value="{StaticResource InfoBarActionButtonMinHeight}"/>
												<contract7Present:Setter Property="CornerRadius" Value="{StaticResource InfoBarActionButtonCornerRadius}"/>
											</Style.Setters>
										</Style>

										<Style TargetType="HyperlinkButton">
											<Style.Setters>
												<Setter Property="FontSize" Value="{ThemeResource InfoBarHyperlinkButtonFontSize}"/>
												<Setter Property="Foreground" Value="{ThemeResource InfoBarHyperlinkButtonForeground}"/>
												<Setter Property="Padding" Value="{StaticResource InfoBarHyperlinkButtonPadding}"/>
												<Setter Property="MinHeight" Value="{ThemeResource InfoBarHyperlinkButtonMinHeight}"/>
											</Style.Setters>
										</Style>
									</ContentPresenter.Resources>
								</ContentPresenter>

							</primitives:InfoBarPanel>

							<ContentPresenter
                                Grid.Column="1"
                                Grid.Row="1"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"/>

							<Button Name="CloseButton"
                                Grid.Column="2"
                                Command="{TemplateBinding CloseButtonCommand}" 
                                CommandParameter="{TemplateBinding CloseButtonCommandParameter}"
                                Style="{TemplateBinding CloseButtonStyle}">

								<Viewbox Width="{StaticResource InfoBarCloseButtonGlyphSize}"
                                    Height="{StaticResource InfoBarCloseButtonGlyphSize}"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center">
									<SymbolIcon Symbol="{StaticResource InfoBarCloseButtonSymbol}"/>
								</Viewbox>
							</Button>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>
