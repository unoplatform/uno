// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Microsoft.UI.Xaml.Automation
{
#if false || false || false || false || false || false || false
	[global::Uno.NotImplemented]
#endif
	public partial class AutomationProperties
	{
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public static global::Microsoft.UI.Xaml.DependencyProperty AcceleratorKeyProperty { get; } =
		Microsoft.UI.Xaml.DependencyProperty.RegisterAttached(
			"AcceleratorKey", typeof(string),
			typeof(global::Microsoft.UI.Xaml.Automation.AutomationProperties),
			new Microsoft.UI.Xaml.FrameworkPropertyMetadata(default(string)));
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public static global::Microsoft.UI.Xaml.DependencyProperty AccessKeyProperty { get; } =
		Microsoft.UI.Xaml.DependencyProperty.RegisterAttached(
			"AccessKey", typeof(string),
			typeof(global::Microsoft.UI.Xaml.Automation.AutomationProperties),
			new Microsoft.UI.Xaml.FrameworkPropertyMetadata(default(string)));
#endif
		// Skipping already declared property AccessibilityViewProperty
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public static global::Microsoft.UI.Xaml.DependencyProperty AnnotationsProperty { get; } =
		Microsoft.UI.Xaml.DependencyProperty.RegisterAttached(
			"Annotations", typeof(global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Automation.AutomationAnnotation>),
			typeof(global::Microsoft.UI.Xaml.Automation.AutomationProperties),
			new Microsoft.UI.Xaml.FrameworkPropertyMetadata(default(global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Automation.AutomationAnnotation>)));
#endif
		// Skipping already declared property AutomationIdProperty
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public static global::Microsoft.UI.Xaml.DependencyProperty ControlledPeersProperty { get; } =
		Microsoft.UI.Xaml.DependencyProperty.RegisterAttached(
			"ControlledPeers", typeof(global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.UIElement>),
			typeof(global::Microsoft.UI.Xaml.Automation.AutomationProperties),
			new Microsoft.UI.Xaml.FrameworkPropertyMetadata(default(global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.UIElement>)));
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public static global::Microsoft.UI.Xaml.DependencyProperty CultureProperty { get; } =
		Microsoft.UI.Xaml.DependencyProperty.RegisterAttached(
			"Culture", typeof(int),
			typeof(global::Microsoft.UI.Xaml.Automation.AutomationProperties),
			new Microsoft.UI.Xaml.FrameworkPropertyMetadata(default(int)));
#endif
		// Skipping already declared property DescribedByProperty
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public static global::Microsoft.UI.Xaml.DependencyProperty FlowsFromProperty { get; } =
		Microsoft.UI.Xaml.DependencyProperty.RegisterAttached(
			"FlowsFrom", typeof(global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.DependencyObject>),
			typeof(global::Microsoft.UI.Xaml.Automation.AutomationProperties),
			new Microsoft.UI.Xaml.FrameworkPropertyMetadata(default(global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.DependencyObject>)));
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public static global::Microsoft.UI.Xaml.DependencyProperty FlowsToProperty { get; } =
		Microsoft.UI.Xaml.DependencyProperty.RegisterAttached(
			"FlowsTo", typeof(global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.DependencyObject>),
			typeof(global::Microsoft.UI.Xaml.Automation.AutomationProperties),
			new Microsoft.UI.Xaml.FrameworkPropertyMetadata(default(global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.DependencyObject>)));
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public static global::Microsoft.UI.Xaml.DependencyProperty FullDescriptionProperty { get; } =
		Microsoft.UI.Xaml.DependencyProperty.RegisterAttached(
			"FullDescription", typeof(string),
			typeof(global::Microsoft.UI.Xaml.Automation.AutomationProperties),
			new Microsoft.UI.Xaml.FrameworkPropertyMetadata(default(string)));
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public static global::Microsoft.UI.Xaml.DependencyProperty HeadingLevelProperty { get; } =
		Microsoft.UI.Xaml.DependencyProperty.RegisterAttached(
			"HeadingLevel", typeof(global::Microsoft.UI.Xaml.Automation.Peers.AutomationHeadingLevel),
			typeof(global::Microsoft.UI.Xaml.Automation.AutomationProperties),
			new Microsoft.UI.Xaml.FrameworkPropertyMetadata(default(global::Microsoft.UI.Xaml.Automation.Peers.AutomationHeadingLevel)));
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public static global::Microsoft.UI.Xaml.DependencyProperty HelpTextProperty { get; } =
		Microsoft.UI.Xaml.DependencyProperty.RegisterAttached(
			"HelpText", typeof(string),
			typeof(global::Microsoft.UI.Xaml.Automation.AutomationProperties),
			new Microsoft.UI.Xaml.FrameworkPropertyMetadata(default(string)));
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public static global::Microsoft.UI.Xaml.DependencyProperty IsDataValidForFormProperty { get; } =
		Microsoft.UI.Xaml.DependencyProperty.RegisterAttached(
			"IsDataValidForForm", typeof(bool),
			typeof(global::Microsoft.UI.Xaml.Automation.AutomationProperties),
			new Microsoft.UI.Xaml.FrameworkPropertyMetadata(default(bool)));
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public static global::Microsoft.UI.Xaml.DependencyProperty IsDialogProperty { get; } =
		Microsoft.UI.Xaml.DependencyProperty.RegisterAttached(
			"IsDialog", typeof(bool),
			typeof(global::Microsoft.UI.Xaml.Automation.AutomationProperties),
			new Microsoft.UI.Xaml.FrameworkPropertyMetadata(default(bool)));
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public static global::Microsoft.UI.Xaml.DependencyProperty IsPeripheralProperty { get; } =
		Microsoft.UI.Xaml.DependencyProperty.RegisterAttached(
			"IsPeripheral", typeof(bool),
			typeof(global::Microsoft.UI.Xaml.Automation.AutomationProperties),
			new Microsoft.UI.Xaml.FrameworkPropertyMetadata(default(bool)));
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public static global::Microsoft.UI.Xaml.DependencyProperty IsRequiredForFormProperty { get; } =
		Microsoft.UI.Xaml.DependencyProperty.RegisterAttached(
			"IsRequiredForForm", typeof(bool),
			typeof(global::Microsoft.UI.Xaml.Automation.AutomationProperties),
			new Microsoft.UI.Xaml.FrameworkPropertyMetadata(default(bool)));
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public static global::Microsoft.UI.Xaml.DependencyProperty ItemStatusProperty { get; } =
		Microsoft.UI.Xaml.DependencyProperty.RegisterAttached(
			"ItemStatus", typeof(string),
			typeof(global::Microsoft.UI.Xaml.Automation.AutomationProperties),
			new Microsoft.UI.Xaml.FrameworkPropertyMetadata(default(string)));
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public static global::Microsoft.UI.Xaml.DependencyProperty ItemTypeProperty { get; } =
		Microsoft.UI.Xaml.DependencyProperty.RegisterAttached(
			"ItemType", typeof(string),
			typeof(global::Microsoft.UI.Xaml.Automation.AutomationProperties),
			new Microsoft.UI.Xaml.FrameworkPropertyMetadata(default(string)));
#endif
		// Skipping already declared property LabeledByProperty
		// Skipping already declared property LandmarkTypeProperty
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public static global::Microsoft.UI.Xaml.DependencyProperty LevelProperty { get; } =
		Microsoft.UI.Xaml.DependencyProperty.RegisterAttached(
			"Level", typeof(int),
			typeof(global::Microsoft.UI.Xaml.Automation.AutomationProperties),
			new Microsoft.UI.Xaml.FrameworkPropertyMetadata(default(int)));
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public static global::Microsoft.UI.Xaml.DependencyProperty LiveSettingProperty { get; } =
		Microsoft.UI.Xaml.DependencyProperty.RegisterAttached(
			"LiveSetting", typeof(global::Microsoft.UI.Xaml.Automation.Peers.AutomationLiveSetting),
			typeof(global::Microsoft.UI.Xaml.Automation.AutomationProperties),
			new Microsoft.UI.Xaml.FrameworkPropertyMetadata(default(global::Microsoft.UI.Xaml.Automation.Peers.AutomationLiveSetting)));
#endif
		// Skipping already declared property LocalizedControlTypeProperty
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public static global::Microsoft.UI.Xaml.DependencyProperty LocalizedLandmarkTypeProperty { get; } =
		Microsoft.UI.Xaml.DependencyProperty.RegisterAttached(
			"LocalizedLandmarkType", typeof(string),
			typeof(global::Microsoft.UI.Xaml.Automation.AutomationProperties),
			new Microsoft.UI.Xaml.FrameworkPropertyMetadata(default(string)));
#endif
		// Skipping already declared property NameProperty
		// Skipping already declared property PositionInSetProperty
		// Skipping already declared property SizeOfSetProperty
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public static global::Microsoft.UI.Xaml.DependencyProperty AutomationControlTypeProperty { get; } =
		Microsoft.UI.Xaml.DependencyProperty.RegisterAttached(
			"AutomationControlType", typeof(global::Microsoft.UI.Xaml.Automation.Peers.AutomationControlType),
			typeof(global::Microsoft.UI.Xaml.Automation.AutomationProperties),
			new Microsoft.UI.Xaml.FrameworkPropertyMetadata(default(global::Microsoft.UI.Xaml.Automation.Peers.AutomationControlType)));
#endif
		// Forced skipping of method Microsoft.UI.Xaml.Automation.AutomationProperties.AutomationControlTypeProperty.get
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public static global::Microsoft.UI.Xaml.Automation.Peers.AutomationControlType GetAutomationControlType(global::Microsoft.UI.Xaml.UIElement element)
		{
			return (global::Microsoft.UI.Xaml.Automation.Peers.AutomationControlType)element.GetValue(AutomationControlTypeProperty);
		}
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public static void SetAutomationControlType(global::Microsoft.UI.Xaml.UIElement element, global::Microsoft.UI.Xaml.Automation.Peers.AutomationControlType value)
		{
			element.SetValue(AutomationControlTypeProperty, value);
		}
#endif
		// Forced skipping of method Microsoft.UI.Xaml.Automation.AutomationProperties.AcceleratorKeyProperty.get
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public static string GetAcceleratorKey(global::Microsoft.UI.Xaml.DependencyObject element)
		{
			return (string)element.GetValue(AcceleratorKeyProperty);
		}
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public static void SetAcceleratorKey(global::Microsoft.UI.Xaml.DependencyObject element, string value)
		{
			element.SetValue(AcceleratorKeyProperty, value);
		}
#endif
		// Forced skipping of method Microsoft.UI.Xaml.Automation.AutomationProperties.AccessKeyProperty.get
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public static string GetAccessKey(global::Microsoft.UI.Xaml.DependencyObject element)
		{
			return (string)element.GetValue(AccessKeyProperty);
		}
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public static void SetAccessKey(global::Microsoft.UI.Xaml.DependencyObject element, string value)
		{
			element.SetValue(AccessKeyProperty, value);
		}
#endif
		// Forced skipping of method Microsoft.UI.Xaml.Automation.AutomationProperties.AutomationIdProperty.get
		// Skipping already declared method Microsoft.UI.Xaml.Automation.AutomationProperties.GetAutomationId(Microsoft.UI.Xaml.DependencyObject)
		// Skipping already declared method Microsoft.UI.Xaml.Automation.AutomationProperties.SetAutomationId(Microsoft.UI.Xaml.DependencyObject, string)
		// Forced skipping of method Microsoft.UI.Xaml.Automation.AutomationProperties.HelpTextProperty.get
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public static string GetHelpText(global::Microsoft.UI.Xaml.DependencyObject element)
		{
			return (string)element.GetValue(HelpTextProperty);
		}
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public static void SetHelpText(global::Microsoft.UI.Xaml.DependencyObject element, string value)
		{
			element.SetValue(HelpTextProperty, value);
		}
#endif
		// Forced skipping of method Microsoft.UI.Xaml.Automation.AutomationProperties.IsRequiredForFormProperty.get
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public static bool GetIsRequiredForForm(global::Microsoft.UI.Xaml.DependencyObject element)
		{
			return (bool)element.GetValue(IsRequiredForFormProperty);
		}
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public static void SetIsRequiredForForm(global::Microsoft.UI.Xaml.DependencyObject element, bool value)
		{
			element.SetValue(IsRequiredForFormProperty, value);
		}
#endif
		// Forced skipping of method Microsoft.UI.Xaml.Automation.AutomationProperties.ItemStatusProperty.get
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public static string GetItemStatus(global::Microsoft.UI.Xaml.DependencyObject element)
		{
			return (string)element.GetValue(ItemStatusProperty);
		}
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public static void SetItemStatus(global::Microsoft.UI.Xaml.DependencyObject element, string value)
		{
			element.SetValue(ItemStatusProperty, value);
		}
#endif
		// Forced skipping of method Microsoft.UI.Xaml.Automation.AutomationProperties.ItemTypeProperty.get
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public static string GetItemType(global::Microsoft.UI.Xaml.DependencyObject element)
		{
			return (string)element.GetValue(ItemTypeProperty);
		}
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public static void SetItemType(global::Microsoft.UI.Xaml.DependencyObject element, string value)
		{
			element.SetValue(ItemTypeProperty, value);
		}
#endif
		// Forced skipping of method Microsoft.UI.Xaml.Automation.AutomationProperties.LabeledByProperty.get
		// Skipping already declared method Microsoft.UI.Xaml.Automation.AutomationProperties.GetLabeledBy(Microsoft.UI.Xaml.DependencyObject)
		// Skipping already declared method Microsoft.UI.Xaml.Automation.AutomationProperties.SetLabeledBy(Microsoft.UI.Xaml.DependencyObject, Microsoft.UI.Xaml.UIElement)
		// Forced skipping of method Microsoft.UI.Xaml.Automation.AutomationProperties.NameProperty.get
		// Skipping already declared method Microsoft.UI.Xaml.Automation.AutomationProperties.GetName(Microsoft.UI.Xaml.DependencyObject)
		// Skipping already declared method Microsoft.UI.Xaml.Automation.AutomationProperties.SetName(Microsoft.UI.Xaml.DependencyObject, string)
		// Forced skipping of method Microsoft.UI.Xaml.Automation.AutomationProperties.LiveSettingProperty.get
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public static global::Microsoft.UI.Xaml.Automation.Peers.AutomationLiveSetting GetLiveSetting(global::Microsoft.UI.Xaml.DependencyObject element)
		{
			return (global::Microsoft.UI.Xaml.Automation.Peers.AutomationLiveSetting)element.GetValue(LiveSettingProperty);
		}
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public static void SetLiveSetting(global::Microsoft.UI.Xaml.DependencyObject element, global::Microsoft.UI.Xaml.Automation.Peers.AutomationLiveSetting value)
		{
			element.SetValue(LiveSettingProperty, value);
		}
#endif
		// Forced skipping of method Microsoft.UI.Xaml.Automation.AutomationProperties.AccessibilityViewProperty.get
		// Skipping already declared method Microsoft.UI.Xaml.Automation.AutomationProperties.GetAccessibilityView(Microsoft.UI.Xaml.DependencyObject)
		// Skipping already declared method Microsoft.UI.Xaml.Automation.AutomationProperties.SetAccessibilityView(Microsoft.UI.Xaml.DependencyObject, Microsoft.UI.Xaml.Automation.Peers.AccessibilityView)
		// Forced skipping of method Microsoft.UI.Xaml.Automation.AutomationProperties.ControlledPeersProperty.get
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public static global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.UIElement> GetControlledPeers(global::Microsoft.UI.Xaml.DependencyObject element)
		{
			return (global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.UIElement>)element.GetValue(ControlledPeersProperty);
		}
#endif
		// Forced skipping of method Microsoft.UI.Xaml.Automation.AutomationProperties.PositionInSetProperty.get
		// Skipping already declared method Microsoft.UI.Xaml.Automation.AutomationProperties.GetPositionInSet(Microsoft.UI.Xaml.DependencyObject)
		// Skipping already declared method Microsoft.UI.Xaml.Automation.AutomationProperties.SetPositionInSet(Microsoft.UI.Xaml.DependencyObject, int)
		// Forced skipping of method Microsoft.UI.Xaml.Automation.AutomationProperties.SizeOfSetProperty.get
		// Skipping already declared method Microsoft.UI.Xaml.Automation.AutomationProperties.GetSizeOfSet(Microsoft.UI.Xaml.DependencyObject)
		// Skipping already declared method Microsoft.UI.Xaml.Automation.AutomationProperties.SetSizeOfSet(Microsoft.UI.Xaml.DependencyObject, int)
		// Forced skipping of method Microsoft.UI.Xaml.Automation.AutomationProperties.LevelProperty.get
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public static int GetLevel(global::Microsoft.UI.Xaml.DependencyObject element)
		{
			return (int)element.GetValue(LevelProperty);
		}
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public static void SetLevel(global::Microsoft.UI.Xaml.DependencyObject element, int value)
		{
			element.SetValue(LevelProperty, value);
		}
#endif
		// Forced skipping of method Microsoft.UI.Xaml.Automation.AutomationProperties.AnnotationsProperty.get
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public static global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Automation.AutomationAnnotation> GetAnnotations(global::Microsoft.UI.Xaml.DependencyObject element)
		{
			return (global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Automation.AutomationAnnotation>)element.GetValue(AnnotationsProperty);
		}
#endif
		// Forced skipping of method Microsoft.UI.Xaml.Automation.AutomationProperties.LandmarkTypeProperty.get
		// Skipping already declared method Microsoft.UI.Xaml.Automation.AutomationProperties.GetLandmarkType(Microsoft.UI.Xaml.DependencyObject)
		// Skipping already declared method Microsoft.UI.Xaml.Automation.AutomationProperties.SetLandmarkType(Microsoft.UI.Xaml.DependencyObject, Microsoft.UI.Xaml.Automation.Peers.AutomationLandmarkType)
		// Forced skipping of method Microsoft.UI.Xaml.Automation.AutomationProperties.LocalizedLandmarkTypeProperty.get
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public static string GetLocalizedLandmarkType(global::Microsoft.UI.Xaml.DependencyObject element)
		{
			return (string)element.GetValue(LocalizedLandmarkTypeProperty);
		}
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public static void SetLocalizedLandmarkType(global::Microsoft.UI.Xaml.DependencyObject element, string value)
		{
			element.SetValue(LocalizedLandmarkTypeProperty, value);
		}
#endif
		// Forced skipping of method Microsoft.UI.Xaml.Automation.AutomationProperties.IsPeripheralProperty.get
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public static bool GetIsPeripheral(global::Microsoft.UI.Xaml.DependencyObject element)
		{
			return (bool)element.GetValue(IsPeripheralProperty);
		}
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public static void SetIsPeripheral(global::Microsoft.UI.Xaml.DependencyObject element, bool value)
		{
			element.SetValue(IsPeripheralProperty, value);
		}
#endif
		// Forced skipping of method Microsoft.UI.Xaml.Automation.AutomationProperties.IsDataValidForFormProperty.get
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public static bool GetIsDataValidForForm(global::Microsoft.UI.Xaml.DependencyObject element)
		{
			return (bool)element.GetValue(IsDataValidForFormProperty);
		}
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public static void SetIsDataValidForForm(global::Microsoft.UI.Xaml.DependencyObject element, bool value)
		{
			element.SetValue(IsDataValidForFormProperty, value);
		}
#endif
		// Forced skipping of method Microsoft.UI.Xaml.Automation.AutomationProperties.FullDescriptionProperty.get
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public static string GetFullDescription(global::Microsoft.UI.Xaml.DependencyObject element)
		{
			return (string)element.GetValue(FullDescriptionProperty);
		}
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public static void SetFullDescription(global::Microsoft.UI.Xaml.DependencyObject element, string value)
		{
			element.SetValue(FullDescriptionProperty, value);
		}
#endif
		// Forced skipping of method Microsoft.UI.Xaml.Automation.AutomationProperties.LocalizedControlTypeProperty.get
		// Skipping already declared method Microsoft.UI.Xaml.Automation.AutomationProperties.GetLocalizedControlType(Microsoft.UI.Xaml.DependencyObject)
		// Skipping already declared method Microsoft.UI.Xaml.Automation.AutomationProperties.SetLocalizedControlType(Microsoft.UI.Xaml.DependencyObject, string)
		// Forced skipping of method Microsoft.UI.Xaml.Automation.AutomationProperties.DescribedByProperty.get
		// Skipping already declared method Microsoft.UI.Xaml.Automation.AutomationProperties.GetDescribedBy(Microsoft.UI.Xaml.DependencyObject)
		// Forced skipping of method Microsoft.UI.Xaml.Automation.AutomationProperties.FlowsToProperty.get
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public static global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.DependencyObject> GetFlowsTo(global::Microsoft.UI.Xaml.DependencyObject element)
		{
			return (global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.DependencyObject>)element.GetValue(FlowsToProperty);
		}
#endif
		// Forced skipping of method Microsoft.UI.Xaml.Automation.AutomationProperties.FlowsFromProperty.get
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public static global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.DependencyObject> GetFlowsFrom(global::Microsoft.UI.Xaml.DependencyObject element)
		{
			return (global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.DependencyObject>)element.GetValue(FlowsFromProperty);
		}
#endif
		// Forced skipping of method Microsoft.UI.Xaml.Automation.AutomationProperties.CultureProperty.get
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public static int GetCulture(global::Microsoft.UI.Xaml.DependencyObject element)
		{
			return (int)element.GetValue(CultureProperty);
		}
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public static void SetCulture(global::Microsoft.UI.Xaml.DependencyObject element, int value)
		{
			element.SetValue(CultureProperty, value);
		}
#endif
		// Forced skipping of method Microsoft.UI.Xaml.Automation.AutomationProperties.HeadingLevelProperty.get
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public static global::Microsoft.UI.Xaml.Automation.Peers.AutomationHeadingLevel GetHeadingLevel(global::Microsoft.UI.Xaml.DependencyObject element)
		{
			return (global::Microsoft.UI.Xaml.Automation.Peers.AutomationHeadingLevel)element.GetValue(HeadingLevelProperty);
		}
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public static void SetHeadingLevel(global::Microsoft.UI.Xaml.DependencyObject element, global::Microsoft.UI.Xaml.Automation.Peers.AutomationHeadingLevel value)
		{
			element.SetValue(HeadingLevelProperty, value);
		}
#endif
		// Forced skipping of method Microsoft.UI.Xaml.Automation.AutomationProperties.IsDialogProperty.get
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public static bool GetIsDialog(global::Microsoft.UI.Xaml.DependencyObject element)
		{
			return (bool)element.GetValue(IsDialogProperty);
		}
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public static void SetIsDialog(global::Microsoft.UI.Xaml.DependencyObject element, bool value)
		{
			element.SetValue(IsDialogProperty, value);
		}
#endif
	}
}
