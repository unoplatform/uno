// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Microsoft.UI.Xaml.Automation.Peers
{
#if false || false || false || false || false || false || false
	[global::Uno.NotImplemented]
#endif
	public partial class AutomationPeer : global::Microsoft.UI.Xaml.DependencyObject
	{
		// Skipping already declared property EventsSource
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.AutomationPeer()
		// Forced skipping of method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.AutomationPeer()
		// Forced skipping of method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.EventsSource.get
		// Forced skipping of method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.EventsSource.set
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetPattern(Microsoft.UI.Xaml.Automation.Peers.PatternInterface)
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.RaiseAutomationEvent(Microsoft.UI.Xaml.Automation.Peers.AutomationEvents)
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.RaisePropertyChangedEvent(Microsoft.UI.Xaml.Automation.AutomationProperty, object, object)
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetAcceleratorKey()
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetAccessKey()
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetAutomationControlType()
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetAutomationId()
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetBoundingRectangle()
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetChildren()
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.Navigate(Microsoft.UI.Xaml.Automation.Peers.AutomationNavigationDirection)
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetClassName()
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetClickablePoint()
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetHelpText()
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetItemStatus()
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetItemType()
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetLabeledBy()
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetLocalizedControlType()
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetName()
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetOrientation()
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.HasKeyboardFocus()
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.IsContentElement()
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.IsControlElement()
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.IsEnabled()
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.IsKeyboardFocusable()
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.IsOffscreen()
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.IsPassword()
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.IsRequiredForForm()
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.SetFocus()
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetParent()
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.InvalidatePeer()
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetPeerFromPoint(Windows.Foundation.Point)
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetElementFromPoint(Windows.Foundation.Point)
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetFocusedElement()
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetLiveSetting()
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.ShowContextMenu()
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetControlledPeers()
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetAnnotations()
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.SetParent(Microsoft.UI.Xaml.Automation.Peers.AutomationPeer)
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public void RaiseTextEditTextChangedEvent(global::Microsoft.UI.Xaml.Automation.AutomationTextEditChangeType automationTextEditChangeType, global::System.Collections.Generic.IReadOnlyList<string> changedData)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Xaml.Automation.Peers.AutomationPeer", "void AutomationPeer.RaiseTextEditTextChangedEvent(AutomationTextEditChangeType automationTextEditChangeType, IReadOnlyList<string> changedData)");
		}
#endif
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetPositionInSet()
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetSizeOfSet()
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetLevel()
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public void RaiseStructureChangedEvent(global::Microsoft.UI.Xaml.Automation.Peers.AutomationStructureChangeType structureChangeType, global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeer child)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Xaml.Automation.Peers.AutomationPeer", "void AutomationPeer.RaiseStructureChangedEvent(AutomationStructureChangeType structureChangeType, AutomationPeer child)");
		}
#endif
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetLandmarkType()
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetLocalizedLandmarkType()
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.IsPeripheral()
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.IsDataValidForForm()
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetFullDescription()
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public int GetCulture()
		{
			throw new global::System.NotImplementedException("The member int AutomationPeer.GetCulture() is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=int%20AutomationPeer.GetCulture%28%29");
		}
#endif
#if false
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public void RaiseNotificationEvent(global::Microsoft.UI.Xaml.Automation.Peers.AutomationNotificationKind notificationKind, global::Microsoft.UI.Xaml.Automation.Peers.AutomationNotificationProcessing notificationProcessing, string displayString, string activityId)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Xaml.Automation.Peers.AutomationPeer", "void AutomationPeer.RaiseNotificationEvent(AutomationNotificationKind notificationKind, AutomationNotificationProcessing notificationProcessing, string displayString, string activityId)");
		}
#endif
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetHeadingLevel()
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.IsDialog()
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		protected global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeer PeerFromProvider(global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple provider)
		{
			throw new global::System.NotImplementedException("The member AutomationPeer AutomationPeer.PeerFromProvider(IRawElementProviderSimple provider) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=AutomationPeer%20AutomationPeer.PeerFromProvider%28IRawElementProviderSimple%20provider%29");
		}
#endif
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.ProviderFromPeer(Microsoft.UI.Xaml.Automation.Peers.AutomationPeer)
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetPatternCore(Microsoft.UI.Xaml.Automation.Peers.PatternInterface)
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetAcceleratorKeyCore()
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetAccessKeyCore()
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetAutomationControlTypeCore()
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetAutomationIdCore()
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetBoundingRectangleCore()
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetChildrenCore()
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.NavigateCore(Microsoft.UI.Xaml.Automation.Peers.AutomationNavigationDirection)
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetClassNameCore()
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetClickablePointCore()
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetHelpTextCore()
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetItemStatusCore()
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetItemTypeCore()
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetLabeledByCore()
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetLocalizedControlTypeCore()
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetNameCore()
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetOrientationCore()
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.HasKeyboardFocusCore()
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.IsContentElementCore()
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.IsControlElementCore()
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.IsEnabledCore()
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.IsKeyboardFocusableCore()
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.IsOffscreenCore()
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.IsPasswordCore()
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.IsRequiredForFormCore()
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.SetFocusCore()
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetPeerFromPointCore(Windows.Foundation.Point)
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetElementFromPointCore(Windows.Foundation.Point)
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetFocusedElementCore()
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetLiveSettingCore()
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.ShowContextMenuCore()
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetControlledPeersCore()
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetAnnotationsCore()
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetPositionInSetCore()
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetSizeOfSetCore()
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetLevelCore()
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetLandmarkTypeCore()
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetLocalizedLandmarkTypeCore()
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.IsPeripheralCore()
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.IsDataValidForFormCore()
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetFullDescriptionCore()
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetDescribedByCore()
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		protected virtual global::System.Collections.Generic.IEnumerable<global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeer> GetFlowsToCore()
		{
			throw new global::System.NotImplementedException("The member IEnumerable<AutomationPeer> AutomationPeer.GetFlowsToCore() is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IEnumerable%3CAutomationPeer%3E%20AutomationPeer.GetFlowsToCore%28%29");
		}
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		protected virtual global::System.Collections.Generic.IEnumerable<global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeer> GetFlowsFromCore()
		{
			throw new global::System.NotImplementedException("The member IEnumerable<AutomationPeer> AutomationPeer.GetFlowsFromCore() is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IEnumerable%3CAutomationPeer%3E%20AutomationPeer.GetFlowsFromCore%28%29");
		}
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		protected virtual int GetCultureCore()
		{
			throw new global::System.NotImplementedException("The member int AutomationPeer.GetCultureCore() is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=int%20AutomationPeer.GetCultureCore%28%29");
		}
#endif
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.GetHeadingLevelCore()
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.IsDialogCore()
		// Skipping already declared method Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.ListenerExists(Microsoft.UI.Xaml.Automation.Peers.AutomationEvents)
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public static global::Microsoft.UI.Xaml.Automation.Peers.RawElementProviderRuntimeId GenerateRawElementProviderRuntimeId()
		{
			throw new global::System.NotImplementedException("The member RawElementProviderRuntimeId AutomationPeer.GenerateRawElementProviderRuntimeId() is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=RawElementProviderRuntimeId%20AutomationPeer.GenerateRawElementProviderRuntimeId%28%29");
		}
#endif
	}
}
