// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Microsoft.UI.Xaml.Controls
{
#if false || false || false || false || false || false || false
	[global::Uno.NotImplemented]
#endif
	public partial class TextBlock
	{
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public bool IsColorFontEnabled
		{
			get
			{
				return (bool)this.GetValue(IsColorFontEnabledProperty);
			}
			set
			{
				this.SetValue(IsColorFontEnabledProperty, value);
			}
		}
#endif
		// Skipping already declared property LineHeight
		// Skipping already declared property HorizontalTextAlignment
		// Skipping already declared property Foreground
		// Skipping already declared property FontWeight
		// Skipping already declared property FontStyle
		// Skipping already declared property FontStretch
		// Skipping already declared property FontSize
		// Skipping already declared property FontFamily
		// Skipping already declared property IsTextSelectionEnabled
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public bool IsTextScaleFactorEnabled
		{
			get
			{
				return (bool)this.GetValue(IsTextScaleFactorEnabledProperty);
			}
			set
			{
				this.SetValue(IsTextScaleFactorEnabledProperty, value);
			}
		}
#endif
		// Skipping already declared property CharacterSpacing
		// Skipping already declared property TextWrapping
		// Skipping already declared property LineStackingStrategy
		// Skipping already declared property TextTrimming
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public global::Microsoft.UI.Xaml.TextReadingOrder TextReadingOrder
		{
			get
			{
				return (global::Microsoft.UI.Xaml.TextReadingOrder)this.GetValue(TextReadingOrderProperty);
			}
			set
			{
				this.SetValue(TextReadingOrderProperty, value);
			}
		}
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public global::Microsoft.UI.Xaml.TextLineBounds TextLineBounds
		{
			get
			{
				return (global::Microsoft.UI.Xaml.TextLineBounds)this.GetValue(TextLineBoundsProperty);
			}
			set
			{
				this.SetValue(TextLineBoundsProperty, value);
			}
		}
#endif
		// Skipping already declared property TextDecorations
		// Skipping already declared property TextAlignment
		// Skipping already declared property Text
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || false || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__NETSTD_REFERENCE__")]
		public global::Microsoft.UI.Xaml.Media.SolidColorBrush SelectionHighlightColor
		{
			get
			{
				return (global::Microsoft.UI.Xaml.Media.SolidColorBrush)this.GetValue(SelectionHighlightColorProperty);
			}
			set
			{
				this.SetValue(SelectionHighlightColorProperty, value);
			}
		}
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public global::Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase SelectionFlyout
		{
			get
			{
				return (global::Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase)this.GetValue(SelectionFlyoutProperty);
			}
			set
			{
				this.SetValue(SelectionFlyoutProperty, value);
			}
		}
#endif
		// Skipping already declared property Padding
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public global::Microsoft.UI.Xaml.OpticalMarginAlignment OpticalMarginAlignment
		{
			get
			{
				return (global::Microsoft.UI.Xaml.OpticalMarginAlignment)this.GetValue(OpticalMarginAlignmentProperty);
			}
			set
			{
				this.SetValue(OpticalMarginAlignmentProperty, value);
			}
		}
#endif
		// Skipping already declared property MaxLines
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public global::Microsoft.UI.Xaml.Documents.TextPointer ContentEnd
		{
			get
			{
				throw new global::System.NotImplementedException("The member TextPointer TextBlock.ContentEnd is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=TextPointer%20TextBlock.ContentEnd");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public global::Microsoft.UI.Xaml.Documents.TextPointer ContentStart
		{
			get
			{
				throw new global::System.NotImplementedException("The member TextPointer TextBlock.ContentStart is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=TextPointer%20TextBlock.ContentStart");
			}
		}
#endif
		// Skipping already declared property Inlines
		// Skipping already declared property IsTextTrimmed
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__NETSTD_REFERENCE__")]
		public string SelectedText
		{
			get
			{
				return (string)this.GetValue(SelectedTextProperty);
			}
		}
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public global::Microsoft.UI.Xaml.Documents.TextPointer SelectionEnd
		{
			get
			{
				throw new global::System.NotImplementedException("The member TextPointer TextBlock.SelectionEnd is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=TextPointer%20TextBlock.SelectionEnd");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public global::Microsoft.UI.Xaml.Documents.TextPointer SelectionStart
		{
			get
			{
				throw new global::System.NotImplementedException("The member TextPointer TextBlock.SelectionStart is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=TextPointer%20TextBlock.SelectionStart");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Documents.TextHighlighter> TextHighlighters
		{
			get
			{
				throw new global::System.NotImplementedException("The member IList<TextHighlighter> TextBlock.TextHighlighters is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IList%3CTextHighlighter%3E%20TextBlock.TextHighlighters");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public double BaselineOffset
		{
			get
			{
				throw new global::System.NotImplementedException("The member double TextBlock.BaselineOffset is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=double%20TextBlock.BaselineOffset");
			}
		}
#endif
		// Skipping already declared property CharacterSpacingProperty
		// Skipping already declared property FontFamilyProperty
		// Skipping already declared property FontSizeProperty
		// Skipping already declared property FontStretchProperty
		// Skipping already declared property FontStyleProperty
		// Skipping already declared property FontWeightProperty
		// Skipping already declared property ForegroundProperty
		// Skipping already declared property HorizontalTextAlignmentProperty
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public static global::Microsoft.UI.Xaml.DependencyProperty IsColorFontEnabledProperty { get; } =
		Microsoft.UI.Xaml.DependencyProperty.Register(
			nameof(IsColorFontEnabled), typeof(bool),
			typeof(global::Microsoft.UI.Xaml.Controls.TextBlock),
			new Microsoft.UI.Xaml.FrameworkPropertyMetadata(default(bool)));
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public static global::Microsoft.UI.Xaml.DependencyProperty IsTextScaleFactorEnabledProperty { get; } =
		Microsoft.UI.Xaml.DependencyProperty.Register(
			nameof(IsTextScaleFactorEnabled), typeof(bool),
			typeof(global::Microsoft.UI.Xaml.Controls.TextBlock),
			new Microsoft.UI.Xaml.FrameworkPropertyMetadata(default(bool)));
#endif
		// Skipping already declared property IsTextSelectionEnabledProperty
		// Skipping already declared property IsTextTrimmedProperty
		// Skipping already declared property LineHeightProperty
		// Skipping already declared property LineStackingStrategyProperty
		// Skipping already declared property MaxLinesProperty
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public static global::Microsoft.UI.Xaml.DependencyProperty OpticalMarginAlignmentProperty { get; } =
		Microsoft.UI.Xaml.DependencyProperty.Register(
			nameof(OpticalMarginAlignment), typeof(global::Microsoft.UI.Xaml.OpticalMarginAlignment),
			typeof(global::Microsoft.UI.Xaml.Controls.TextBlock),
			new Microsoft.UI.Xaml.FrameworkPropertyMetadata(default(global::Microsoft.UI.Xaml.OpticalMarginAlignment)));
#endif
		// Skipping already declared property PaddingProperty
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__NETSTD_REFERENCE__")]
		public static global::Microsoft.UI.Xaml.DependencyProperty SelectedTextProperty { get; } =
		Microsoft.UI.Xaml.DependencyProperty.Register(
			nameof(SelectedText), typeof(string),
			typeof(global::Microsoft.UI.Xaml.Controls.TextBlock),
			new Microsoft.UI.Xaml.FrameworkPropertyMetadata(default(string)));
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public static global::Microsoft.UI.Xaml.DependencyProperty SelectionFlyoutProperty { get; } =
		Microsoft.UI.Xaml.DependencyProperty.Register(
			nameof(SelectionFlyout), typeof(global::Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase),
			typeof(global::Microsoft.UI.Xaml.Controls.TextBlock),
			new Microsoft.UI.Xaml.FrameworkPropertyMetadata(default(global::Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase)));
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || false || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__NETSTD_REFERENCE__")]
		public static global::Microsoft.UI.Xaml.DependencyProperty SelectionHighlightColorProperty { get; } =
		Microsoft.UI.Xaml.DependencyProperty.Register(
			nameof(SelectionHighlightColor), typeof(global::Microsoft.UI.Xaml.Media.SolidColorBrush),
			typeof(global::Microsoft.UI.Xaml.Controls.TextBlock),
			new Microsoft.UI.Xaml.FrameworkPropertyMetadata(default(global::Microsoft.UI.Xaml.Media.SolidColorBrush)));
#endif
		// Skipping already declared property TextAlignmentProperty
		// Skipping already declared property TextDecorationsProperty
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public static global::Microsoft.UI.Xaml.DependencyProperty TextLineBoundsProperty { get; } =
		Microsoft.UI.Xaml.DependencyProperty.Register(
			nameof(TextLineBounds), typeof(global::Microsoft.UI.Xaml.TextLineBounds),
			typeof(global::Microsoft.UI.Xaml.Controls.TextBlock),
			new Microsoft.UI.Xaml.FrameworkPropertyMetadata(default(global::Microsoft.UI.Xaml.TextLineBounds)));
#endif
		// Skipping already declared property TextProperty
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public static global::Microsoft.UI.Xaml.DependencyProperty TextReadingOrderProperty { get; } =
		Microsoft.UI.Xaml.DependencyProperty.Register(
			nameof(TextReadingOrder), typeof(global::Microsoft.UI.Xaml.TextReadingOrder),
			typeof(global::Microsoft.UI.Xaml.Controls.TextBlock),
			new Microsoft.UI.Xaml.FrameworkPropertyMetadata(default(global::Microsoft.UI.Xaml.TextReadingOrder)));
#endif
		// Skipping already declared property TextTrimmingProperty
		// Skipping already declared property TextWrappingProperty
		// Skipping already declared method Microsoft.UI.Xaml.Controls.TextBlock.TextBlock()
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.TextBlock()
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.FontSize.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.FontSize.set
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.FontFamily.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.FontFamily.set
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.FontWeight.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.FontWeight.set
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.FontStyle.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.FontStyle.set
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.FontStretch.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.FontStretch.set
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.CharacterSpacing.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.CharacterSpacing.set
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.Foreground.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.Foreground.set
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.TextWrapping.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.TextWrapping.set
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.TextTrimming.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.TextTrimming.set
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.TextAlignment.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.TextAlignment.set
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.Text.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.Text.set
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.Inlines.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.Padding.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.Padding.set
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.LineHeight.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.LineHeight.set
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.LineStackingStrategy.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.LineStackingStrategy.set
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.IsTextSelectionEnabled.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.IsTextSelectionEnabled.set
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.SelectedText.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.ContentStart.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.ContentEnd.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.SelectionStart.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.SelectionEnd.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.BaselineOffset.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.SelectionHighlightColor.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.SelectionHighlightColor.set
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.MaxLines.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.MaxLines.set
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.TextLineBounds.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.TextLineBounds.set
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.OpticalMarginAlignment.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.OpticalMarginAlignment.set
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.IsColorFontEnabled.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.IsColorFontEnabled.set
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.TextReadingOrder.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.TextReadingOrder.set
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.IsTextScaleFactorEnabled.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.IsTextScaleFactorEnabled.set
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.TextDecorations.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.TextDecorations.set
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.IsTextTrimmed.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.HorizontalTextAlignment.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.HorizontalTextAlignment.set
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.TextHighlighters.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.SelectionFlyout.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.SelectionFlyout.set
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.SelectionChanged.add
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.SelectionChanged.remove
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.ContextMenuOpening.add
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.ContextMenuOpening.remove
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.IsTextTrimmedChanged.add
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.IsTextTrimmedChanged.remove
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || false || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__NETSTD_REFERENCE__")]
		public void SelectAll()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Xaml.Controls.TextBlock", "void TextBlock.SelectAll()");
		}
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public void Select(global::Microsoft.UI.Xaml.Documents.TextPointer start, global::Microsoft.UI.Xaml.Documents.TextPointer end)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Xaml.Controls.TextBlock", "void TextBlock.Select(TextPointer start, TextPointer end)");
		}
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public global::Microsoft.UI.Composition.CompositionBrush GetAlphaMask()
		{
			throw new global::System.NotImplementedException("The member CompositionBrush TextBlock.GetAlphaMask() is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=CompositionBrush%20TextBlock.GetAlphaMask%28%29");
		}
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || false || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__NETSTD_REFERENCE__")]
		public void CopySelectionToClipboard()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Xaml.Controls.TextBlock", "void TextBlock.CopySelectionToClipboard()");
		}
#endif
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.FontSizeProperty.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.FontFamilyProperty.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.FontWeightProperty.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.FontStyleProperty.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.FontStretchProperty.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.CharacterSpacingProperty.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.ForegroundProperty.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.TextWrappingProperty.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.TextTrimmingProperty.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.TextAlignmentProperty.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.TextProperty.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.PaddingProperty.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.LineHeightProperty.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.LineStackingStrategyProperty.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.IsTextSelectionEnabledProperty.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.SelectedTextProperty.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.SelectionHighlightColorProperty.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.MaxLinesProperty.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.TextLineBoundsProperty.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.OpticalMarginAlignmentProperty.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.IsColorFontEnabledProperty.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.TextReadingOrderProperty.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.IsTextScaleFactorEnabledProperty.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.TextDecorationsProperty.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.IsTextTrimmedProperty.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.HorizontalTextAlignmentProperty.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TextBlock.SelectionFlyoutProperty.get
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public event global::Microsoft.UI.Xaml.Controls.ContextMenuOpeningEventHandler ContextMenuOpening
		{
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
			add
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Xaml.Controls.TextBlock", "event ContextMenuOpeningEventHandler TextBlock.ContextMenuOpening");
			}
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
			remove
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Xaml.Controls.TextBlock", "event ContextMenuOpeningEventHandler TextBlock.ContextMenuOpening");
			}
		}
#endif
		// Skipping already declared event Microsoft.UI.Xaml.Controls.TextBlock.IsTextTrimmedChanged
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public event global::Microsoft.UI.Xaml.RoutedEventHandler SelectionChanged
		{
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
			add
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Xaml.Controls.TextBlock", "event RoutedEventHandler TextBlock.SelectionChanged");
			}
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
			remove
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Xaml.Controls.TextBlock", "event RoutedEventHandler TextBlock.SelectionChanged");
			}
		}
#endif
	}
}
