// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Microsoft.UI.Xaml.Controls
{
	[global::Microsoft.UI.Xaml.Markup.ContentPropertyAttribute(Name = "Content")]
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
	[global::Uno.NotImplemented]
#endif
	public partial class TitleBar : global::Microsoft.UI.Xaml.Controls.Control
	{
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public string Title
		{
			get
			{
				return (string)this.GetValue(TitleProperty);
			}
			set
			{
				this.SetValue(TitleProperty, value);
			}
		}
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public string Subtitle
		{
			get
			{
				return (string)this.GetValue(SubtitleProperty);
			}
			set
			{
				this.SetValue(SubtitleProperty, value);
			}
		}
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public global::Microsoft.UI.Xaml.UIElement RightHeader
		{
			get
			{
				return (global::Microsoft.UI.Xaml.UIElement)this.GetValue(RightHeaderProperty);
			}
			set
			{
				this.SetValue(RightHeaderProperty, value);
			}
		}
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public global::Microsoft.UI.Xaml.UIElement LeftHeader
		{
			get
			{
				return (global::Microsoft.UI.Xaml.UIElement)this.GetValue(LeftHeaderProperty);
			}
			set
			{
				this.SetValue(LeftHeaderProperty, value);
			}
		}
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public bool IsPaneToggleButtonVisible
		{
			get
			{
				return (bool)this.GetValue(IsPaneToggleButtonVisibleProperty);
			}
			set
			{
				this.SetValue(IsPaneToggleButtonVisibleProperty, value);
			}
		}
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public bool IsBackButtonVisible
		{
			get
			{
				return (bool)this.GetValue(IsBackButtonVisibleProperty);
			}
			set
			{
				this.SetValue(IsBackButtonVisibleProperty, value);
			}
		}
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public bool IsBackButtonEnabled
		{
			get
			{
				return (bool)this.GetValue(IsBackButtonEnabledProperty);
			}
			set
			{
				this.SetValue(IsBackButtonEnabledProperty, value);
			}
		}
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public global::Microsoft.UI.Xaml.Controls.IconSource IconSource
		{
			get
			{
				return (global::Microsoft.UI.Xaml.Controls.IconSource)this.GetValue(IconSourceProperty);
			}
			set
			{
				this.SetValue(IconSourceProperty, value);
			}
		}
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public global::Microsoft.UI.Xaml.UIElement Content
		{
			get
			{
				return (global::Microsoft.UI.Xaml.UIElement)this.GetValue(ContentProperty);
			}
			set
			{
				this.SetValue(ContentProperty, value);
			}
		}
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public global::Microsoft.UI.Xaml.Controls.TitleBarTemplateSettings TemplateSettings
		{
			get
			{
				return (global::Microsoft.UI.Xaml.Controls.TitleBarTemplateSettings)this.GetValue(TemplateSettingsProperty);
			}
		}
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public static global::Microsoft.UI.Xaml.DependencyProperty ContentProperty { get; } =
		Microsoft.UI.Xaml.DependencyProperty.Register(
			nameof(Content), typeof(global::Microsoft.UI.Xaml.UIElement),
			typeof(global::Microsoft.UI.Xaml.Controls.TitleBar),
			new Microsoft.UI.Xaml.FrameworkPropertyMetadata(default(global::Microsoft.UI.Xaml.UIElement)));
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public static global::Microsoft.UI.Xaml.DependencyProperty IconSourceProperty { get; } =
		Microsoft.UI.Xaml.DependencyProperty.Register(
			nameof(IconSource), typeof(global::Microsoft.UI.Xaml.Controls.IconSource),
			typeof(global::Microsoft.UI.Xaml.Controls.TitleBar),
			new Microsoft.UI.Xaml.FrameworkPropertyMetadata(default(global::Microsoft.UI.Xaml.Controls.IconSource)));
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public static global::Microsoft.UI.Xaml.DependencyProperty IsBackButtonEnabledProperty { get; } =
		Microsoft.UI.Xaml.DependencyProperty.Register(
			nameof(IsBackButtonEnabled), typeof(bool),
			typeof(global::Microsoft.UI.Xaml.Controls.TitleBar),
			new Microsoft.UI.Xaml.FrameworkPropertyMetadata(default(bool)));
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public static global::Microsoft.UI.Xaml.DependencyProperty IsBackButtonVisibleProperty { get; } =
		Microsoft.UI.Xaml.DependencyProperty.Register(
			nameof(IsBackButtonVisible), typeof(bool),
			typeof(global::Microsoft.UI.Xaml.Controls.TitleBar),
			new Microsoft.UI.Xaml.FrameworkPropertyMetadata(default(bool)));
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public static global::Microsoft.UI.Xaml.DependencyProperty IsPaneToggleButtonVisibleProperty { get; } =
		Microsoft.UI.Xaml.DependencyProperty.Register(
			nameof(IsPaneToggleButtonVisible), typeof(bool),
			typeof(global::Microsoft.UI.Xaml.Controls.TitleBar),
			new Microsoft.UI.Xaml.FrameworkPropertyMetadata(default(bool)));
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public static global::Microsoft.UI.Xaml.DependencyProperty LeftHeaderProperty { get; } =
		Microsoft.UI.Xaml.DependencyProperty.Register(
			nameof(LeftHeader), typeof(global::Microsoft.UI.Xaml.UIElement),
			typeof(global::Microsoft.UI.Xaml.Controls.TitleBar),
			new Microsoft.UI.Xaml.FrameworkPropertyMetadata(default(global::Microsoft.UI.Xaml.UIElement)));
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public static global::Microsoft.UI.Xaml.DependencyProperty RightHeaderProperty { get; } =
		Microsoft.UI.Xaml.DependencyProperty.Register(
			nameof(RightHeader), typeof(global::Microsoft.UI.Xaml.UIElement),
			typeof(global::Microsoft.UI.Xaml.Controls.TitleBar),
			new Microsoft.UI.Xaml.FrameworkPropertyMetadata(default(global::Microsoft.UI.Xaml.UIElement)));
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public static global::Microsoft.UI.Xaml.DependencyProperty SubtitleProperty { get; } =
		Microsoft.UI.Xaml.DependencyProperty.Register(
			nameof(Subtitle), typeof(string),
			typeof(global::Microsoft.UI.Xaml.Controls.TitleBar),
			new Microsoft.UI.Xaml.FrameworkPropertyMetadata(default(string)));
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public static global::Microsoft.UI.Xaml.DependencyProperty TemplateSettingsProperty { get; } =
		Microsoft.UI.Xaml.DependencyProperty.Register(
			nameof(TemplateSettings), typeof(global::Microsoft.UI.Xaml.Controls.TitleBarTemplateSettings),
			typeof(global::Microsoft.UI.Xaml.Controls.TitleBar),
			new Microsoft.UI.Xaml.FrameworkPropertyMetadata(default(global::Microsoft.UI.Xaml.Controls.TitleBarTemplateSettings)));
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public static global::Microsoft.UI.Xaml.DependencyProperty TitleProperty { get; } =
		Microsoft.UI.Xaml.DependencyProperty.Register(
			nameof(Title), typeof(string),
			typeof(global::Microsoft.UI.Xaml.Controls.TitleBar),
			new Microsoft.UI.Xaml.FrameworkPropertyMetadata(default(string)));
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public TitleBar() : base()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Xaml.Controls.TitleBar", "TitleBar.TitleBar()");
		}
#endif
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TitleBar.TitleBar()
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TitleBar.Title.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TitleBar.Title.set
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TitleBar.Subtitle.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TitleBar.Subtitle.set
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TitleBar.IconSource.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TitleBar.IconSource.set
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TitleBar.LeftHeader.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TitleBar.LeftHeader.set
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TitleBar.Content.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TitleBar.Content.set
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TitleBar.RightHeader.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TitleBar.RightHeader.set
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TitleBar.IsBackButtonVisible.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TitleBar.IsBackButtonVisible.set
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TitleBar.IsBackButtonEnabled.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TitleBar.IsBackButtonEnabled.set
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TitleBar.IsPaneToggleButtonVisible.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TitleBar.IsPaneToggleButtonVisible.set
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TitleBar.TemplateSettings.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TitleBar.BackRequested.add
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TitleBar.BackRequested.remove
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TitleBar.PaneToggleRequested.add
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TitleBar.PaneToggleRequested.remove
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TitleBar.TitleProperty.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TitleBar.SubtitleProperty.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TitleBar.IconSourceProperty.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TitleBar.LeftHeaderProperty.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TitleBar.ContentProperty.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TitleBar.RightHeaderProperty.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TitleBar.IsBackButtonVisibleProperty.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TitleBar.IsBackButtonEnabledProperty.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TitleBar.IsPaneToggleButtonVisibleProperty.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.TitleBar.TemplateSettingsProperty.get
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public event global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TitleBar, object> BackRequested
		{
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
			add
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Xaml.Controls.TitleBar", "event TypedEventHandler<TitleBar, object> TitleBar.BackRequested");
			}
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
			remove
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Xaml.Controls.TitleBar", "event TypedEventHandler<TitleBar, object> TitleBar.BackRequested");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public event global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TitleBar, object> PaneToggleRequested
		{
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
			add
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Xaml.Controls.TitleBar", "event TypedEventHandler<TitleBar, object> TitleBar.PaneToggleRequested");
			}
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
			remove
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Xaml.Controls.TitleBar", "event TypedEventHandler<TitleBar, object> TitleBar.PaneToggleRequested");
			}
		}
#endif
	}
}
