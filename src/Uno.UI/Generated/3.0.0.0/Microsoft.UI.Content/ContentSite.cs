// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Microsoft.UI.Content
{
#if false || false || false || false || false || false || false
	[global::Uno.NotImplemented]
#endif
	public partial class ContentSite : global::System.IDisposable, global::Microsoft.UI.IClosableNotifier
	{
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public bool ShouldApplyRasterizationScale
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool ContentSite.ShouldApplyRasterizationScale is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20ContentSite.ShouldApplyRasterizationScale");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Content.ContentSite", "bool ContentSite.ShouldApplyRasterizationScale");
			}
		}
#endif
		// Skipping already declared property ParentScale
		// Skipping already declared property OverrideScale
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public global::Microsoft.UI.Content.ContentLayoutDirection LayoutDirection
		{
			get
			{
				throw new global::System.NotImplementedException("The member ContentLayoutDirection ContentSite.LayoutDirection is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=ContentLayoutDirection%20ContentSite.LayoutDirection");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Content.ContentSite", "ContentLayoutDirection ContentSite.LayoutDirection");
			}
		}
#endif
		// Skipping already declared property IsSiteVisible
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public bool IsSiteEnabled
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool ContentSite.IsSiteEnabled is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20ContentSite.IsSiteEnabled");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Content.ContentSite", "bool ContentSite.IsSiteEnabled");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public global::Windows.Graphics.SizeInt32 ClientSize
		{
			get
			{
				throw new global::System.NotImplementedException("The member SizeInt32 ContentSite.ClientSize is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=SizeInt32%20ContentSite.ClientSize");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Content.ContentSite", "SizeInt32 ContentSite.ClientSize");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public global::System.Numerics.Vector2 ActualSize
		{
			get
			{
				throw new global::System.NotImplementedException("The member Vector2 ContentSite.ActualSize is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=Vector2%20ContentSite.ActualSize");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Content.ContentSite", "Vector2 ContentSite.ActualSize");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public global::Microsoft.UI.Content.ContentCoordinateConverter CoordinateConverter
		{
			get
			{
				throw new global::System.NotImplementedException("The member ContentCoordinateConverter ContentSite.CoordinateConverter is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=ContentCoordinateConverter%20ContentSite.CoordinateConverter");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public global::Microsoft.UI.Dispatching.DispatcherQueue DispatcherQueue
		{
			get
			{
				throw new global::System.NotImplementedException("The member DispatcherQueue ContentSite.DispatcherQueue is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=DispatcherQueue%20ContentSite.DispatcherQueue");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public global::Microsoft.UI.Content.ContentSiteEnvironment Environment
		{
			get
			{
				throw new global::System.NotImplementedException("The member ContentSiteEnvironment ContentSite.Environment is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=ContentSiteEnvironment%20ContentSite.Environment");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public bool IsConnected
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool ContentSite.IsConnected is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20ContentSite.IsConnected");
			}
		}
#endif
		// Skipping already declared property RasterizationScale
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public global::System.Numerics.Vector2 RequestedSize
		{
			get
			{
				throw new global::System.NotImplementedException("The member Vector2 ContentSite.RequestedSize is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=Vector2%20ContentSite.RequestedSize");
			}
		}
#endif
		// Skipping already declared property View
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public bool ProcessesPointerInput
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool ContentSite.ProcessesPointerInput is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20ContentSite.ProcessesPointerInput");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Content.ContentSite", "bool ContentSite.ProcessesPointerInput");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public bool ProcessesKeyboardInput
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool ContentSite.ProcessesKeyboardInput is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20ContentSite.ProcessesKeyboardInput");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Content.ContentSite", "bool ContentSite.ProcessesKeyboardInput");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public global::System.Numerics.Matrix4x4 LocalToParentTransformMatrix
		{
			get
			{
				throw new global::System.NotImplementedException("The member Matrix4x4 ContentSite.LocalToParentTransformMatrix is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=Matrix4x4%20ContentSite.LocalToParentTransformMatrix");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Content.ContentSite", "Matrix4x4 ContentSite.LocalToParentTransformMatrix");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public global::System.Numerics.Matrix4x4 LocalToClientTransformMatrix
		{
			get
			{
				throw new global::System.NotImplementedException("The member Matrix4x4 ContentSite.LocalToClientTransformMatrix is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=Matrix4x4%20ContentSite.LocalToClientTransformMatrix");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public bool IsClosed
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool ContentSite.IsClosed is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20ContentSite.IsClosed");
			}
		}
#endif
		// Forced skipping of method Microsoft.UI.Content.ContentSite.RequestedStateChanged.add
		// Forced skipping of method Microsoft.UI.Content.ContentSite.ActualSize.set
		// Forced skipping of method Microsoft.UI.Content.ContentSite.ClientSize.get
		// Forced skipping of method Microsoft.UI.Content.ContentSite.ClientSize.set
		// Forced skipping of method Microsoft.UI.Content.ContentSite.CoordinateConverter.get
		// Forced skipping of method Microsoft.UI.Content.ContentSite.DispatcherQueue.get
		// Forced skipping of method Microsoft.UI.Content.ContentSite.Environment.get
		// Forced skipping of method Microsoft.UI.Content.ContentSite.IsConnected.get
		// Forced skipping of method Microsoft.UI.Content.ContentSite.IsSiteEnabled.get
		// Forced skipping of method Microsoft.UI.Content.ContentSite.IsSiteEnabled.set
		// Forced skipping of method Microsoft.UI.Content.ContentSite.IsSiteVisible.get
		// Forced skipping of method Microsoft.UI.Content.ContentSite.IsSiteVisible.set
		// Forced skipping of method Microsoft.UI.Content.ContentSite.LayoutDirection.get
		// Forced skipping of method Microsoft.UI.Content.ContentSite.LayoutDirection.set
		// Forced skipping of method Microsoft.UI.Content.ContentSite.ActualSize.get
		// Forced skipping of method Microsoft.UI.Content.ContentSite.OverrideScale.set
		// Forced skipping of method Microsoft.UI.Content.ContentSite.ParentScale.get
		// Forced skipping of method Microsoft.UI.Content.ContentSite.ParentScale.set
		// Forced skipping of method Microsoft.UI.Content.ContentSite.RasterizationScale.get
		// Forced skipping of method Microsoft.UI.Content.ContentSite.RequestedSize.get
		// Forced skipping of method Microsoft.UI.Content.ContentSite.ShouldApplyRasterizationScale.get
		// Forced skipping of method Microsoft.UI.Content.ContentSite.ShouldApplyRasterizationScale.set
		// Forced skipping of method Microsoft.UI.Content.ContentSite.View.get
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public global::Microsoft.UI.Content.ContentDeferral GetIslandStateChangeDeferral()
		{
			throw new global::System.NotImplementedException("The member ContentDeferral ContentSite.GetIslandStateChangeDeferral() is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=ContentDeferral%20ContentSite.GetIslandStateChangeDeferral%28%29");
		}
#endif
		// Forced skipping of method Microsoft.UI.Content.ContentSite.OverrideScale.get
		// Forced skipping of method Microsoft.UI.Content.ContentSite.RequestedStateChanged.remove
		// Forced skipping of method Microsoft.UI.Content.ContentSite.LocalToClientTransformMatrix.get
		// Forced skipping of method Microsoft.UI.Content.ContentSite.LocalToParentTransformMatrix.get
		// Forced skipping of method Microsoft.UI.Content.ContentSite.LocalToParentTransformMatrix.set
		// Forced skipping of method Microsoft.UI.Content.ContentSite.ProcessesKeyboardInput.get
		// Forced skipping of method Microsoft.UI.Content.ContentSite.ProcessesKeyboardInput.set
		// Forced skipping of method Microsoft.UI.Content.ContentSite.ProcessesPointerInput.get
		// Forced skipping of method Microsoft.UI.Content.ContentSite.ProcessesPointerInput.set
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public void Dispose()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Content.ContentSite", "void ContentSite.Dispose()");
		}
#endif
		// Forced skipping of method Microsoft.UI.Content.ContentSite.IsClosed.get
		// Forced skipping of method Microsoft.UI.Content.ContentSite.Closed.add
		// Forced skipping of method Microsoft.UI.Content.ContentSite.Closed.remove
		// Forced skipping of method Microsoft.UI.Content.ContentSite.FrameworkClosed.add
		// Forced skipping of method Microsoft.UI.Content.ContentSite.FrameworkClosed.remove
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public event global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.ContentSite, global::Microsoft.UI.Content.ContentSiteRequestedStateChangedEventArgs> RequestedStateChanged
		{
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
			add
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Content.ContentSite", "event TypedEventHandler<ContentSite, ContentSiteRequestedStateChangedEventArgs> ContentSite.RequestedStateChanged");
			}
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
			remove
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Content.ContentSite", "event TypedEventHandler<ContentSite, ContentSiteRequestedStateChangedEventArgs> ContentSite.RequestedStateChanged");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public event global::Microsoft.UI.ClosableNotifierHandler Closed
		{
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
			add
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Content.ContentSite", "event ClosableNotifierHandler ContentSite.Closed");
			}
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
			remove
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Content.ContentSite", "event ClosableNotifierHandler ContentSite.Closed");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public event global::Microsoft.UI.ClosableNotifierHandler FrameworkClosed
		{
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
			add
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Content.ContentSite", "event ClosableNotifierHandler ContentSite.FrameworkClosed");
			}
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
			remove
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Content.ContentSite", "event ClosableNotifierHandler ContentSite.FrameworkClosed");
			}
		}
#endif
		// Processing: System.IDisposable
		// Processing: Microsoft.UI.IClosableNotifier
	}
}
