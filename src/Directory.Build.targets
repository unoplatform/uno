<Project>
	<Import Project="Uno.CrossTargetting.targets" />

	<PropertyGroup>
		<Product>$(AssemblyName) $(TargetFramework)</Product>
		<Product Condition="'$(UnoRuntimeIdentifier)' != ''">$(AssemblyName) ($(TargetFramework) $(UnoRuntimeIdentifier))</Product>
		<CommunityToolkitMvvmVersion>8.2.2</CommunityToolkitMvvmVersion>
	</PropertyGroup>

	<PropertyGroup>
		<!-- 
 		Ensures that AssignLinkMetadata runs before AssignTargetPaths. 
 		Otherwise, AssignTargetPath will generate a rooted path and will break embedded sources 
 		LogicalName metadata's behavior. 
 		-->
		<!-- NOTE: This code already exists in Uno.UI.Tasks.targets, but inside of uno this targets file is imported very early -->
		<!-- and then AssignTargetPathsDependsOn gets cleared by msbuild -->
		<!-- This shouldn't be happening outside of Uno where Uno.UI.Tasks.targets is imported from NuGet package at the correct time -->
		<AssignTargetPathsDependsOn>$(AssignTargetPathsDependsOn);AssignLinkMetadata</AssignTargetPathsDependsOn>
	</PropertyGroup>

	<ItemGroup Condition="$(EnableAutomaticXamlPageInclusion)">
		<Page Include="**/*.xaml" Exclude="$(DefaultItemExcludes);$(DefaultExcludesInProjectFolder);$(PageExclusions)" />
		<None Remove="**/*.xaml" />
	</ItemGroup>

	<ItemGroup Condition="'$(XamlMergeOutputFile)'!=''">
		<XamlMergeInput Include="@(Page)" Exclude="@(_NonMergedXamlResources)" />
	</ItemGroup>

	<ItemGroup>
		<UpToDateCheckInput Include="@(Page)" />
	</ItemGroup>

	<!--
	Comment out this section if you need to update Resource.designer.cs files.
	See DEVELOPMENT.md#Android for details.
	-->
	<Choose>
		<When Condition="'$(TargetPlatformIdentifier)' == 'Android' and '$(AndroidApplication)' != 'true'">
			<PropertyGroup >
				<AndroidGenerateResourceDesigner>false</AndroidGenerateResourceDesigner>
				<AndroidUseIntermediateDesignerFile>false</AndroidUseIntermediateDesignerFile>
			</PropertyGroup>
		</When>
		<Otherwise>
			<PropertyGroup>
				<!--
				This works around the fact that AndroidResgenFile is
				automatically included as compiled file, even if AndroidUseIntermediateDesignerFile
				is set to true.
				-->
				<AndroidUseIntermediateDesignerFile>True</AndroidUseIntermediateDesignerFile>
				<AndroidResgenFile>obj\$(TargetFramework)\Resources\Resource.Designer.cs</AndroidResgenFile>
			</PropertyGroup>
		</Otherwise>
	</Choose>

	<Target Name="AndroidResourceGenWorkaround_16_2" AfterTargets="_UpdateAndroidResgen" Condition="'$(AndroidUseIntermediateDesignerFile)'=='True' and !Exists($(_AndroidResourceDesignerFile))">
		<WriteLinesToFile File="$(_AndroidResourceDesignerFile)" Lines="// Empty Content from uno.ui Directory.Build.targets." />
	</Target>

	<PropertyGroup>
		<MSTestVersion>3.8.3</MSTestVersion>

		<SkiaSharpVersion>3.119.0-preview.1.2</SkiaSharpVersion>
		<HarfbuzzSharpVersion>8.3.1.1-preview.1.2</HarfbuzzSharpVersion>
	</PropertyGroup>

	<ItemGroup>
		<PackageReference Update="Microsoft.NETCore.UniversalWindowsPlatform" Version="6.1.9" />
		<!-- Keep aligned with MSBuild extras' default ExtrasUwpMetaPackageVersion -->
		<PackageReference Update="Uno.Core.Extensions" Version="4.0.1" />
		<PackageReference Update="Uno.Core.Extensions.Logging" Version="4.0.1" />
		<PackageReference Update="Uno.Core.Extensions.Logging.Singleton" Version="4.0.1" />
		<PackageReference Update="Uno.Core.Extensions.Disposables" Version="4.0.1" />
		<PackageReference Update="Uno.Core.Extensions.Compatibility" Version="4.0.1" />
		<PackageReference Update="Uno.Diagnostics.Eventing" Version="2.0.1" />
		<PackageReference Update="Uno.Wasm.Bootstrap" Version="9.0.16" />
		<PackageReference Update="MSTest" Version="$(MSTestVersion)" />
		<PackageReference Update="MSTest.TestFramework" Version="$(MSTestVersion)" />
		<PackageReference Update="MSTest.TestAdapter" Version="$(MSTestVersion)" />
		<PackageReference Update="MSTest.Analyzers" Version="$(MSTestVersion)" />
		<PackageReference Update="Microsoft.Testing.Extensions.HangDump" Version="1.6.3" />

		<PackageReference Update="Uno.MonoAnalyzers" Version="1.0.0" PrivateAssets="all" />
		<PackageReference Update="Uno.Wasm.WebSockets" Version="1.1.0" />
		<PackageReference Update="Microsoft.TypeScript.MSBuild" Version="4.3.5" />
		<PackageReference Update="NUnit" Version="3.14.0" />
		<PackageReference Update="NUnit3TestAdapter" Version="5.0.0" />
		<PackageReference Update="NunitXml.TestLogger" Version="3.1.15" />
		<PackageReference Update="Microsoft.Testing.Extensions.TrxReport" Version="1.6.3" />
		<PackageReference Update="Uno.UITest" Version="1.1.0-dev.70" />
		<PackageReference Update="Uno.UITest.Selenium" Version="1.1.0-dev.70" />
		<PackageReference Update="Uno.UITest.Xamarin" Version="1.1.0-dev.70" />
		<PackageReference Update="Uno.UITest.Helpers" Version="1.1.0-dev.70" />
		<PackageReference Update="Uno.Fonts.Fluent" version="2.6.1" />
		<PackageReference Update="Uno.Resizetizer" Version="1.2.0-dev.72" />
		<PackageReference Update="Xamarin.DuoSdk" Version="0.0.3.4" />
		<PackageReference Update="Xamarin.UITest" Version="4.3.5" />
		<PackageReference Update="Xamarin.TestCloud.Agent" Version="0.23.2" />
		<PackageReference Update="System.Numerics.Vectors" Version="4.5.0" />
		<PackageReference Update="Microsoft.Windows.Compatibility" Version="9.0.0-rc.2.24474.4" />
		<PackageReference Update="System.Private.Uri" Version="4.3.2" />
		<PackageReference Update="System.Net.Http" Version="4.3.4" />
		<PackageReference Update="System.Text.RegularExpressions" Version="4.3.1" />
		<PackageReference Update="NuGet.Packaging" Version="6.3.4" />
		<PackageReference Update="System.Formats.Asn1" Version="8.0.1" />
		<PackageReference Update="System.Text.Json" Version="8.0.5" />

		<PackageReference Update="SkiaSharp.Views" Version="$(SkiaSharpVersion)" />
		<PackageReference Update="SkiaSharp.Views.Uno" Version="$(SkiaSharpVersion)" />
		<PackageReference Update="SkiaSharp.Views.Uno.WinUI" Version="$(SkiaSharpVersion)" />
		<PackageReference Update="SkiaSharp.Views.WPF" Version="$(SkiaSharpVersion)"  />
		<PackageReference Update="SkiaSharp" Version="$(SkiaSharpVersion)"  />
		<PackageReference Update="SkiaSharp.NativeAssets.Linux" Version="$(SkiaSharpVersion)" />
		<PackageReference Update="SkiaSharp.Skottie" Version="$(SkiaSharpVersion)" />
		<PackageReference Update="SkiaSharp.NativeAssets.Android" Version="$(SkiaSharpVersion)"  />
		<PackageReference Update="SkiaSharp.NativeAssets.iOS" Version="$(SkiaSharpVersion)" />
		<PackageReference Update="SkiaSharp.NativeAssets.WebAssembly" Version="$(SkiaSharpVersion)" />
		<PackageReference Update="SkiaSharp.NativeAssets.MacCatalyst" Version="$(SkiaSharpVersion)" />
		<PackageReference Update="SkiaSharp.NativeAssets.macos" Version="$(SkiaSharpVersion)" />
		<PackageReference Update="SkiaSharp.NativeAssets.tvOS" Version="$(SkiaSharpVersion)" />

		<PackageReference Update="HarfBuzzSharp" Version="$(HarfbuzzSharpVersion)" />
		<PackageReference Update="HarfBuzzSharp.NativeAssets.macOS" Version="$(HarfbuzzSharpVersion)" />
		<PackageReference Update="HarfBuzzSharp.NativeAssets.WebAssembly" Version="$(HarfbuzzSharpVersion)" />
		<PackageReference Update="HarfBuzzSharp.NativeAssets.Linux" Version="$(HarfbuzzSharpVersion)" />
		<PackageReference Update="harfbuzzsharp.nativeassets.ios" Version="$(HarfbuzzSharpVersion)" />
		<PackageReference Update="harfbuzzsharp.nativeassets.tvos" Version="$(HarfbuzzSharpVersion)" />

		<PackageReference Condition=" '$(TargetFramework)' == '$(NetPrevious)' " Update="Microsoft.Win32.SystemEvents" Version="8.0.0" />
		<PackageReference Condition=" '$(TargetFramework)' == '$(NetCurrent)' " Update="Microsoft.Win32.SystemEvents" Version="9.0.0" />

		<PackageReference Update="Svg.Custom" Version="2.0.0.4" />
		<PackageReference Update="Svg.Model" Version="2.0.0.4" />
		<PackageReference Update="GtkSharp" Version="3.24.24.38" />
		<PackageReference Update="System.Json" Version="4.7.1" />
		<PackageReference Update="FluentAssertions" Version="5.10.3" />
		<PackageReference Update="Microsoft.Extensions.Logging.Console" Version="5.0.0" />
		<PackageReference Update="Microsoft.Extensions.Logging.Debug" Version="5.0.0" />
		<PackageReference Update="Uno.Extensions.Logging.WebAssembly.Console" Version="1.7.0" />
		<PackageReference Update="Uno.Extensions.Logging.WebAssembly.OSLog" Version="1.4.0" />
		<PackageReference Update="Microsoft.NETFramework.ReferenceAssemblies" Version="1.0.3" />
		<PackageReference Update="Microsoft.NETFramework.ReferenceAssemblies.net48" Version="1.0.3" />
		<PackageReference Update="Microsoft.NETFramework.ReferenceAssemblies.net472" Version="1.0.3" />
		<PackageReference Update="Microsoft.NETFramework.ReferenceAssemblies.net461" Version="1.0.3" />
		<PackageReference Update="Newtonsoft.Json" Version="13.0.3" />
		<PackageReference Update="CommunityToolkit.Mvvm" Version="$(CommunityToolkitMvvmVersion)" />
		<PackageReference Update="System.CommandLine" Version="2.0.0-beta4.22272.1" />
		<PackageReference Update="Microsoft.Web.WebView2" Version="1.0.2592.51" />
	</ItemGroup>

	<ItemGroup Condition=" '$(TargetFramework)' == 'net8.0-android'">
		<PackageReference Update="Xamarin.AndroidX.AppCompat" Version="1.7.0.1" />
		<PackageReference Update="Xamarin.AndroidX.RecyclerView" Version="1.2.1.3" />
		<PackageReference Update="Xamarin.AndroidX.Lifecycle.LiveData" Version="2.3.1.3" />
		<PackageReference Update="Xamarin.AndroidX.SwipeRefreshLayout" Version="1.1.0.10" />
	</ItemGroup>

	<ItemGroup Condition=" '$(TargetFramework)' == 'net9.0-android'">
		<PackageReference Update="Xamarin.AndroidX.AppCompat" Version="1.7.0.1" />
		<PackageReference Update="Xamarin.AndroidX.RecyclerView" Version="1.2.1.3" />
		<PackageReference Update="Xamarin.AndroidX.Lifecycle.LiveData" Version="2.3.1.3" />
		<PackageReference Update="Xamarin.AndroidX.SwipeRefreshLayout" Version="1.1.0.10" />
	</ItemGroup>

	<ItemGroup Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'ios' OR $([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'macos' OR $([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'tvos'">
		<!-- Workaround: For iOS/macOS builds, System.Private.Uri is pulled implicitly with a vulnerable version -->
		<!-- There is a bit of related discussions in https://github.com/dotnet/sdk/issues/30659 -->
		<PackageReference Include="System.Private.Uri" Version="4.3.2" />
	</ItemGroup>

	<Target Name="ValidateSolutionPath" BeforeTargets="Build">
		<Error Condition="$(MSBuildThisFileDirectory.Contains(' '))"
			 Text="The Uno.UI Solution cannot build with a space in the path. Consider changing to a path without spaces."/>
	</Target>

	<Target Name="WorkaroundMissingWinAppSDKDLL"
					BeforeTargets="BinPlaceBootstrapDll">

		<!-- Workaround for
	  C:\a\.nuget\microsoft.windowsappsdk.foundation\1.0.0-experimental1\build\Microsoft.WindowsAppSDK.Bootstrap.targets(11,5):
	  error MSB3030: Could not copy the file "C:\a\.nuget\microsoft.windowsappsdk.foundation\1.0.0-experimental1\build\..\runtimes\lib\native\AnyCPU\Microsoft.WindowsAppSDK.Bootstrap.dll" because it was not found.
	  -->
		<CreateProperty Value="x86">
			<Output
				TaskParameter="Value"
				PropertyName="_WindowsAppSDKFoundationPlatform" />
		</CreateProperty>
	</Target>

	<Target Name="WorkaroundMissingWinAppSDKDLL_2"
				  BeforeTargets="BeforeBuild">

		<!-- Workaround for
         C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin\Microsoft.Common.CurrentVersion.targets(4559,5):
				 error MSB3030: Could not copy the file "C:\a\.nuget\microsoft.windowsappsdk\1.0.0-preview3\build\..\runtimes\lib\native\AnyCPU\Microsoft.WindowsAppRuntime.Bootstrap.dll" because it was not found.
	  -->
		<ItemGroup>
			<_itemToRemove Include="@(ReferenceCopyLocalPaths)" Condition="'%(FileName)%(Extension)'=='Microsoft.WindowsAppRuntime.Bootstrap.dll'" />
			<ReferenceCopyLocalPaths Remove="@(_itemToRemove)"/>
		</ItemGroup>
	</Target>

	<!-- Workaround for https://github.com/xamarin/xamarin-macios/issues/17005 -->
	<Target Name="_DisableRemoteBuildForLibraries" BeforeTargets="_SayHello" Condition="'$(OutputType)'=='Library'">
		<PropertyGroup>
			<IsRemoteBuild>false</IsRemoteBuild>
			<ServerAddress></ServerAddress>
		</PropertyGroup>
	</Target>

	<Import Project="Workaround-43339.targets" />

	<ItemDefinitionGroup>
		<ProjectReference>
			<!-- Avoid copying all outputs to every dependent projects, for build performance -->
			<Private Condition="'$(OutputType)' == 'library' AND '$(DisablePrivateProjectReference)'!='true'">false</Private>
		</ProjectReference>
	</ItemDefinitionGroup>

</Project>
