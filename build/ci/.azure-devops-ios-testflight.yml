parameters:
  vmImage: ''
  xCodeRootTest: ''
  xCodeRootBuild: ''

jobs:
- job: iOS_TestFlight
  displayName: 'Build Samples App - TestFlight'
  condition: startsWith(variables['Build.SourceBranch'], 'refs/heads/master')

  strategy:
    matrix:
      Native:
        _BuildFolder: '$(BUILD.SOURCESDIRECTORY)/src/SamplesApp/SamplesApp.netcoremobile'
        _ArtifactName: 'ios-testflight'
        _VariantName: 'Native'

      Skia:
        _BuildFolder: '$(BUILD.SOURCESDIRECTORY)/src/SamplesApp/SamplesApp.Skia.netcoremobile'
        _ArtifactName: 'ios-skia-testflight'
        _VariantName: 'Skia'

  pool:
    vmImage: ${{ parameters.vmImage }}

  variables:
    - group: unoplatform.apple.ios.appstore.distribution
    - name: CI_Build
      value: true
    - name: SourceLinkEnabled
      value: false
    - name: NUGET_PACKAGES
      value: $(Pipeline.Workspace)/.nuget/packages

  steps:
  - checkout: self
    clean: true

  - task: InstallAppleCertificate@2
    displayName: Install Certificate
    inputs:
      certSecureFile: UnoPlatform-Apple-Distribution.p12
      certPwd: $(appleappstorecertificatepassword)
      keychain: temp

  - task: InstallAppleProvisioningProfile@1
    displayName: Install Provisioning Profile
    inputs:
      provisioningProfileLocation: secureFiles
      provProfileSecureFile: 'Uno_Dev_Samples.mobileprovision'

  - task: InstallAppleProvisioningProfile@1
    displayName: Install Provisioning Profile
    inputs:
      provisioningProfileLocation: secureFiles
      provProfileSecureFile: 'Uno_Dev_Samples_Skia.mobileprovision'

  - template: templates/nuget-cache.yml
    parameters:
      nugetPackages: $(NUGET_PACKAGES)

  - template: templates/dotnet-mobile-install-mac.yml
    parameters:
      UnoCheckParameters: '--tfm net9.0-ios'

  - template: templates/ios-build-select-version.yml
    parameters:
      xCodeRoot: ${{ parameters.xCodeRootBuild }}

  - template: templates/gitversion.yml

  - bash: |
      cd $(_BuildFolder)
      dotnet publish \
        -f net9.0-ios \
        -c Release \
        -p:BuildForTestFlight=true \
        -p:UnoTargetFrameworkOverride=net9.0-ios \
        /bl:$(build.artifactstagingdirectory)/ios-netcoremobile-sampleapp-testflight.binlog

    displayName: Build for TestFlight

    env:
      BUILD_SOURCESDIRECTORY: "$(build.sourcesdirectory)"
      AGENT_TEMPDIRECTORY: "$(Agent.TempDirectory)"
      BUILD_ARTIFACTSTAGINGDIRECTORY: "$(build.artifactstagingdirectory)"

  - task: CopyFiles@2
    inputs:
      SourceFolder: $(_BuildFolder)/bin/Release/net9.0-ios/ios-arm64/publish
      Contents: '**'
      TargetFolder: $(build.artifactstagingdirectory)/TestFlight
      CleanTargetFolder: false
      OverWrite: false
      flattenFolders: false

  - task: PublishBuildArtifacts@1
    condition: always()
    retryCountOnTaskFailure: 3
    inputs:
      PathtoPublish: $(build.artifactstagingdirectory)
      ArtifactName: $(_ArtifactName)
      ArtifactType: Container
