parameters:
  vmImage: ''
  vmMacImage: ''
  vmMacImageTest: ''
  vmLinuxImage: ''
  vmLinuxPool: ''
  xCodeRootTest: ''
  xCodeRootBuild: ''
  poolName: ''
  UNO_UWP_BUILD: ''
  XAML_FLAVOR_BUILD: ''

jobs:

- job: Skia_Linux_Screenshot_Tests
  displayName: 'Snapshot Tests'
  timeoutInMinutes: 60
  cancelTimeoutInMinutes: 1

  pool:
    vmImage: ${{ parameters.vmLinuxImage }}

  condition: and(succeeded(), eq(variables['UNO_UWP_BUILD'], 'false'))

  variables:
    SamplesAppArtifactName: skia-generic-samples-app-WinUI
    SamplesAppArtifactPath: $(build.sourcesdirectory)/build/$(SamplesAppArtifactName)
    UNO_UWP_BUILD: ${{ parameters.UNO_UWP_BUILD }}
    XAML_FLAVOR_BUILD: ${{ parameters.XAML_FLAVOR_BUILD }}

  steps:
  - checkout: none

  - task: DownloadPipelineArtifact@2
    displayName: Downloading $(SamplesAppArtifactName)
    inputs:
      artifact: $(SamplesAppArtifactName)
      path: $(build.sourcesdirectory)/build/$(SamplesAppArtifactName)

  - template: ../templates/linux-install-deps.yml

  - template: ../templates/dotnet-install.yml
    parameters:
      haveCheckout: false

  - script: |
        cd $(build.sourcesdirectory)/build/$(SamplesAppArtifactName)
        xvfb-run --auto-servernum --server-args='-screen 0 1280x1024x24' sh -c '{ fluxbox & } ; dotnet SamplesApp.Skia.Generic.dll --auto-screenshots=$(build.artifactstagingdirectory)/screenshots/skia-linux-screenshots'

    displayName: Run Snapshot Tests

  - task: PublishBuildArtifacts@1
    condition: always()
    retryCountOnTaskFailure: 3
    inputs:
      PathtoPublish: $(build.artifactstagingdirectory)
      ArtifactName: uitests-results
      ArtifactType: Container

- job: Skia_Linux_Runtime_Tests_Build
  displayName: 'Runtime Tests'
  timeoutInMinutes: 60
  cancelTimeoutInMinutes: 1

  pool:
    vmImage: ${{ parameters.vmLinuxImage }}

  variables:
    SamplesAppArtifactName: skia-generic-samples-app-$(XAML_FLAVOR_BUILD)
    SamplesAppArtifactPath: $(build.sourcesdirectory)/build/$(SamplesAppArtifactName)

    UNO_UWP_BUILD: ${{ parameters.UNO_UWP_BUILD }}
    XAML_FLAVOR_BUILD: ${{ parameters.XAML_FLAVOR_BUILD }}

  steps:

  - task: DownloadPipelineArtifact@2
    displayName: Downloading $(SamplesAppArtifactName)
    inputs:
      artifact: $(SamplesAppArtifactName)
      path: $(build.sourcesdirectory)/build/$(SamplesAppArtifactName)

  - task: DownloadBuildArtifacts@0
    condition: gt(variables['System.JobAttempt'], 1)
    continueOnError: true
    displayName: Download previous test runs failed tests
    inputs:
        artifactName: uitests-failure-results
        downloadPath: '$(build.sourcesdirectory)/build'

  - template: ../templates/dotnet-install.yml
  - template: ../templates/linux-install-deps.yml

  - script: |
      chmod +x build/test-scripts/linux-skia-runtime-tests.sh
      build/test-scripts/linux-skia-runtime-tests.sh
    displayName: Run Runtime Tests
    env:
      SamplesAppArtifactPath: $(SamplesAppArtifactPath)
      SamplesAppArtifactName: $(SamplesAppArtifactName)

  - task: PublishTestResults@2
    condition: always()
    inputs:
      testRunTitle: 'Linux Skia Runtime Tests'
      testResultsFormat: 'NUnit'
      testResultsFiles: '$(build.sourcesdirectory)/build/skia-linux-runtime-tests-results.xml'
      failTaskOnFailedTests: true
      failTaskOnMissingResultsFile: true

  - task: PublishBuildArtifacts@1
    condition: always()
    displayName: Publish Failed Tests Results
    retryCountOnTaskFailure: 3
    inputs:
      PathtoPublish: $(build.sourcesdirectory)/build/uitests-failure-results
      ArtifactName: uitests-failure-results
      ArtifactType: Container
