parameters:
  vmImage: ''
  xCodeRootTest: ''
  xCodeRootBuild: ''

  # Align with SnapShotTestGenerator.GroupCount
  SNAPSHOT_GROUPS:
  - key: '0'
    value: '01'
  - key: '1'
    value: '02'
  - key: '2'
    value: '03'
  - key: '3'
    value: '04'
  - key: '4'
    value: '05'

  # Runtime Test Groups
  UITEST_RUNTIME_TEST_GROUP_COUNT: 8
  RUNTIME_TESTS_GROUPS:
  - key: '0'
    value: '01'
  - key: '1'
    value: '02'
  - key: '2'
    value: '03'
  - key: '3'
    value: '04'
  - key: '4'
    value: '05'
  - key: '5'
    value: '06'
  - key: '6'
    value: '07'
  - key: '7'
    value: '08'

  # Automated Test Groups
  AUTOMATED_TESTS_GROUPS:
  - key: '1'
    value: '01'
  - key: '2'
    value: '02'
  - key: '3'
    value: '03'
  - key: '4'
    value: '04'
  - key: '5'
    value: '05'

jobs:
- job: iOS_Build
  displayName: 'Build Samples App'

  pool:
    vmImage: ${{ parameters.vmImage }}

  variables:
    CI_Build: true
    SourceLinkEnabled: falses
    NUGET_PACKAGES: $(Pipeline.Workspace)/.nuget/packages

  steps:
  - checkout: self
    clean: true

  - template: ../templates/nuget-cache.yml
    parameters:
      nugetPackages: $(NUGET_PACKAGES)

  - template: ../templates/dotnet-mobile-install-mac.yml
    parameters:
      UnoCheckParameters: '--tfm net10.0-ios'

  - template: ../templates/ios-build-select-version.yml
    parameters:
      xCodeRoot: ${{ parameters.xCodeRootBuild }}

  - template: ../templates/gitversion.yml

  - bash: |
      $(build.sourcesdirectory)/build/test-scripts/ios-uitest-build.sh

    displayName: Build Samples App

    env:
      BUILD_SOURCESDIRECTORY: "$(build.sourcesdirectory)"
      BUILD_ARTIFACTSTAGINGDIRECTORY: "$(build.artifactstagingdirectory)"

  - task: CopyFiles@2
    inputs:
      SourceFolder: $(build.sourcesdirectory)/src/SamplesApp/SamplesApp.netcoremobile/bin/Release/net9.0-ios/iossimulator-x64/SamplesApp.app
      Contents: '**'
      TargetFolder: $(build.artifactstagingdirectory)/bin/SamplesApp.app
      CleanTargetFolder: false
      OverWrite: false
      flattenFolders: false

  - task: PublishPipelineArtifact@1
    displayName: 'Publish iOS Binaries'
    retryCountOnTaskFailure: 3
    inputs:
      targetPath: $(build.artifactstagingdirectory)/bin
      ArtifactName: ios-uitest-build

  - task: PublishBuildArtifacts@1
    displayName: 'Publish iOS build logs'
    condition: always()
    retryCountOnTaskFailure: 3
    inputs:
      PathtoPublish: $(build.artifactstagingdirectory)/logs
      ArtifactName: ios-uitest-build-logs
      ArtifactType: Container

##
## Automated tests
##
- ${{ each AutomatedTestGroup in parameters.AUTOMATED_TESTS_GROUPS }}:
  - template: .azure-devops-tests-ios-runner.yml
    parameters:
      nugetPackages: $(NUGET_PACKAGES)
      JobName: 'iOS_Automated_Tests_Group_${{ AutomatedTestGroup.value }}'
      JobDisplayName: 'Automated Tests ${{ AutomatedTestGroup.key }}'
      TestRunName: 'iOS Native Automated Tests ${{ AutomatedTestGroup.key }}'
      JobTimeoutInMinutes: 90
      SamplesAppArtifactName: 'ios-uitest-build'
      vmImage: ${{ parameters.vmImageTest }}
      UITEST_SNAPSHOTS_ONLY: false
      UITEST_AUTOMATED_GROUP: ${{ AutomatedTestGroup.key }}
      UITEST_TEST_TIMEOUT: '20m'
      UITEST_ALLOW_RERUN: 'false'
      SAMPLESAPP_BUNDLE_ID: 'uno.platform.samplesdev'
      xCodeRoot: ${{ parameters.xCodeRootTest }}
      dependsOn:
        - iOS_Build

##
## Runtime tests
##
- ${{ each RuntimeTestGroup in parameters.RUNTIME_TESTS_GROUPS }}:
  - template: .azure-devops-tests-ios-runner.yml
    parameters:
      nugetPackages: $(NUGET_PACKAGES)
      JobName: 'iOS_Automated_Tests_Runtime_Tests_group_${{ RuntimeTestGroup.value }}'
      JobDisplayName: 'Runtime Tests ${{ RuntimeTestGroup.key }}'
      TestRunName: 'iOS Native Runtime Tests ${{ RuntimeTestGroup.key }}'
      JobTimeoutInMinutes: 90
      SamplesAppArtifactName: 'ios-uitest-build'
      vmImage: ${{ parameters.vmImageTest }}
      UITEST_SNAPSHOTS_ONLY: false
      UITEST_TEST_TIMEOUT: '90m'
      UITEST_AUTOMATED_GROUP: RuntimeTests
      UITEST_RUNTIME_TEST_GROUP: ${{ RuntimeTestGroup.key }}
      UITEST_RUNTIME_TEST_GROUP_COUNT: ${{ parameters.UITEST_RUNTIME_TEST_GROUP_COUNT }}
      UITEST_ALLOW_RERUN: 'false'
      SAMPLESAPP_BUNDLE_ID: 'uno.platform.samplesdev'
      xCodeRoot: ${{ parameters.xCodeRootTest }}
      dependsOn:
        - iOS_Build

# Disabled for benchmkarks timeout
# - template: .azure-devops-tests-ios-runner.yml
#   parameters:
#     nugetPackages: $(NUGET_PACKAGES)
#     JobName: 'iOS_Automated_Tests_Benchmarks'
#     JobDisplayName: 'iOS Automated Benchmarks'
#     JobTimeoutInMinutes: 40
#     vmImage: ${{ parameters.vmImageTest }}
#     UITEST_SNAPSHOTS_ONLY: false
#     UITEST_AUTOMATED_GROUP: Benchmarks
#     SAMPLESAPP_BUNDLE_ID: 'uno.platform.samplesdev'
#     xCodeRoot: ${{ parameters.xCodeRootTest }}

- ${{ each snapshotGroup in parameters.SNAPSHOT_GROUPS }}:
  - template: .azure-devops-tests-ios-runner.yml
    parameters:
      nugetPackages: $(NUGET_PACKAGES)
      JobName: 'iOS_Snapshot_Tests_Group_${{ snapshotGroup.value }}'
      JobDisplayName: 'Snapshot Tests ${{ snapshotGroup.key }}'
      TestRunName: 'iOS Native Snapshot Tests ${{ snapshotGroup.key }}'
      JobTimeoutInMinutes: 60
      SamplesAppArtifactName: 'ios-uitest-build'
      vmImage: ${{ parameters.vmImageTest }}
      UITEST_SNAPSHOTS_ONLY: true
      UITEST_SNAPSHOTS_GROUP: '0${{ snapshotGroup.key }}' # Example: 01, 02, 03, 04, 05
      UITEST_TEST_TIMEOUT: '10m'
      UITEST_ALLOW_RERUN: 'false'
      SAMPLESAPP_BUNDLE_ID: 'uno.platform.samplesdev'
      xCodeRoot: ${{ parameters.xCodeRootTest }}
      dependsOn:
        - iOS_Build
