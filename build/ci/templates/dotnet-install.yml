parameters:
  defaultDotNetSdkVersion: "10.0.100-rc.2.25502.107"
  haveCheckout: true

steps:
  - bash: |
      rm global.json
      cp build/ci/net10/global.json global.json
    displayName: "Using .NET 10 global.json"
    condition: ${{ eq(parameters.haveCheckout, true) }}

  - pwsh: |
      echo "##vso[task.setvariable variable=DOTNET_INSTALL_DIR;]$(Build.SourcesDirectory)/.dotnet"
    displayName: "Set DOTNET_INSTALL_DIR for macOS/Linux"
    condition: or(eq(variables['Agent.OS'], 'Linux'), eq(variables['Agent.OS'], 'Darwin'))

  - pwsh: |
      echo "##vso[task.setvariable variable=DOTNET_INSTALL_DIR;]$(Build.SourcesDirectory)\.dotnet"
    displayName: "Set DOTNET_INSTALL_DIR for Windows"
    condition: eq(variables['Agent.OS'], 'Windows_NT')

  - task: UseDotNet@2
    displayName: 'Install .NET 9 Runtime'
    retryCountOnTaskFailure: 3
    inputs:
      packageType: sdk
      useGlobalJson: false
      includePreviewVersions: false
      version: 9.0.300
      installationPath: $(DOTNET_INSTALL_DIR)

  - task: UseDotNet@2
    displayName: 'Use .NET SDK from global.json'
    retryCountOnTaskFailure: 3
    condition: ${{ eq(parameters.haveCheckout, true) }}
    inputs:
      packageType: sdk
      useGlobalJson: true
      includePreviewVersions: true
      installationPath: $(DOTNET_INSTALL_DIR)

  - task: UseDotNet@2
    displayName: 'Use .NET SDK ${{ parameters.defaultDotNetSdkVersion }}'
    retryCountOnTaskFailure: 3
    condition: ${{ ne(parameters.haveCheckout, true) }}
    inputs:
      packageType: sdk
      useGlobalJson: false
      includePreviewVersions: true
      version: ${{ parameters.defaultDotNetSdkVersion }}
      installationPath: $(DOTNET_INSTALL_DIR)
