stages:
- stage: Setup
  displayName: Setup
  jobs:
  - job: Validations
  
    pool:
      vmImage: $(linuxVMImage)

    variables:
      npm_config_cache: $(Pipeline.Workspace)/.npm

    steps:
    - checkout: self
      clean: true

    - task: Cache@2
      inputs:
        key: validation | $(Agent.OS) | $(Build.SourcesDirectory)/build/ci/**
        path: $(npm_config_cache)
      displayName: Cache npm packages

    - template: templates/gitversion-run.yml
    - template: setup/.azure-devops-setup-commitsar.yml
    - template: setup/.azure-devops-setup-spell-check.yml
    - template: setup/.azure-devops-setup-markdown-lint.yml

- stage: binaries_build_native_macos
  displayName: Build - Native Binaries
  dependsOn:
    - Setup

  jobs:
  - template: build/.azure-devops-build-native.yml
    parameters:
      UNO_UWP_BUILD: false
      XAML_FLAVOR_BUILD: WinUI
      macOSImageName: '$(macOSVMImage)'
 

- stage: binaries_build_winui
  displayName: Build - Managed Binaries
  dependsOn:
    - binaries_build_native_macos

  jobs:
  - template: build/.azure-devops-build-managed.yml
    parameters:
      poolName: '$(windowsScaledPool)'
      UNO_UWP_BUILD: false
      XAML_FLAVOR_BUILD: WinUI

- stage: packages_tests
  displayName: Tests - Templates
  dependsOn:
    - binaries_build_winui

  jobs: 
  - template: tests/.azure-devops-tests-templates.yml
    parameters:
      poolName: '$(windowsScaledPool)'
      vmImageWindows: $(windows2022HostedVMImage)
      vmPoolLinux: '$(linuxScaledPool)'
      macOSImageName: '$(macOSVMImage)'
      xCodeRoot: '$(xCodeRoot)'

- stage: unit_tests
  displayName: Tests - Unit Tests
  dependsOn:
    - Setup

  jobs:

  - template: tests/.azure-devops-tests-unit-tests.yml
    parameters:
      poolName: '$(windowsScaledPool)'

- stage: wasm_tests
  displayName: Tests - WebAssembly Native
  dependsOn:
    - Setup

  jobs:
  
  - template: tests/.azure-devops-tests-webassembly-native.yml
    parameters:
      poolName: '$(linuxScaledPool)'

- template: tests/.azure-devops-tests-skia-stages.yml
  parameters:
    vmImage: '$(windows2022HostedVMImage)'
    vmMacImage: '$(macOSVMImage)'
    vmMacImageTest: '$(macOSVMImage_UITests)'
    vmLinuxImage: '$(linuxVMImage)'
    vmLinuxPool: '$(linuxScaledPool)'
    poolName: '$(windowsScaledPool)'
    xCodeRootBuild: '$(xCodeRoot)'
    xCodeRootTest: '$(xCodeRoot_iOS_UITests)'
    UNO_UWP_BUILD: false
    XAML_FLAVOR_BUILD: WinUI

- stage: android_tests
  displayName: Tests - Android Native
  dependsOn:
    - Setup

  jobs:
  - template: tests/.azure-devops-tests-android-native.yml
    parameters:
      vmWindowsImage: '$(windows2019HostedVMImage)'
      vmLinuxImage: '$(linuxVMImage)'
      vmMacOSImage: '$(macOSVMImage)'
      vmLinuxPool: '$(linuxScaledPool)'
      xCodeRoot: '$(xCodeRoot)'

- stage: ios_tests
  displayName: Tests - iOS Native
  dependsOn:
    - Setup

  jobs:
  - template: tests/.azure-devops-tests-ios-native.yml
    parameters:
      vmImage: '$(macOSVMImage)'
      vmImageTest: '$(macOSVMImage_UITests)'
      xCodeRootBuild: '$(xCodeRoot)'
      xCodeRootTest: '$(xCodeRoot_iOS_UITests)'

- stage: wasdk_tests
  displayName: Tests - WinAppSDK
  dependsOn:
    - Setup

  jobs:
  - template: tests/.azure-devops-tests-winappsdk.yml
    parameters:
      poolName: '$(windows2022HostedVMImage)'

- stage: test_finalization
  displayName: Tests - Screenshots
  # This stage only run screenshot comparison, which is not relevant for unit tests and also uap_tests.
  dependsOn:
    - wasm_tests
    - ios_tests
    - android_tests
    - runtime_tests_skia_browser
    - runtime_tests_skia_android
    - runtime_tests_skia_ios
    - runtime_tests_skia_linux
    - runtime_tests_skia_windows

  jobs:
  - template: tests/.azure-devops-tests-screenshots.yml
    parameters:
      poolName: '$(windowsScaledPool)'

- stage: ios_testflight
  displayName: Publish - iOS Testflight
  dependsOn:
    - Setup

  jobs:
  - template: publish/.azure-devops-publish-ios-testflight.yml
    parameters:
      vmImage: '$(macOSVMImage)'
      vmImageTest: '$(macOSVMImage_UITests)'
      xCodeRootBuild: '$(xCodeRoot)'
      xCodeRootTest: '$(xCodeRoot_iOS_UITests)'
      
##
## Publishing
##
- stage: Publish_Dev
  displayName: 'Publish - Dev NuGet'
  condition: and(succeeded(), or(eq(variables['Build.SourceBranch'], 'refs/heads/master'), startsWith(variables['Build.SourceBranch'], 'refs/heads/feature')), not(eq(variables['build.reason'], 'PullRequest')))
  dependsOn: binaries_build_winui
  jobs:
  - template: .azure-devops-publish-nuget-dev.yml
    parameters:
      vmImage: '$(windows2022HostedVMImage)'

- stage: Publish_Prod_Dev
  displayName: 'Publish - Prod Dev NuGet'
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/heads/release/'), not(eq(variables['build.reason'], 'PullRequest')))
  dependsOn: binaries_build_winui
  jobs:
  - template: .azure-devops-publish-nuget-prod-dev.yml
    parameters:
      vmImage: '$(windows2022HostedVMImage)'
  
- stage: Publish_Prod_Public
  displayName: 'Publish - Prod NuGet.org'
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/heads/release/'), not(eq(variables['build.reason'], 'PullRequest')))
  dependsOn: Publish_Prod_Dev
  jobs:
  - template: .azure-devops-publish-nuget-prod.yml
    parameters:
      vmImage: '$(windows2022HostedVMImage)'
